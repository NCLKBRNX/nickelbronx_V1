"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/__generated__/gql.ts":
/*!**********************************!*\
  !*** ./src/__generated__/gql.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gql: function() { return /* binding */ gql; }\n/* harmony export */ });\n/* harmony import */ var _graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graphql */ \"./src/__generated__/graphql.ts\");\n/* eslint-disable */ \n/**\n * Map of all GraphQL operations in the project.\n *\n * This map has several performance disadvantages:\n * 1. It is not tree-shakeable, so it will include all operations in the project.\n * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.\n * 3. It does not support dead code elimination, so it will add unused operations.\n *\n * Therefore it is highly recommended to use the babel or swc plugin for production.\n */ const documents = {\n    \"\\n    fragment HeaderGeneralSettingsFragment on GeneralSettings {\\n      title\\n      description\\n    }\\n  \": _graphql__WEBPACK_IMPORTED_MODULE_0__.HeaderGeneralSettingsFragmentFragmentDoc,\n    \"\\n    fragment PrimaryMenuItemFragment on MenuItem {\\n      id\\n      uri\\n      path\\n      label\\n      parentId\\n      cssClasses\\n      menu {\\n        node {\\n          name\\n        }\\n      }\\n    }\\n  \": _graphql__WEBPACK_IMPORTED_MODULE_0__.PrimaryMenuItemFragmentFragmentDoc,\n    \"\\n        fragment HeroSectionBlocks on HeroSectionBlocks {\\n            __typename\\n            heroDescription\\n            heroTitle\\n            heroCta {\\n            ctaLink {\\n              target\\n              title\\n              url\\n            }\\n            ctaText\\n          }\\n        }\\n    \": _graphql__WEBPACK_IMPORTED_MODULE_0__.HeroSectionBlocksFragmentDoc,\n    \"\\n        fragment HeroVideo on HeroVideo {\\n            __typename\\n            heroVideoUri\\n          }\\n    \": _graphql__WEBPACK_IMPORTED_MODULE_0__.HeroVideoFragmentDoc,\n    \"\\n        fragment BlocksWhoWeAre on BlocksWhoWeAre {\\n            __typename\\n            subtitleWwa\\n            titleWwa\\n            descriptionWwa\\n            ctaWwa {\\n            ctaWwaLink {\\n              target\\n              title\\n              url\\n            }\\n            ctaWwaTitle\\n          }\\n        }\\n    \": _graphql__WEBPACK_IMPORTED_MODULE_0__.BlocksWhoWeAreFragmentDoc,\n    \"\\n  query GetExamplePage {\\n    generalSettings {\\n      title\\n      description\\n    }\\n    primaryMenuItems: menuItems(where: { location: PRIMARY }) {\\n      nodes {\\n        id\\n        uri\\n        path\\n        label\\n        parentId\\n        cssClasses\\n        menu {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\\n\": _graphql__WEBPACK_IMPORTED_MODULE_0__.GetExamplePageDocument,\n    \"\\n  query GetArchive($uri: String!) {\\n    nodeByUri(uri: $uri) {\\n      archiveType: __typename\\n      ... on Category {\\n        name\\n        posts {\\n          nodes {\\n            id\\n            title\\n            uri\\n          }\\n        }\\n      }\\n      ... on Tag {\\n        name\\n        posts {\\n          nodes {\\n            id\\n            title\\n            uri\\n          }\\n        }\\n      }\\n    }\\n    generalSettings {\\n      title\\n      description\\n    }\\n    primaryMenuItems: menuItems(where: { location: PRIMARY }) {\\n      nodes {\\n        id\\n        uri\\n        path\\n        label\\n        parentId\\n        cssClasses\\n        menu {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\\n\": _graphql__WEBPACK_IMPORTED_MODULE_0__.GetArchiveDocument,\n    '\\nquery GetHomePage {\\n  generalSettings {\\n    title\\n    description\\n  }\\n  primaryMenuItems: menuItems(where: {location: PRIMARY}) {\\n    nodes {\\n      id\\n      uri\\n      path\\n      label\\n      parentId\\n      cssClasses\\n      menu {\\n        node {\\n          name\\n        }\\n      }\\n    }\\n  }\\n  nickelBronxHeader {\\n    config {\\n      ctaText\\n      ctaLink\\n      brandLogo {\\n        node {\\n          sourceUrl\\n        }\\n      }\\n    }\\n  }\\n  page(id: \"cG9zdDoyMw==\") {\\n    editorBlocks {\\n      ... on AcfHeroSection {\\n        heroSectionBlocks {\\n          heroCta {\\n            ctaLink {\\n              target\\n              title\\n              url\\n            }\\n            ctaText\\n          }\\n          heroDescription\\n          heroTitle\\n        }\\n        clientId\\n      }\\n     ... on AcfHeroVideoSection {  \\n         heroVideo {\\n          heroVideoUri\\n        }\\n        clientId\\n      }\\n\\n       ... on AcfWhoWeAreSection {\\n        blocksWhoWeAre {\\n           ctaWwa {\\n            ctaWwaLink {\\n              target\\n              title\\n              url\\n            }\\n            ctaWwaTitle\\n          }\\n         subtitleWwa\\n            titleWwa\\n            descriptionWwa\\n        }\\n        clientId\\n      }\\n\\n    }\\n  }\\n}\\n': _graphql__WEBPACK_IMPORTED_MODULE_0__.GetHomePageDocument,\n    \"\\n  query GetPage($databaseId: ID!, $asPreview: Boolean = false) {\\n    page(id: $databaseId, idType: DATABASE_ID, asPreview: $asPreview) {\\n      title\\n      content\\n    }\\n    generalSettings {\\n      title\\n      description\\n    }\\n    primaryMenuItems: menuItems(where: { location: PRIMARY }) {\\n      nodes {\\n        id\\n        uri\\n        path\\n        label\\n        parentId\\n        cssClasses\\n        menu {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\\n\": _graphql__WEBPACK_IMPORTED_MODULE_0__.GetPageDocument,\n    \"\\n  query GetPost($databaseId: ID!, $asPreview: Boolean = false) {\\n    post(id: $databaseId, idType: DATABASE_ID, asPreview: $asPreview) {\\n      title\\n      content\\n      date\\n      author {\\n        node {\\n          name\\n        }\\n      }\\n    }\\n    generalSettings {\\n      title\\n      description\\n    }\\n    primaryMenuItems: menuItems(where: { location: PRIMARY }) {\\n      nodes {\\n        id\\n        uri\\n        path\\n        label\\n        parentId\\n        cssClasses\\n        menu {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\\n\": _graphql__WEBPACK_IMPORTED_MODULE_0__.GetPostDocument\n};\nfunction gql(source) {\n    var _documents_source;\n    return (_documents_source = documents[source]) !== null && _documents_source !== void 0 ? _documents_source : {};\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvX19nZW5lcmF0ZWRfXy9ncWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrQkFBa0IsR0FDaUI7QUFHbkM7Ozs7Ozs7OztDQVNDLEdBQ0QsTUFBTUMsWUFBWTtJQUNkLGdIQUFnSEQsOEVBQThDO0lBQzlKLHFOQUFxTkEsd0VBQXdDO0lBQzdQLHlUQUF5VEEsa0VBQWtDO0lBQzNWLG9IQUFvSEEsMERBQTBCO0lBQzlJLGdWQUFnVkEsK0RBQStCO0lBQy9XLDJXQUEyV0EsNERBQTRCO0lBQ3ZZLG12QkFBbXZCQSx3REFBd0I7SUFDM3dCLDZ3Q0FBK3dDQSx5REFBeUI7SUFDeHlDLCtmQUErZkEscURBQXFCO0lBQ3BoQiwra0JBQStrQkEscURBQXFCO0FBQ3htQjtBQXlETyxTQUFTWSxJQUFJQyxNQUFjO1FBQ3pCO0lBQVAsT0FBTyw4QkFBa0IsQ0FBQ0EsT0FBTyxjQUExQixtREFBOEIsQ0FBQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvX19nZW5lcmF0ZWRfXy9ncWwudHM/NDRhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi9ncmFwaHFsJztcbmltcG9ydCB7IFR5cGVkRG9jdW1lbnROb2RlIGFzIERvY3VtZW50Tm9kZSB9IGZyb20gJ0BncmFwaHFsLXR5cGVkLWRvY3VtZW50LW5vZGUvY29yZSc7XG5cbi8qKlxuICogTWFwIG9mIGFsbCBHcmFwaFFMIG9wZXJhdGlvbnMgaW4gdGhlIHByb2plY3QuXG4gKlxuICogVGhpcyBtYXAgaGFzIHNldmVyYWwgcGVyZm9ybWFuY2UgZGlzYWR2YW50YWdlczpcbiAqIDEuIEl0IGlzIG5vdCB0cmVlLXNoYWtlYWJsZSwgc28gaXQgd2lsbCBpbmNsdWRlIGFsbCBvcGVyYXRpb25zIGluIHRoZSBwcm9qZWN0LlxuICogMi4gSXQgaXMgbm90IG1pbmlmaWFibGUsIHNvIHRoZSBzdHJpbmcgb2YgYSBHcmFwaFFMIHF1ZXJ5IHdpbGwgYmUgbXVsdGlwbGUgdGltZXMgaW5zaWRlIHRoZSBidW5kbGUuXG4gKiAzLiBJdCBkb2VzIG5vdCBzdXBwb3J0IGRlYWQgY29kZSBlbGltaW5hdGlvbiwgc28gaXQgd2lsbCBhZGQgdW51c2VkIG9wZXJhdGlvbnMuXG4gKlxuICogVGhlcmVmb3JlIGl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCB0byB1c2UgdGhlIGJhYmVsIG9yIHN3YyBwbHVnaW4gZm9yIHByb2R1Y3Rpb24uXG4gKi9cbmNvbnN0IGRvY3VtZW50cyA9IHtcbiAgICBcIlxcbiAgICBmcmFnbWVudCBIZWFkZXJHZW5lcmFsU2V0dGluZ3NGcmFnbWVudCBvbiBHZW5lcmFsU2V0dGluZ3Mge1xcbiAgICAgIHRpdGxlXFxuICAgICAgZGVzY3JpcHRpb25cXG4gICAgfVxcbiAgXCI6IHR5cGVzLkhlYWRlckdlbmVyYWxTZXR0aW5nc0ZyYWdtZW50RnJhZ21lbnREb2MsXG4gICAgXCJcXG4gICAgZnJhZ21lbnQgUHJpbWFyeU1lbnVJdGVtRnJhZ21lbnQgb24gTWVudUl0ZW0ge1xcbiAgICAgIGlkXFxuICAgICAgdXJpXFxuICAgICAgcGF0aFxcbiAgICAgIGxhYmVsXFxuICAgICAgcGFyZW50SWRcXG4gICAgICBjc3NDbGFzc2VzXFxuICAgICAgbWVudSB7XFxuICAgICAgICBub2RlIHtcXG4gICAgICAgICAgbmFtZVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgXCI6IHR5cGVzLlByaW1hcnlNZW51SXRlbUZyYWdtZW50RnJhZ21lbnREb2MsXG4gICAgXCJcXG4gICAgICAgIGZyYWdtZW50IEhlcm9TZWN0aW9uQmxvY2tzIG9uIEhlcm9TZWN0aW9uQmxvY2tzIHtcXG4gICAgICAgICAgICBfX3R5cGVuYW1lXFxuICAgICAgICAgICAgaGVyb0Rlc2NyaXB0aW9uXFxuICAgICAgICAgICAgaGVyb1RpdGxlXFxuICAgICAgICAgICAgaGVyb0N0YSB7XFxuICAgICAgICAgICAgY3RhTGluayB7XFxuICAgICAgICAgICAgICB0YXJnZXRcXG4gICAgICAgICAgICAgIHRpdGxlXFxuICAgICAgICAgICAgICB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgY3RhVGV4dFxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIFwiOiB0eXBlcy5IZXJvU2VjdGlvbkJsb2Nrc0ZyYWdtZW50RG9jLFxuICAgIFwiXFxuICAgICAgICBmcmFnbWVudCBIZXJvVmlkZW8gb24gSGVyb1ZpZGVvIHtcXG4gICAgICAgICAgICBfX3R5cGVuYW1lXFxuICAgICAgICAgICAgaGVyb1ZpZGVvVXJpXFxuICAgICAgICAgIH1cXG4gICAgXCI6IHR5cGVzLkhlcm9WaWRlb0ZyYWdtZW50RG9jLFxuICAgIFwiXFxuICAgICAgICBmcmFnbWVudCBCbG9ja3NXaG9XZUFyZSBvbiBCbG9ja3NXaG9XZUFyZSB7XFxuICAgICAgICAgICAgX190eXBlbmFtZVxcbiAgICAgICAgICAgIHN1YnRpdGxlV3dhXFxuICAgICAgICAgICAgdGl0bGVXd2FcXG4gICAgICAgICAgICBkZXNjcmlwdGlvbld3YVxcbiAgICAgICAgICAgIGN0YVd3YSB7XFxuICAgICAgICAgICAgY3RhV3dhTGluayB7XFxuICAgICAgICAgICAgICB0YXJnZXRcXG4gICAgICAgICAgICAgIHRpdGxlXFxuICAgICAgICAgICAgICB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgY3RhV3dhVGl0bGVcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICBcIjogdHlwZXMuQmxvY2tzV2hvV2VBcmVGcmFnbWVudERvYyxcbiAgICBcIlxcbiAgcXVlcnkgR2V0RXhhbXBsZVBhZ2Uge1xcbiAgICBnZW5lcmFsU2V0dGluZ3Mge1xcbiAgICAgIHRpdGxlXFxuICAgICAgZGVzY3JpcHRpb25cXG4gICAgfVxcbiAgICBwcmltYXJ5TWVudUl0ZW1zOiBtZW51SXRlbXMod2hlcmU6IHsgbG9jYXRpb246IFBSSU1BUlkgfSkge1xcbiAgICAgIG5vZGVzIHtcXG4gICAgICAgIGlkXFxuICAgICAgICB1cmlcXG4gICAgICAgIHBhdGhcXG4gICAgICAgIGxhYmVsXFxuICAgICAgICBwYXJlbnRJZFxcbiAgICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgICAgbWVudSB7XFxuICAgICAgICAgIG5vZGUge1xcbiAgICAgICAgICAgIG5hbWVcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblwiOiB0eXBlcy5HZXRFeGFtcGxlUGFnZURvY3VtZW50LFxuICAgIFwiXFxuICBxdWVyeSBHZXRBcmNoaXZlKCR1cmk6IFN0cmluZyEpIHtcXG4gICAgbm9kZUJ5VXJpKHVyaTogJHVyaSkge1xcbiAgICAgIGFyY2hpdmVUeXBlOiBfX3R5cGVuYW1lXFxuICAgICAgLi4uIG9uIENhdGVnb3J5IHtcXG4gICAgICAgIG5hbWVcXG4gICAgICAgIHBvc3RzIHtcXG4gICAgICAgICAgbm9kZXMge1xcbiAgICAgICAgICAgIGlkXFxuICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICB1cmlcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICAuLi4gb24gVGFnIHtcXG4gICAgICAgIG5hbWVcXG4gICAgICAgIHBvc3RzIHtcXG4gICAgICAgICAgbm9kZXMge1xcbiAgICAgICAgICAgIGlkXFxuICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICB1cmlcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgICBnZW5lcmFsU2V0dGluZ3Mge1xcbiAgICAgIHRpdGxlXFxuICAgICAgZGVzY3JpcHRpb25cXG4gICAgfVxcbiAgICBwcmltYXJ5TWVudUl0ZW1zOiBtZW51SXRlbXMod2hlcmU6IHsgbG9jYXRpb246IFBSSU1BUlkgfSkge1xcbiAgICAgIG5vZGVzIHtcXG4gICAgICAgIGlkXFxuICAgICAgICB1cmlcXG4gICAgICAgIHBhdGhcXG4gICAgICAgIGxhYmVsXFxuICAgICAgICBwYXJlbnRJZFxcbiAgICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgICAgbWVudSB7XFxuICAgICAgICAgIG5vZGUge1xcbiAgICAgICAgICAgIG5hbWVcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblwiOiB0eXBlcy5HZXRBcmNoaXZlRG9jdW1lbnQsXG4gICAgXCJcXG5xdWVyeSBHZXRIb21lUGFnZSB7XFxuICBnZW5lcmFsU2V0dGluZ3Mge1xcbiAgICB0aXRsZVxcbiAgICBkZXNjcmlwdGlvblxcbiAgfVxcbiAgcHJpbWFyeU1lbnVJdGVtczogbWVudUl0ZW1zKHdoZXJlOiB7bG9jYXRpb246IFBSSU1BUll9KSB7XFxuICAgIG5vZGVzIHtcXG4gICAgICBpZFxcbiAgICAgIHVyaVxcbiAgICAgIHBhdGhcXG4gICAgICBsYWJlbFxcbiAgICAgIHBhcmVudElkXFxuICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgIG1lbnUge1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIG5hbWVcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG4gIG5pY2tlbEJyb254SGVhZGVyIHtcXG4gICAgY29uZmlnIHtcXG4gICAgICBjdGFUZXh0XFxuICAgICAgY3RhTGlua1xcbiAgICAgIGJyYW5kTG9nbyB7XFxuICAgICAgICBub2RlIHtcXG4gICAgICAgICAgc291cmNlVXJsXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuICBwYWdlKGlkOiBcXFwiY0c5emREb3lNdz09XFxcIikge1xcbiAgICBlZGl0b3JCbG9ja3Mge1xcbiAgICAgIC4uLiBvbiBBY2ZIZXJvU2VjdGlvbiB7XFxuICAgICAgICBoZXJvU2VjdGlvbkJsb2NrcyB7XFxuICAgICAgICAgIGhlcm9DdGEge1xcbiAgICAgICAgICAgIGN0YUxpbmsge1xcbiAgICAgICAgICAgICAgdGFyZ2V0XFxuICAgICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgICAgdXJsXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGN0YVRleHRcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBoZXJvRGVzY3JpcHRpb25cXG4gICAgICAgICAgaGVyb1RpdGxlXFxuICAgICAgICB9XFxuICAgICAgICBjbGllbnRJZFxcbiAgICAgIH1cXG4gICAgIC4uLiBvbiBBY2ZIZXJvVmlkZW9TZWN0aW9uIHsgIFxcbiAgICAgICAgIGhlcm9WaWRlbyB7XFxuICAgICAgICAgIGhlcm9WaWRlb1VyaVxcbiAgICAgICAgfVxcbiAgICAgICAgY2xpZW50SWRcXG4gICAgICB9XFxuXFxuICAgICAgIC4uLiBvbiBBY2ZXaG9XZUFyZVNlY3Rpb24ge1xcbiAgICAgICAgYmxvY2tzV2hvV2VBcmUge1xcbiAgICAgICAgICAgY3RhV3dhIHtcXG4gICAgICAgICAgICBjdGFXd2FMaW5rIHtcXG4gICAgICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICAgIHVybFxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBjdGFXd2FUaXRsZVxcbiAgICAgICAgICB9XFxuICAgICAgICAgc3VidGl0bGVXd2FcXG4gICAgICAgICAgICB0aXRsZVd3YVxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uV3dhXFxuICAgICAgICB9XFxuICAgICAgICBjbGllbnRJZFxcbiAgICAgIH1cXG5cXG4gICAgfVxcbiAgfVxcbn1cXG5cIjogdHlwZXMuR2V0SG9tZVBhZ2VEb2N1bWVudCxcbiAgICBcIlxcbiAgcXVlcnkgR2V0UGFnZSgkZGF0YWJhc2VJZDogSUQhLCAkYXNQcmV2aWV3OiBCb29sZWFuID0gZmFsc2UpIHtcXG4gICAgcGFnZShpZDogJGRhdGFiYXNlSWQsIGlkVHlwZTogREFUQUJBU0VfSUQsIGFzUHJldmlldzogJGFzUHJldmlldykge1xcbiAgICAgIHRpdGxlXFxuICAgICAgY29udGVudFxcbiAgICB9XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCI6IHR5cGVzLkdldFBhZ2VEb2N1bWVudCxcbiAgICBcIlxcbiAgcXVlcnkgR2V0UG9zdCgkZGF0YWJhc2VJZDogSUQhLCAkYXNQcmV2aWV3OiBCb29sZWFuID0gZmFsc2UpIHtcXG4gICAgcG9zdChpZDogJGRhdGFiYXNlSWQsIGlkVHlwZTogREFUQUJBU0VfSUQsIGFzUHJldmlldzogJGFzUHJldmlldykge1xcbiAgICAgIHRpdGxlXFxuICAgICAgY29udGVudFxcbiAgICAgIGRhdGVcXG4gICAgICBhdXRob3Ige1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIG5hbWVcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gICAgZ2VuZXJhbFNldHRpbmdzIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGRlc2NyaXB0aW9uXFxuICAgIH1cXG4gICAgcHJpbWFyeU1lbnVJdGVtczogbWVudUl0ZW1zKHdoZXJlOiB7IGxvY2F0aW9uOiBQUklNQVJZIH0pIHtcXG4gICAgICBub2RlcyB7XFxuICAgICAgICBpZFxcbiAgICAgICAgdXJpXFxuICAgICAgICBwYXRoXFxuICAgICAgICBsYWJlbFxcbiAgICAgICAgcGFyZW50SWRcXG4gICAgICAgIGNzc0NsYXNzZXNcXG4gICAgICAgIG1lbnUge1xcbiAgICAgICAgICBub2RlIHtcXG4gICAgICAgICAgICBuYW1lXFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIjogdHlwZXMuR2V0UG9zdERvY3VtZW50LFxufTtcblxuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBxdWVyeSA9IGdxbChgcXVlcnkgR2V0VXNlcigkaWQ6IElEISkgeyB1c2VyKGlkOiAkaWQpIHsgbmFtZSB9IH1gKTtcbiAqIGBgYFxuICpcbiAqIFRoZSBxdWVyeSBhcmd1bWVudCBpcyB1bmtub3duIVxuICogUGxlYXNlIHJlZ2VuZXJhdGUgdGhlIHR5cGVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3FsKHNvdXJjZTogc3RyaW5nKTogdW5rbm93bjtcblxuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChzb3VyY2U6IFwiXFxuICAgIGZyYWdtZW50IEhlYWRlckdlbmVyYWxTZXR0aW5nc0ZyYWdtZW50IG9uIEdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICBcIik6ICh0eXBlb2YgZG9jdW1lbnRzKVtcIlxcbiAgICBmcmFnbWVudCBIZWFkZXJHZW5lcmFsU2V0dGluZ3NGcmFnbWVudCBvbiBHZW5lcmFsU2V0dGluZ3Mge1xcbiAgICAgIHRpdGxlXFxuICAgICAgZGVzY3JpcHRpb25cXG4gICAgfVxcbiAgXCJdO1xuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChzb3VyY2U6IFwiXFxuICAgIGZyYWdtZW50IFByaW1hcnlNZW51SXRlbUZyYWdtZW50IG9uIE1lbnVJdGVtIHtcXG4gICAgICBpZFxcbiAgICAgIHVyaVxcbiAgICAgIHBhdGhcXG4gICAgICBsYWJlbFxcbiAgICAgIHBhcmVudElkXFxuICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgIG1lbnUge1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIG5hbWVcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIFwiKTogKHR5cGVvZiBkb2N1bWVudHMpW1wiXFxuICAgIGZyYWdtZW50IFByaW1hcnlNZW51SXRlbUZyYWdtZW50IG9uIE1lbnVJdGVtIHtcXG4gICAgICBpZFxcbiAgICAgIHVyaVxcbiAgICAgIHBhdGhcXG4gICAgICBsYWJlbFxcbiAgICAgIHBhcmVudElkXFxuICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgIG1lbnUge1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIG5hbWVcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIFwiXTtcbi8qKlxuICogVGhlIGdxbCBmdW5jdGlvbiBpcyB1c2VkIHRvIHBhcnNlIEdyYXBoUUwgcXVlcmllcyBpbnRvIGEgZG9jdW1lbnQgdGhhdCBjYW4gYmUgdXNlZCBieSBHcmFwaFFMIGNsaWVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBncWwoc291cmNlOiBcIlxcbiAgICAgICAgZnJhZ21lbnQgSGVyb1NlY3Rpb25CbG9ja3Mgb24gSGVyb1NlY3Rpb25CbG9ja3Mge1xcbiAgICAgICAgICAgIF9fdHlwZW5hbWVcXG4gICAgICAgICAgICBoZXJvRGVzY3JpcHRpb25cXG4gICAgICAgICAgICBoZXJvVGl0bGVcXG4gICAgICAgICAgICBoZXJvQ3RhIHtcXG4gICAgICAgICAgICBjdGFMaW5rIHtcXG4gICAgICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICAgIHVybFxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBjdGFUZXh0XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgXCIpOiAodHlwZW9mIGRvY3VtZW50cylbXCJcXG4gICAgICAgIGZyYWdtZW50IEhlcm9TZWN0aW9uQmxvY2tzIG9uIEhlcm9TZWN0aW9uQmxvY2tzIHtcXG4gICAgICAgICAgICBfX3R5cGVuYW1lXFxuICAgICAgICAgICAgaGVyb0Rlc2NyaXB0aW9uXFxuICAgICAgICAgICAgaGVyb1RpdGxlXFxuICAgICAgICAgICAgaGVyb0N0YSB7XFxuICAgICAgICAgICAgY3RhTGluayB7XFxuICAgICAgICAgICAgICB0YXJnZXRcXG4gICAgICAgICAgICAgIHRpdGxlXFxuICAgICAgICAgICAgICB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgY3RhVGV4dFxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIFwiXTtcbi8qKlxuICogVGhlIGdxbCBmdW5jdGlvbiBpcyB1c2VkIHRvIHBhcnNlIEdyYXBoUUwgcXVlcmllcyBpbnRvIGEgZG9jdW1lbnQgdGhhdCBjYW4gYmUgdXNlZCBieSBHcmFwaFFMIGNsaWVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBncWwoc291cmNlOiBcIlxcbiAgICAgICAgZnJhZ21lbnQgSGVyb1ZpZGVvIG9uIEhlcm9WaWRlbyB7XFxuICAgICAgICAgICAgX190eXBlbmFtZVxcbiAgICAgICAgICAgIGhlcm9WaWRlb1VyaVxcbiAgICAgICAgICB9XFxuICAgIFwiKTogKHR5cGVvZiBkb2N1bWVudHMpW1wiXFxuICAgICAgICBmcmFnbWVudCBIZXJvVmlkZW8gb24gSGVyb1ZpZGVvIHtcXG4gICAgICAgICAgICBfX3R5cGVuYW1lXFxuICAgICAgICAgICAgaGVyb1ZpZGVvVXJpXFxuICAgICAgICAgIH1cXG4gICAgXCJdO1xuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChzb3VyY2U6IFwiXFxuICAgICAgICBmcmFnbWVudCBCbG9ja3NXaG9XZUFyZSBvbiBCbG9ja3NXaG9XZUFyZSB7XFxuICAgICAgICAgICAgX190eXBlbmFtZVxcbiAgICAgICAgICAgIHN1YnRpdGxlV3dhXFxuICAgICAgICAgICAgdGl0bGVXd2FcXG4gICAgICAgICAgICBkZXNjcmlwdGlvbld3YVxcbiAgICAgICAgICAgIGN0YVd3YSB7XFxuICAgICAgICAgICAgY3RhV3dhTGluayB7XFxuICAgICAgICAgICAgICB0YXJnZXRcXG4gICAgICAgICAgICAgIHRpdGxlXFxuICAgICAgICAgICAgICB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgY3RhV3dhVGl0bGVcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICBcIik6ICh0eXBlb2YgZG9jdW1lbnRzKVtcIlxcbiAgICAgICAgZnJhZ21lbnQgQmxvY2tzV2hvV2VBcmUgb24gQmxvY2tzV2hvV2VBcmUge1xcbiAgICAgICAgICAgIF9fdHlwZW5hbWVcXG4gICAgICAgICAgICBzdWJ0aXRsZVd3YVxcbiAgICAgICAgICAgIHRpdGxlV3dhXFxuICAgICAgICAgICAgZGVzY3JpcHRpb25Xd2FcXG4gICAgICAgICAgICBjdGFXd2Ege1xcbiAgICAgICAgICAgIGN0YVd3YUxpbmsge1xcbiAgICAgICAgICAgICAgdGFyZ2V0XFxuICAgICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgICAgdXJsXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGN0YVd3YVRpdGxlXFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgXCJdO1xuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChzb3VyY2U6IFwiXFxuICBxdWVyeSBHZXRFeGFtcGxlUGFnZSB7XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCIpOiAodHlwZW9mIGRvY3VtZW50cylbXCJcXG4gIHF1ZXJ5IEdldEV4YW1wbGVQYWdlIHtcXG4gICAgZ2VuZXJhbFNldHRpbmdzIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGRlc2NyaXB0aW9uXFxuICAgIH1cXG4gICAgcHJpbWFyeU1lbnVJdGVtczogbWVudUl0ZW1zKHdoZXJlOiB7IGxvY2F0aW9uOiBQUklNQVJZIH0pIHtcXG4gICAgICBub2RlcyB7XFxuICAgICAgICBpZFxcbiAgICAgICAgdXJpXFxuICAgICAgICBwYXRoXFxuICAgICAgICBsYWJlbFxcbiAgICAgICAgcGFyZW50SWRcXG4gICAgICAgIGNzc0NsYXNzZXNcXG4gICAgICAgIG1lbnUge1xcbiAgICAgICAgICBub2RlIHtcXG4gICAgICAgICAgICBuYW1lXFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIl07XG4vKipcbiAqIFRoZSBncWwgZnVuY3Rpb24gaXMgdXNlZCB0byBwYXJzZSBHcmFwaFFMIHF1ZXJpZXMgaW50byBhIGRvY3VtZW50IHRoYXQgY2FuIGJlIHVzZWQgYnkgR3JhcGhRTCBjbGllbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3FsKHNvdXJjZTogXCJcXG4gIHF1ZXJ5IEdldEFyY2hpdmUoJHVyaTogU3RyaW5nISkge1xcbiAgICBub2RlQnlVcmkodXJpOiAkdXJpKSB7XFxuICAgICAgYXJjaGl2ZVR5cGU6IF9fdHlwZW5hbWVcXG4gICAgICAuLi4gb24gQ2F0ZWdvcnkge1xcbiAgICAgICAgbmFtZVxcbiAgICAgICAgcG9zdHMge1xcbiAgICAgICAgICBub2RlcyB7XFxuICAgICAgICAgICAgaWRcXG4gICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgIHVyaVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIC4uLiBvbiBUYWcge1xcbiAgICAgICAgbmFtZVxcbiAgICAgICAgcG9zdHMge1xcbiAgICAgICAgICBub2RlcyB7XFxuICAgICAgICAgICAgaWRcXG4gICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgIHVyaVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCIpOiAodHlwZW9mIGRvY3VtZW50cylbXCJcXG4gIHF1ZXJ5IEdldEFyY2hpdmUoJHVyaTogU3RyaW5nISkge1xcbiAgICBub2RlQnlVcmkodXJpOiAkdXJpKSB7XFxuICAgICAgYXJjaGl2ZVR5cGU6IF9fdHlwZW5hbWVcXG4gICAgICAuLi4gb24gQ2F0ZWdvcnkge1xcbiAgICAgICAgbmFtZVxcbiAgICAgICAgcG9zdHMge1xcbiAgICAgICAgICBub2RlcyB7XFxuICAgICAgICAgICAgaWRcXG4gICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgIHVyaVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIC4uLiBvbiBUYWcge1xcbiAgICAgICAgbmFtZVxcbiAgICAgICAgcG9zdHMge1xcbiAgICAgICAgICBub2RlcyB7XFxuICAgICAgICAgICAgaWRcXG4gICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgIHVyaVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCJdO1xuLyoqXG4gKiBUaGUgZ3FsIGZ1bmN0aW9uIGlzIHVzZWQgdG8gcGFyc2UgR3JhcGhRTCBxdWVyaWVzIGludG8gYSBkb2N1bWVudCB0aGF0IGNhbiBiZSB1c2VkIGJ5IEdyYXBoUUwgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChzb3VyY2U6IFwiXFxucXVlcnkgR2V0SG9tZVBhZ2Uge1xcbiAgZ2VuZXJhbFNldHRpbmdzIHtcXG4gICAgdGl0bGVcXG4gICAgZGVzY3JpcHRpb25cXG4gIH1cXG4gIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZToge2xvY2F0aW9uOiBQUklNQVJZfSkge1xcbiAgICBub2RlcyB7XFxuICAgICAgaWRcXG4gICAgICB1cmlcXG4gICAgICBwYXRoXFxuICAgICAgbGFiZWxcXG4gICAgICBwYXJlbnRJZFxcbiAgICAgIGNzc0NsYXNzZXNcXG4gICAgICBtZW51IHtcXG4gICAgICAgIG5vZGUge1xcbiAgICAgICAgICBuYW1lXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuICBuaWNrZWxCcm9ueEhlYWRlciB7XFxuICAgIGNvbmZpZyB7XFxuICAgICAgY3RhVGV4dFxcbiAgICAgIGN0YUxpbmtcXG4gICAgICBicmFuZExvZ28ge1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIHNvdXJjZVVybFxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcbiAgcGFnZShpZDogXFxcImNHOXpkRG95TXc9PVxcXCIpIHtcXG4gICAgZWRpdG9yQmxvY2tzIHtcXG4gICAgICAuLi4gb24gQWNmSGVyb1NlY3Rpb24ge1xcbiAgICAgICAgaGVyb1NlY3Rpb25CbG9ja3Mge1xcbiAgICAgICAgICBoZXJvQ3RhIHtcXG4gICAgICAgICAgICBjdGFMaW5rIHtcXG4gICAgICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICAgIHVybFxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBjdGFUZXh0XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgaGVyb0Rlc2NyaXB0aW9uXFxuICAgICAgICAgIGhlcm9UaXRsZVxcbiAgICAgICAgfVxcbiAgICAgICAgY2xpZW50SWRcXG4gICAgICB9XFxuICAgICAuLi4gb24gQWNmSGVyb1ZpZGVvU2VjdGlvbiB7ICBcXG4gICAgICAgICBoZXJvVmlkZW8ge1xcbiAgICAgICAgICBoZXJvVmlkZW9VcmlcXG4gICAgICAgIH1cXG4gICAgICAgIGNsaWVudElkXFxuICAgICAgfVxcblxcbiAgICAgICAuLi4gb24gQWNmV2hvV2VBcmVTZWN0aW9uIHtcXG4gICAgICAgIGJsb2Nrc1dob1dlQXJlIHtcXG4gICAgICAgICAgIGN0YVd3YSB7XFxuICAgICAgICAgICAgY3RhV3dhTGluayB7XFxuICAgICAgICAgICAgICB0YXJnZXRcXG4gICAgICAgICAgICAgIHRpdGxlXFxuICAgICAgICAgICAgICB1cmxcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgY3RhV3dhVGl0bGVcXG4gICAgICAgICAgfVxcbiAgICAgICAgIHN1YnRpdGxlV3dhXFxuICAgICAgICAgICAgdGl0bGVXd2FcXG4gICAgICAgICAgICBkZXNjcmlwdGlvbld3YVxcbiAgICAgICAgfVxcbiAgICAgICAgY2xpZW50SWRcXG4gICAgICB9XFxuXFxuICAgIH1cXG4gIH1cXG59XFxuXCIpOiAodHlwZW9mIGRvY3VtZW50cylbXCJcXG5xdWVyeSBHZXRIb21lUGFnZSB7XFxuICBnZW5lcmFsU2V0dGluZ3Mge1xcbiAgICB0aXRsZVxcbiAgICBkZXNjcmlwdGlvblxcbiAgfVxcbiAgcHJpbWFyeU1lbnVJdGVtczogbWVudUl0ZW1zKHdoZXJlOiB7bG9jYXRpb246IFBSSU1BUll9KSB7XFxuICAgIG5vZGVzIHtcXG4gICAgICBpZFxcbiAgICAgIHVyaVxcbiAgICAgIHBhdGhcXG4gICAgICBsYWJlbFxcbiAgICAgIHBhcmVudElkXFxuICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgIG1lbnUge1xcbiAgICAgICAgbm9kZSB7XFxuICAgICAgICAgIG5hbWVcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG4gIG5pY2tlbEJyb254SGVhZGVyIHtcXG4gICAgY29uZmlnIHtcXG4gICAgICBjdGFUZXh0XFxuICAgICAgY3RhTGlua1xcbiAgICAgIGJyYW5kTG9nbyB7XFxuICAgICAgICBub2RlIHtcXG4gICAgICAgICAgc291cmNlVXJsXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuICBwYWdlKGlkOiBcXFwiY0c5emREb3lNdz09XFxcIikge1xcbiAgICBlZGl0b3JCbG9ja3Mge1xcbiAgICAgIC4uLiBvbiBBY2ZIZXJvU2VjdGlvbiB7XFxuICAgICAgICBoZXJvU2VjdGlvbkJsb2NrcyB7XFxuICAgICAgICAgIGhlcm9DdGEge1xcbiAgICAgICAgICAgIGN0YUxpbmsge1xcbiAgICAgICAgICAgICAgdGFyZ2V0XFxuICAgICAgICAgICAgICB0aXRsZVxcbiAgICAgICAgICAgICAgdXJsXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGN0YVRleHRcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBoZXJvRGVzY3JpcHRpb25cXG4gICAgICAgICAgaGVyb1RpdGxlXFxuICAgICAgICB9XFxuICAgICAgICBjbGllbnRJZFxcbiAgICAgIH1cXG4gICAgIC4uLiBvbiBBY2ZIZXJvVmlkZW9TZWN0aW9uIHsgIFxcbiAgICAgICAgIGhlcm9WaWRlbyB7XFxuICAgICAgICAgIGhlcm9WaWRlb1VyaVxcbiAgICAgICAgfVxcbiAgICAgICAgY2xpZW50SWRcXG4gICAgICB9XFxuXFxuICAgICAgIC4uLiBvbiBBY2ZXaG9XZUFyZVNlY3Rpb24ge1xcbiAgICAgICAgYmxvY2tzV2hvV2VBcmUge1xcbiAgICAgICAgICAgY3RhV3dhIHtcXG4gICAgICAgICAgICBjdGFXd2FMaW5rIHtcXG4gICAgICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgICAgICAgdGl0bGVcXG4gICAgICAgICAgICAgIHVybFxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBjdGFXd2FUaXRsZVxcbiAgICAgICAgICB9XFxuICAgICAgICAgc3VidGl0bGVXd2FcXG4gICAgICAgICAgICB0aXRsZVd3YVxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uV3dhXFxuICAgICAgICB9XFxuICAgICAgICBjbGllbnRJZFxcbiAgICAgIH1cXG5cXG4gICAgfVxcbiAgfVxcbn1cXG5cIl07XG4vKipcbiAqIFRoZSBncWwgZnVuY3Rpb24gaXMgdXNlZCB0byBwYXJzZSBHcmFwaFFMIHF1ZXJpZXMgaW50byBhIGRvY3VtZW50IHRoYXQgY2FuIGJlIHVzZWQgYnkgR3JhcGhRTCBjbGllbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3FsKHNvdXJjZTogXCJcXG4gIHF1ZXJ5IEdldFBhZ2UoJGRhdGFiYXNlSWQ6IElEISwgJGFzUHJldmlldzogQm9vbGVhbiA9IGZhbHNlKSB7XFxuICAgIHBhZ2UoaWQ6ICRkYXRhYmFzZUlkLCBpZFR5cGU6IERBVEFCQVNFX0lELCBhc1ByZXZpZXc6ICRhc1ByZXZpZXcpIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGNvbnRlbnRcXG4gICAgfVxcbiAgICBnZW5lcmFsU2V0dGluZ3Mge1xcbiAgICAgIHRpdGxlXFxuICAgICAgZGVzY3JpcHRpb25cXG4gICAgfVxcbiAgICBwcmltYXJ5TWVudUl0ZW1zOiBtZW51SXRlbXMod2hlcmU6IHsgbG9jYXRpb246IFBSSU1BUlkgfSkge1xcbiAgICAgIG5vZGVzIHtcXG4gICAgICAgIGlkXFxuICAgICAgICB1cmlcXG4gICAgICAgIHBhdGhcXG4gICAgICAgIGxhYmVsXFxuICAgICAgICBwYXJlbnRJZFxcbiAgICAgICAgY3NzQ2xhc3Nlc1xcbiAgICAgICAgbWVudSB7XFxuICAgICAgICAgIG5vZGUge1xcbiAgICAgICAgICAgIG5hbWVcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblwiKTogKHR5cGVvZiBkb2N1bWVudHMpW1wiXFxuICBxdWVyeSBHZXRQYWdlKCRkYXRhYmFzZUlkOiBJRCEsICRhc1ByZXZpZXc6IEJvb2xlYW4gPSBmYWxzZSkge1xcbiAgICBwYWdlKGlkOiAkZGF0YWJhc2VJZCwgaWRUeXBlOiBEQVRBQkFTRV9JRCwgYXNQcmV2aWV3OiAkYXNQcmV2aWV3KSB7XFxuICAgICAgdGl0bGVcXG4gICAgICBjb250ZW50XFxuICAgIH1cXG4gICAgZ2VuZXJhbFNldHRpbmdzIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGRlc2NyaXB0aW9uXFxuICAgIH1cXG4gICAgcHJpbWFyeU1lbnVJdGVtczogbWVudUl0ZW1zKHdoZXJlOiB7IGxvY2F0aW9uOiBQUklNQVJZIH0pIHtcXG4gICAgICBub2RlcyB7XFxuICAgICAgICBpZFxcbiAgICAgICAgdXJpXFxuICAgICAgICBwYXRoXFxuICAgICAgICBsYWJlbFxcbiAgICAgICAgcGFyZW50SWRcXG4gICAgICAgIGNzc0NsYXNzZXNcXG4gICAgICAgIG1lbnUge1xcbiAgICAgICAgICBub2RlIHtcXG4gICAgICAgICAgICBuYW1lXFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG5cIl07XG4vKipcbiAqIFRoZSBncWwgZnVuY3Rpb24gaXMgdXNlZCB0byBwYXJzZSBHcmFwaFFMIHF1ZXJpZXMgaW50byBhIGRvY3VtZW50IHRoYXQgY2FuIGJlIHVzZWQgYnkgR3JhcGhRTCBjbGllbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3FsKHNvdXJjZTogXCJcXG4gIHF1ZXJ5IEdldFBvc3QoJGRhdGFiYXNlSWQ6IElEISwgJGFzUHJldmlldzogQm9vbGVhbiA9IGZhbHNlKSB7XFxuICAgIHBvc3QoaWQ6ICRkYXRhYmFzZUlkLCBpZFR5cGU6IERBVEFCQVNFX0lELCBhc1ByZXZpZXc6ICRhc1ByZXZpZXcpIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGNvbnRlbnRcXG4gICAgICBkYXRlXFxuICAgICAgYXV0aG9yIHtcXG4gICAgICAgIG5vZGUge1xcbiAgICAgICAgICBuYW1lXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCIpOiAodHlwZW9mIGRvY3VtZW50cylbXCJcXG4gIHF1ZXJ5IEdldFBvc3QoJGRhdGFiYXNlSWQ6IElEISwgJGFzUHJldmlldzogQm9vbGVhbiA9IGZhbHNlKSB7XFxuICAgIHBvc3QoaWQ6ICRkYXRhYmFzZUlkLCBpZFR5cGU6IERBVEFCQVNFX0lELCBhc1ByZXZpZXc6ICRhc1ByZXZpZXcpIHtcXG4gICAgICB0aXRsZVxcbiAgICAgIGNvbnRlbnRcXG4gICAgICBkYXRlXFxuICAgICAgYXV0aG9yIHtcXG4gICAgICAgIG5vZGUge1xcbiAgICAgICAgICBuYW1lXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICAgIGdlbmVyYWxTZXR0aW5ncyB7XFxuICAgICAgdGl0bGVcXG4gICAgICBkZXNjcmlwdGlvblxcbiAgICB9XFxuICAgIHByaW1hcnlNZW51SXRlbXM6IG1lbnVJdGVtcyh3aGVyZTogeyBsb2NhdGlvbjogUFJJTUFSWSB9KSB7XFxuICAgICAgbm9kZXMge1xcbiAgICAgICAgaWRcXG4gICAgICAgIHVyaVxcbiAgICAgICAgcGF0aFxcbiAgICAgICAgbGFiZWxcXG4gICAgICAgIHBhcmVudElkXFxuICAgICAgICBjc3NDbGFzc2VzXFxuICAgICAgICBtZW51IHtcXG4gICAgICAgICAgbm9kZSB7XFxuICAgICAgICAgICAgbmFtZVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxuXCJdO1xuXG5leHBvcnQgZnVuY3Rpb24gZ3FsKHNvdXJjZTogc3RyaW5nKSB7XG4gIHJldHVybiAoZG9jdW1lbnRzIGFzIGFueSlbc291cmNlXSA/PyB7fTtcbn1cblxuZXhwb3J0IHR5cGUgRG9jdW1lbnRUeXBlPFREb2N1bWVudE5vZGUgZXh0ZW5kcyBEb2N1bWVudE5vZGU8YW55LCBhbnk+PiA9IFREb2N1bWVudE5vZGUgZXh0ZW5kcyBEb2N1bWVudE5vZGU8ICBpbmZlciBUVHlwZSwgIGFueT4gID8gVFR5cGUgIDogbmV2ZXI7Il0sIm5hbWVzIjpbInR5cGVzIiwiZG9jdW1lbnRzIiwiSGVhZGVyR2VuZXJhbFNldHRpbmdzRnJhZ21lbnRGcmFnbWVudERvYyIsIlByaW1hcnlNZW51SXRlbUZyYWdtZW50RnJhZ21lbnREb2MiLCJIZXJvU2VjdGlvbkJsb2Nrc0ZyYWdtZW50RG9jIiwiSGVyb1ZpZGVvRnJhZ21lbnREb2MiLCJCbG9ja3NXaG9XZUFyZUZyYWdtZW50RG9jIiwiR2V0RXhhbXBsZVBhZ2VEb2N1bWVudCIsIkdldEFyY2hpdmVEb2N1bWVudCIsIkdldEhvbWVQYWdlRG9jdW1lbnQiLCJHZXRQYWdlRG9jdW1lbnQiLCJHZXRQb3N0RG9jdW1lbnQiLCJncWwiLCJzb3VyY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/__generated__/gql.ts\n"));

/***/ }),

/***/ "./src/__generated__/graphql.ts":
/*!**************************************!*\
  !*** ./src/__generated__/graphql.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AvatarRatingEnum: function() { return /* binding */ AvatarRatingEnum; },\n/* harmony export */   BlocksWhoWeAreFragmentDoc: function() { return /* binding */ BlocksWhoWeAreFragmentDoc; },\n/* harmony export */   CategoryIdType: function() { return /* binding */ CategoryIdType; },\n/* harmony export */   CommentNodeIdTypeEnum: function() { return /* binding */ CommentNodeIdTypeEnum; },\n/* harmony export */   CommentStatusEnum: function() { return /* binding */ CommentStatusEnum; },\n/* harmony export */   CommentsConnectionOrderbyEnum: function() { return /* binding */ CommentsConnectionOrderbyEnum; },\n/* harmony export */   ContentNodeIdTypeEnum: function() { return /* binding */ ContentNodeIdTypeEnum; },\n/* harmony export */   ContentTypeEnum: function() { return /* binding */ ContentTypeEnum; },\n/* harmony export */   ContentTypeIdTypeEnum: function() { return /* binding */ ContentTypeIdTypeEnum; },\n/* harmony export */   ContentTypesOfCategoryEnum: function() { return /* binding */ ContentTypesOfCategoryEnum; },\n/* harmony export */   ContentTypesOfPostFormatEnum: function() { return /* binding */ ContentTypesOfPostFormatEnum; },\n/* harmony export */   ContentTypesOfTagEnum: function() { return /* binding */ ContentTypesOfTagEnum; },\n/* harmony export */   GetArchiveDocument: function() { return /* binding */ GetArchiveDocument; },\n/* harmony export */   GetExamplePageDocument: function() { return /* binding */ GetExamplePageDocument; },\n/* harmony export */   GetHomePageDocument: function() { return /* binding */ GetHomePageDocument; },\n/* harmony export */   GetPageDocument: function() { return /* binding */ GetPageDocument; },\n/* harmony export */   GetPostDocument: function() { return /* binding */ GetPostDocument; },\n/* harmony export */   GlobalStylesheetTypesEnum: function() { return /* binding */ GlobalStylesheetTypesEnum; },\n/* harmony export */   HeaderGeneralSettingsFragmentFragmentDoc: function() { return /* binding */ HeaderGeneralSettingsFragmentFragmentDoc; },\n/* harmony export */   HeroSectionBlocksFragmentDoc: function() { return /* binding */ HeroSectionBlocksFragmentDoc; },\n/* harmony export */   HeroVideoFragmentDoc: function() { return /* binding */ HeroVideoFragmentDoc; },\n/* harmony export */   MediaItemIdType: function() { return /* binding */ MediaItemIdType; },\n/* harmony export */   MediaItemSizeEnum: function() { return /* binding */ MediaItemSizeEnum; },\n/* harmony export */   MediaItemStatusEnum: function() { return /* binding */ MediaItemStatusEnum; },\n/* harmony export */   MenuItemNodeIdTypeEnum: function() { return /* binding */ MenuItemNodeIdTypeEnum; },\n/* harmony export */   MenuLocationEnum: function() { return /* binding */ MenuLocationEnum; },\n/* harmony export */   MenuNodeIdTypeEnum: function() { return /* binding */ MenuNodeIdTypeEnum; },\n/* harmony export */   MimeTypeEnum: function() { return /* binding */ MimeTypeEnum; },\n/* harmony export */   OrderEnum: function() { return /* binding */ OrderEnum; },\n/* harmony export */   PageIdType: function() { return /* binding */ PageIdType; },\n/* harmony export */   PluginStatusEnum: function() { return /* binding */ PluginStatusEnum; },\n/* harmony export */   PostFormatIdType: function() { return /* binding */ PostFormatIdType; },\n/* harmony export */   PostIdType: function() { return /* binding */ PostIdType; },\n/* harmony export */   PostObjectFieldFormatEnum: function() { return /* binding */ PostObjectFieldFormatEnum; },\n/* harmony export */   PostObjectsConnectionDateColumnEnum: function() { return /* binding */ PostObjectsConnectionDateColumnEnum; },\n/* harmony export */   PostObjectsConnectionOrderbyEnum: function() { return /* binding */ PostObjectsConnectionOrderbyEnum; },\n/* harmony export */   PostStatusEnum: function() { return /* binding */ PostStatusEnum; },\n/* harmony export */   PrimaryMenuItemFragmentFragmentDoc: function() { return /* binding */ PrimaryMenuItemFragmentFragmentDoc; },\n/* harmony export */   RelationEnum: function() { return /* binding */ RelationEnum; },\n/* harmony export */   ScriptLoadingStrategyEnum: function() { return /* binding */ ScriptLoadingStrategyEnum; },\n/* harmony export */   TagIdType: function() { return /* binding */ TagIdType; },\n/* harmony export */   TaxonomyEnum: function() { return /* binding */ TaxonomyEnum; },\n/* harmony export */   TaxonomyIdTypeEnum: function() { return /* binding */ TaxonomyIdTypeEnum; },\n/* harmony export */   TermNodeIdTypeEnum: function() { return /* binding */ TermNodeIdTypeEnum; },\n/* harmony export */   TermObjectsConnectionOrderbyEnum: function() { return /* binding */ TermObjectsConnectionOrderbyEnum; },\n/* harmony export */   UserNodeIdTypeEnum: function() { return /* binding */ UserNodeIdTypeEnum; },\n/* harmony export */   UserRoleEnum: function() { return /* binding */ UserRoleEnum; },\n/* harmony export */   UsersConnectionOrderbyEnum: function() { return /* binding */ UsersConnectionOrderbyEnum; },\n/* harmony export */   UsersConnectionSearchColumnEnum: function() { return /* binding */ UsersConnectionSearchColumnEnum; }\n/* harmony export */ });\n/* eslint-disable */ var AvatarRatingEnum;\n(function(AvatarRatingEnum) {\n    /** Indicates a G level avatar rating level. */ AvatarRatingEnum[\"G\"] = \"G\";\n    /** Indicates a PG level avatar rating level. */ AvatarRatingEnum[\"Pg\"] = \"PG\";\n    /** Indicates an R level avatar rating level. */ AvatarRatingEnum[\"R\"] = \"R\";\n    /** Indicates an X level avatar rating level. */ AvatarRatingEnum[\"X\"] = \"X\";\n})(AvatarRatingEnum || (AvatarRatingEnum = {}));\nvar CategoryIdType;\n(function(CategoryIdType) {\n    /** The Database ID for the node */ CategoryIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** The hashed Global ID */ CategoryIdType[\"Id\"] = \"ID\";\n    /** The name of the node */ CategoryIdType[\"Name\"] = \"NAME\";\n    /** Url friendly name of the node */ CategoryIdType[\"Slug\"] = \"SLUG\";\n    /** The URI for the node */ CategoryIdType[\"Uri\"] = \"URI\";\n})(CategoryIdType || (CategoryIdType = {}));\nvar CommentNodeIdTypeEnum;\n(function(CommentNodeIdTypeEnum) {\n    /** Identify a resource by the Database ID. */ CommentNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ CommentNodeIdTypeEnum[\"Id\"] = \"ID\";\n})(CommentNodeIdTypeEnum || (CommentNodeIdTypeEnum = {}));\nvar CommentStatusEnum;\n(function(CommentStatusEnum) {\n    /** Comments with the Approved status */ CommentStatusEnum[\"Approve\"] = \"APPROVE\";\n    /** Comments with the Unapproved status */ CommentStatusEnum[\"Hold\"] = \"HOLD\";\n    /** Comments with the Spam status */ CommentStatusEnum[\"Spam\"] = \"SPAM\";\n    /** Comments with the Trash status */ CommentStatusEnum[\"Trash\"] = \"TRASH\";\n})(CommentStatusEnum || (CommentStatusEnum = {}));\nvar CommentsConnectionOrderbyEnum;\n(function(CommentsConnectionOrderbyEnum) {\n    /** Order by browser user agent of the commenter. */ CommentsConnectionOrderbyEnum[\"CommentAgent\"] = \"COMMENT_AGENT\";\n    /** Order by approval status of the comment. */ CommentsConnectionOrderbyEnum[\"CommentApproved\"] = \"COMMENT_APPROVED\";\n    /** Order by name of the comment author. */ CommentsConnectionOrderbyEnum[\"CommentAuthor\"] = \"COMMENT_AUTHOR\";\n    /** Order by e-mail of the comment author. */ CommentsConnectionOrderbyEnum[\"CommentAuthorEmail\"] = \"COMMENT_AUTHOR_EMAIL\";\n    /** Order by IP address of the comment author. */ CommentsConnectionOrderbyEnum[\"CommentAuthorIp\"] = \"COMMENT_AUTHOR_IP\";\n    /** Order by URL address of the comment author. */ CommentsConnectionOrderbyEnum[\"CommentAuthorUrl\"] = \"COMMENT_AUTHOR_URL\";\n    /** Order by the comment contents. */ CommentsConnectionOrderbyEnum[\"CommentContent\"] = \"COMMENT_CONTENT\";\n    /** Order by date/time timestamp of the comment. */ CommentsConnectionOrderbyEnum[\"CommentDate\"] = \"COMMENT_DATE\";\n    /** Order by GMT timezone date/time timestamp of the comment. */ CommentsConnectionOrderbyEnum[\"CommentDateGmt\"] = \"COMMENT_DATE_GMT\";\n    /** Order by the globally unique identifier for the comment object */ CommentsConnectionOrderbyEnum[\"CommentId\"] = \"COMMENT_ID\";\n    /** Order by the array list of comment IDs listed in the where clause. */ CommentsConnectionOrderbyEnum[\"CommentIn\"] = \"COMMENT_IN\";\n    /** Order by the comment karma score. */ CommentsConnectionOrderbyEnum[\"CommentKarma\"] = \"COMMENT_KARMA\";\n    /** Order by the comment parent ID. */ CommentsConnectionOrderbyEnum[\"CommentParent\"] = \"COMMENT_PARENT\";\n    /** Order by the post object ID. */ CommentsConnectionOrderbyEnum[\"CommentPostId\"] = \"COMMENT_POST_ID\";\n    /** Order by the the type of comment, such as 'comment', 'pingback', or 'trackback'. */ CommentsConnectionOrderbyEnum[\"CommentType\"] = \"COMMENT_TYPE\";\n    /** Order by the user ID. */ CommentsConnectionOrderbyEnum[\"UserId\"] = \"USER_ID\";\n})(CommentsConnectionOrderbyEnum || (CommentsConnectionOrderbyEnum = {}));\nvar ContentNodeIdTypeEnum;\n(function(ContentNodeIdTypeEnum) {\n    /** Identify a resource by the Database ID. */ ContentNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ ContentNodeIdTypeEnum[\"Id\"] = \"ID\";\n    /** Identify a resource by the URI. */ ContentNodeIdTypeEnum[\"Uri\"] = \"URI\";\n})(ContentNodeIdTypeEnum || (ContentNodeIdTypeEnum = {}));\nvar ContentTypeEnum;\n(function(ContentTypeEnum) {\n    /** The Type of Content object */ ContentTypeEnum[\"Attachment\"] = \"ATTACHMENT\";\n    /** The Type of Content object */ ContentTypeEnum[\"Page\"] = \"PAGE\";\n    /** The Type of Content object */ ContentTypeEnum[\"Post\"] = \"POST\";\n})(ContentTypeEnum || (ContentTypeEnum = {}));\nvar ContentTypeIdTypeEnum;\n(function(ContentTypeIdTypeEnum) {\n    /** The globally unique ID */ ContentTypeIdTypeEnum[\"Id\"] = \"ID\";\n    /** The name of the content type. */ ContentTypeIdTypeEnum[\"Name\"] = \"NAME\";\n})(ContentTypeIdTypeEnum || (ContentTypeIdTypeEnum = {}));\nvar ContentTypesOfCategoryEnum;\n(function(ContentTypesOfCategoryEnum) {\n    /** The Type of Content object */ ContentTypesOfCategoryEnum[\"Post\"] = \"POST\";\n})(ContentTypesOfCategoryEnum || (ContentTypesOfCategoryEnum = {}));\nvar ContentTypesOfPostFormatEnum;\n(function(ContentTypesOfPostFormatEnum) {\n    /** The Type of Content object */ ContentTypesOfPostFormatEnum[\"Post\"] = \"POST\";\n})(ContentTypesOfPostFormatEnum || (ContentTypesOfPostFormatEnum = {}));\nvar ContentTypesOfTagEnum;\n(function(ContentTypesOfTagEnum) {\n    /** The Type of Content object */ ContentTypesOfTagEnum[\"Post\"] = \"POST\";\n})(ContentTypesOfTagEnum || (ContentTypesOfTagEnum = {}));\nvar GlobalStylesheetTypesEnum;\n(function(GlobalStylesheetTypesEnum) {\n    GlobalStylesheetTypesEnum[\"BaseLayoutStyles\"] = \"BASE_LAYOUT_STYLES\";\n    GlobalStylesheetTypesEnum[\"Presets\"] = \"PRESETS\";\n    GlobalStylesheetTypesEnum[\"Styles\"] = \"STYLES\";\n    GlobalStylesheetTypesEnum[\"Variables\"] = \"VARIABLES\";\n})(GlobalStylesheetTypesEnum || (GlobalStylesheetTypesEnum = {}));\nvar MediaItemIdType;\n(function(MediaItemIdType) {\n    /** Identify a resource by the Database ID. */ MediaItemIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ MediaItemIdType[\"Id\"] = \"ID\";\n    /** Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier. */ MediaItemIdType[\"Slug\"] = \"SLUG\";\n    /** Identify a media item by its source url */ MediaItemIdType[\"SourceUrl\"] = \"SOURCE_URL\";\n    /** Identify a resource by the URI. */ MediaItemIdType[\"Uri\"] = \"URI\";\n})(MediaItemIdType || (MediaItemIdType = {}));\nvar MediaItemSizeEnum;\n(function(MediaItemSizeEnum) {\n    /** MediaItem with the large size */ MediaItemSizeEnum[\"Large\"] = \"LARGE\";\n    /** MediaItem with the medium size */ MediaItemSizeEnum[\"Medium\"] = \"MEDIUM\";\n    /** MediaItem with the medium_large size */ MediaItemSizeEnum[\"MediumLarge\"] = \"MEDIUM_LARGE\";\n    /** MediaItem with the thumbnail size */ MediaItemSizeEnum[\"Thumbnail\"] = \"THUMBNAIL\";\n    /** MediaItem with the 1536x1536 size */ MediaItemSizeEnum[\"1536X1536\"] = \"_1536X1536\";\n    /** MediaItem with the 2048x2048 size */ MediaItemSizeEnum[\"2048X2048\"] = \"_2048X2048\";\n})(MediaItemSizeEnum || (MediaItemSizeEnum = {}));\nvar MediaItemStatusEnum;\n(function(MediaItemStatusEnum) {\n    /** Objects with the auto-draft status */ MediaItemStatusEnum[\"AutoDraft\"] = \"AUTO_DRAFT\";\n    /** Objects with the inherit status */ MediaItemStatusEnum[\"Inherit\"] = \"INHERIT\";\n    /** Objects with the private status */ MediaItemStatusEnum[\"Private\"] = \"PRIVATE\";\n    /** Objects with the trash status */ MediaItemStatusEnum[\"Trash\"] = \"TRASH\";\n})(MediaItemStatusEnum || (MediaItemStatusEnum = {}));\nvar MenuItemNodeIdTypeEnum;\n(function(MenuItemNodeIdTypeEnum) {\n    /** Identify a resource by the Database ID. */ MenuItemNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ MenuItemNodeIdTypeEnum[\"Id\"] = \"ID\";\n})(MenuItemNodeIdTypeEnum || (MenuItemNodeIdTypeEnum = {}));\nvar MenuLocationEnum;\n(function(MenuLocationEnum) {\n    /** Put the menu in the footer location */ MenuLocationEnum[\"Footer\"] = \"FOOTER\";\n    /** Put the menu in the primary location */ MenuLocationEnum[\"Primary\"] = \"PRIMARY\";\n})(MenuLocationEnum || (MenuLocationEnum = {}));\nvar MenuNodeIdTypeEnum;\n(function(MenuNodeIdTypeEnum) {\n    /** Identify a menu node by the Database ID. */ MenuNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a menu node by the (hashed) Global ID. */ MenuNodeIdTypeEnum[\"Id\"] = \"ID\";\n    /** Identify a menu node by the slug of menu location to which it is assigned */ MenuNodeIdTypeEnum[\"Location\"] = \"LOCATION\";\n    /** Identify a menu node by its name */ MenuNodeIdTypeEnum[\"Name\"] = \"NAME\";\n    /** Identify a menu node by its slug */ MenuNodeIdTypeEnum[\"Slug\"] = \"SLUG\";\n})(MenuNodeIdTypeEnum || (MenuNodeIdTypeEnum = {}));\nvar MimeTypeEnum;\n(function(MimeTypeEnum) {\n    /** application/java mime type. */ MimeTypeEnum[\"ApplicationJava\"] = \"APPLICATION_JAVA\";\n    /** application/msword mime type. */ MimeTypeEnum[\"ApplicationMsword\"] = \"APPLICATION_MSWORD\";\n    /** application/octet-stream mime type. */ MimeTypeEnum[\"ApplicationOctetStream\"] = \"APPLICATION_OCTET_STREAM\";\n    /** application/onenote mime type. */ MimeTypeEnum[\"ApplicationOnenote\"] = \"APPLICATION_ONENOTE\";\n    /** application/oxps mime type. */ MimeTypeEnum[\"ApplicationOxps\"] = \"APPLICATION_OXPS\";\n    /** application/pdf mime type. */ MimeTypeEnum[\"ApplicationPdf\"] = \"APPLICATION_PDF\";\n    /** application/rar mime type. */ MimeTypeEnum[\"ApplicationRar\"] = \"APPLICATION_RAR\";\n    /** application/rtf mime type. */ MimeTypeEnum[\"ApplicationRtf\"] = \"APPLICATION_RTF\";\n    /** application/ttaf+xml mime type. */ MimeTypeEnum[\"ApplicationTtafXml\"] = \"APPLICATION_TTAF_XML\";\n    /** application/vnd.apple.keynote mime type. */ MimeTypeEnum[\"ApplicationVndAppleKeynote\"] = \"APPLICATION_VND_APPLE_KEYNOTE\";\n    /** application/vnd.apple.numbers mime type. */ MimeTypeEnum[\"ApplicationVndAppleNumbers\"] = \"APPLICATION_VND_APPLE_NUMBERS\";\n    /** application/vnd.apple.pages mime type. */ MimeTypeEnum[\"ApplicationVndApplePages\"] = \"APPLICATION_VND_APPLE_PAGES\";\n    /** application/vnd.ms-access mime type. */ MimeTypeEnum[\"ApplicationVndMsAccess\"] = \"APPLICATION_VND_MS_ACCESS\";\n    /** application/vnd.ms-excel mime type. */ MimeTypeEnum[\"ApplicationVndMsExcel\"] = \"APPLICATION_VND_MS_EXCEL\";\n    /** application/vnd.ms-excel.addin.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsExcelAddinMacroenabled_12\"] = \"APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12\";\n    /** application/vnd.ms-excel.sheet.binary.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsExcelSheetBinaryMacroenabled_12\"] = \"APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12\";\n    /** application/vnd.ms-excel.sheet.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsExcelSheetMacroenabled_12\"] = \"APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12\";\n    /** application/vnd.ms-excel.template.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsExcelTemplateMacroenabled_12\"] = \"APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12\";\n    /** application/vnd.ms-powerpoint mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpoint\"] = \"APPLICATION_VND_MS_POWERPOINT\";\n    /** application/vnd.ms-powerpoint.addin.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpointAddinMacroenabled_12\"] = \"APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12\";\n    /** application/vnd.ms-powerpoint.presentation.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpointPresentationMacroenabled_12\"] = \"APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12\";\n    /** application/vnd.ms-powerpoint.slideshow.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpointSlideshowMacroenabled_12\"] = \"APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12\";\n    /** application/vnd.ms-powerpoint.slide.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpointSlideMacroenabled_12\"] = \"APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12\";\n    /** application/vnd.ms-powerpoint.template.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsPowerpointTemplateMacroenabled_12\"] = \"APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12\";\n    /** application/vnd.ms-project mime type. */ MimeTypeEnum[\"ApplicationVndMsProject\"] = \"APPLICATION_VND_MS_PROJECT\";\n    /** application/vnd.ms-word.document.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsWordDocumentMacroenabled_12\"] = \"APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12\";\n    /** application/vnd.ms-word.template.macroEnabled.12 mime type. */ MimeTypeEnum[\"ApplicationVndMsWordTemplateMacroenabled_12\"] = \"APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12\";\n    /** application/vnd.ms-write mime type. */ MimeTypeEnum[\"ApplicationVndMsWrite\"] = \"APPLICATION_VND_MS_WRITE\";\n    /** application/vnd.ms-xpsdocument mime type. */ MimeTypeEnum[\"ApplicationVndMsXpsdocument\"] = \"APPLICATION_VND_MS_XPSDOCUMENT\";\n    /** application/vnd.oasis.opendocument.chart mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentChart\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_CHART\";\n    /** application/vnd.oasis.opendocument.database mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentDatabase\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE\";\n    /** application/vnd.oasis.opendocument.formula mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentFormula\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA\";\n    /** application/vnd.oasis.opendocument.graphics mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentGraphics\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS\";\n    /** application/vnd.oasis.opendocument.presentation mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentPresentation\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION\";\n    /** application/vnd.oasis.opendocument.spreadsheet mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentSpreadsheet\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET\";\n    /** application/vnd.oasis.opendocument.text mime type. */ MimeTypeEnum[\"ApplicationVndOasisOpendocumentText\"] = \"APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT\";\n    /** application/vnd.openxmlformats-officedocument.presentationml.presentation mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentPresentationmlPresentation\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION\";\n    /** application/vnd.openxmlformats-officedocument.presentationml.slide mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlide\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE\";\n    /** application/vnd.openxmlformats-officedocument.presentationml.slideshow mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentPresentationmlSlideshow\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW\";\n    /** application/vnd.openxmlformats-officedocument.presentationml.template mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentPresentationmlTemplate\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE\";\n    /** application/vnd.openxmlformats-officedocument.spreadsheetml.sheet mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlSheet\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET\";\n    /** application/vnd.openxmlformats-officedocument.spreadsheetml.template mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentSpreadsheetmlTemplate\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE\";\n    /** application/vnd.openxmlformats-officedocument.wordprocessingml.document mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlDocument\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\";\n    /** application/vnd.openxmlformats-officedocument.wordprocessingml.template mime type. */ MimeTypeEnum[\"ApplicationVndOpenxmlformatsOfficedocumentWordprocessingmlTemplate\"] = \"APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE\";\n    /** application/wordperfect mime type. */ MimeTypeEnum[\"ApplicationWordperfect\"] = \"APPLICATION_WORDPERFECT\";\n    /** application/x-7z-compressed mime type. */ MimeTypeEnum[\"ApplicationX_7ZCompressed\"] = \"APPLICATION_X_7Z_COMPRESSED\";\n    /** application/x-gzip mime type. */ MimeTypeEnum[\"ApplicationXGzip\"] = \"APPLICATION_X_GZIP\";\n    /** application/x-tar mime type. */ MimeTypeEnum[\"ApplicationXTar\"] = \"APPLICATION_X_TAR\";\n    /** application/zip mime type. */ MimeTypeEnum[\"ApplicationZip\"] = \"APPLICATION_ZIP\";\n    /** audio/aac mime type. */ MimeTypeEnum[\"AudioAac\"] = \"AUDIO_AAC\";\n    /** audio/flac mime type. */ MimeTypeEnum[\"AudioFlac\"] = \"AUDIO_FLAC\";\n    /** audio/midi mime type. */ MimeTypeEnum[\"AudioMidi\"] = \"AUDIO_MIDI\";\n    /** audio/mpeg mime type. */ MimeTypeEnum[\"AudioMpeg\"] = \"AUDIO_MPEG\";\n    /** audio/ogg mime type. */ MimeTypeEnum[\"AudioOgg\"] = \"AUDIO_OGG\";\n    /** audio/wav mime type. */ MimeTypeEnum[\"AudioWav\"] = \"AUDIO_WAV\";\n    /** audio/x-matroska mime type. */ MimeTypeEnum[\"AudioXMatroska\"] = \"AUDIO_X_MATROSKA\";\n    /** audio/x-ms-wax mime type. */ MimeTypeEnum[\"AudioXMsWax\"] = \"AUDIO_X_MS_WAX\";\n    /** audio/x-ms-wma mime type. */ MimeTypeEnum[\"AudioXMsWma\"] = \"AUDIO_X_MS_WMA\";\n    /** audio/x-realaudio mime type. */ MimeTypeEnum[\"AudioXRealaudio\"] = \"AUDIO_X_REALAUDIO\";\n    /** image/avif mime type. */ MimeTypeEnum[\"ImageAvif\"] = \"IMAGE_AVIF\";\n    /** image/bmp mime type. */ MimeTypeEnum[\"ImageBmp\"] = \"IMAGE_BMP\";\n    /** image/gif mime type. */ MimeTypeEnum[\"ImageGif\"] = \"IMAGE_GIF\";\n    /** image/heic mime type. */ MimeTypeEnum[\"ImageHeic\"] = \"IMAGE_HEIC\";\n    /** image/jpeg mime type. */ MimeTypeEnum[\"ImageJpeg\"] = \"IMAGE_JPEG\";\n    /** image/png mime type. */ MimeTypeEnum[\"ImagePng\"] = \"IMAGE_PNG\";\n    /** image/tiff mime type. */ MimeTypeEnum[\"ImageTiff\"] = \"IMAGE_TIFF\";\n    /** image/webp mime type. */ MimeTypeEnum[\"ImageWebp\"] = \"IMAGE_WEBP\";\n    /** image/x-icon mime type. */ MimeTypeEnum[\"ImageXIcon\"] = \"IMAGE_X_ICON\";\n    /** text/calendar mime type. */ MimeTypeEnum[\"TextCalendar\"] = \"TEXT_CALENDAR\";\n    /** text/css mime type. */ MimeTypeEnum[\"TextCss\"] = \"TEXT_CSS\";\n    /** text/csv mime type. */ MimeTypeEnum[\"TextCsv\"] = \"TEXT_CSV\";\n    /** text/plain mime type. */ MimeTypeEnum[\"TextPlain\"] = \"TEXT_PLAIN\";\n    /** text/richtext mime type. */ MimeTypeEnum[\"TextRichtext\"] = \"TEXT_RICHTEXT\";\n    /** text/tab-separated-values mime type. */ MimeTypeEnum[\"TextTabSeparatedValues\"] = \"TEXT_TAB_SEPARATED_VALUES\";\n    /** text/vtt mime type. */ MimeTypeEnum[\"TextVtt\"] = \"TEXT_VTT\";\n    /** video/3gpp mime type. */ MimeTypeEnum[\"Video_3Gpp\"] = \"VIDEO_3GPP\";\n    /** video/3gpp2 mime type. */ MimeTypeEnum[\"Video_3Gpp2\"] = \"VIDEO_3GPP2\";\n    /** video/avi mime type. */ MimeTypeEnum[\"VideoAvi\"] = \"VIDEO_AVI\";\n    /** video/divx mime type. */ MimeTypeEnum[\"VideoDivx\"] = \"VIDEO_DIVX\";\n    /** video/mp4 mime type. */ MimeTypeEnum[\"VideoMp4\"] = \"VIDEO_MP4\";\n    /** video/mpeg mime type. */ MimeTypeEnum[\"VideoMpeg\"] = \"VIDEO_MPEG\";\n    /** video/ogg mime type. */ MimeTypeEnum[\"VideoOgg\"] = \"VIDEO_OGG\";\n    /** video/quicktime mime type. */ MimeTypeEnum[\"VideoQuicktime\"] = \"VIDEO_QUICKTIME\";\n    /** video/webm mime type. */ MimeTypeEnum[\"VideoWebm\"] = \"VIDEO_WEBM\";\n    /** video/x-flv mime type. */ MimeTypeEnum[\"VideoXFlv\"] = \"VIDEO_X_FLV\";\n    /** video/x-matroska mime type. */ MimeTypeEnum[\"VideoXMatroska\"] = \"VIDEO_X_MATROSKA\";\n    /** video/x-ms-asf mime type. */ MimeTypeEnum[\"VideoXMsAsf\"] = \"VIDEO_X_MS_ASF\";\n    /** video/x-ms-wm mime type. */ MimeTypeEnum[\"VideoXMsWm\"] = \"VIDEO_X_MS_WM\";\n    /** video/x-ms-wmv mime type. */ MimeTypeEnum[\"VideoXMsWmv\"] = \"VIDEO_X_MS_WMV\";\n    /** video/x-ms-wmx mime type. */ MimeTypeEnum[\"VideoXMsWmx\"] = \"VIDEO_X_MS_WMX\";\n})(MimeTypeEnum || (MimeTypeEnum = {}));\nvar OrderEnum;\n(function(OrderEnum) {\n    /** Sort the query result set in an ascending order */ OrderEnum[\"Asc\"] = \"ASC\";\n    /** Sort the query result set in a descending order */ OrderEnum[\"Desc\"] = \"DESC\";\n})(OrderEnum || (OrderEnum = {}));\nvar PageIdType;\n(function(PageIdType) {\n    /** Identify a resource by the Database ID. */ PageIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ PageIdType[\"Id\"] = \"ID\";\n    /** Identify a resource by the URI. */ PageIdType[\"Uri\"] = \"URI\";\n})(PageIdType || (PageIdType = {}));\nvar PluginStatusEnum;\n(function(PluginStatusEnum) {\n    /** The plugin is currently active. */ PluginStatusEnum[\"Active\"] = \"ACTIVE\";\n    /** The plugin is a drop-in plugin. */ PluginStatusEnum[\"DropIn\"] = \"DROP_IN\";\n    /** The plugin is currently inactive. */ PluginStatusEnum[\"Inactive\"] = \"INACTIVE\";\n    /** The plugin is a must-use plugin. */ PluginStatusEnum[\"MustUse\"] = \"MUST_USE\";\n    /** The plugin is technically active but was paused while loading. */ PluginStatusEnum[\"Paused\"] = \"PAUSED\";\n    /** The plugin was active recently. */ PluginStatusEnum[\"RecentlyActive\"] = \"RECENTLY_ACTIVE\";\n    /** The plugin has an upgrade available. */ PluginStatusEnum[\"Upgrade\"] = \"UPGRADE\";\n})(PluginStatusEnum || (PluginStatusEnum = {}));\nvar PostFormatIdType;\n(function(PostFormatIdType) {\n    /** The Database ID for the node */ PostFormatIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** The hashed Global ID */ PostFormatIdType[\"Id\"] = \"ID\";\n    /** The name of the node */ PostFormatIdType[\"Name\"] = \"NAME\";\n    /** Url friendly name of the node */ PostFormatIdType[\"Slug\"] = \"SLUG\";\n    /** The URI for the node */ PostFormatIdType[\"Uri\"] = \"URI\";\n})(PostFormatIdType || (PostFormatIdType = {}));\nvar PostIdType;\n(function(PostIdType) {\n    /** Identify a resource by the Database ID. */ PostIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** Identify a resource by the (hashed) Global ID. */ PostIdType[\"Id\"] = \"ID\";\n    /** Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier. */ PostIdType[\"Slug\"] = \"SLUG\";\n    /** Identify a resource by the URI. */ PostIdType[\"Uri\"] = \"URI\";\n})(PostIdType || (PostIdType = {}));\nvar PostObjectFieldFormatEnum;\n(function(PostObjectFieldFormatEnum) {\n    /** Provide the field value directly from database. Null on unauthenticated requests. */ PostObjectFieldFormatEnum[\"Raw\"] = \"RAW\";\n    /** Provide the field value as rendered by WordPress. Default. */ PostObjectFieldFormatEnum[\"Rendered\"] = \"RENDERED\";\n})(PostObjectFieldFormatEnum || (PostObjectFieldFormatEnum = {}));\nvar PostObjectsConnectionDateColumnEnum;\n(function(PostObjectsConnectionDateColumnEnum) {\n    /** The date the comment was created in local time. */ PostObjectsConnectionDateColumnEnum[\"Date\"] = \"DATE\";\n    /** The most recent modification date of the comment. */ PostObjectsConnectionDateColumnEnum[\"Modified\"] = \"MODIFIED\";\n})(PostObjectsConnectionDateColumnEnum || (PostObjectsConnectionDateColumnEnum = {}));\nvar PostObjectsConnectionOrderbyEnum;\n(function(PostObjectsConnectionOrderbyEnum) {\n    /** Order by author */ PostObjectsConnectionOrderbyEnum[\"Author\"] = \"AUTHOR\";\n    /** Order by the number of comments it has acquired */ PostObjectsConnectionOrderbyEnum[\"CommentCount\"] = \"COMMENT_COUNT\";\n    /** Order by publish date */ PostObjectsConnectionOrderbyEnum[\"Date\"] = \"DATE\";\n    /** Preserve the ID order given in the IN array */ PostObjectsConnectionOrderbyEnum[\"In\"] = \"IN\";\n    /** Order by the menu order value */ PostObjectsConnectionOrderbyEnum[\"MenuOrder\"] = \"MENU_ORDER\";\n    /** Order by last modified date */ PostObjectsConnectionOrderbyEnum[\"Modified\"] = \"MODIFIED\";\n    /** Preserve slug order given in the NAME_IN array */ PostObjectsConnectionOrderbyEnum[\"NameIn\"] = \"NAME_IN\";\n    /** Order by parent ID */ PostObjectsConnectionOrderbyEnum[\"Parent\"] = \"PARENT\";\n    /** Order by slug */ PostObjectsConnectionOrderbyEnum[\"Slug\"] = \"SLUG\";\n    /** Order by title */ PostObjectsConnectionOrderbyEnum[\"Title\"] = \"TITLE\";\n})(PostObjectsConnectionOrderbyEnum || (PostObjectsConnectionOrderbyEnum = {}));\nvar PostStatusEnum;\n(function(PostStatusEnum) {\n    /** Objects with the acf-disabled status */ PostStatusEnum[\"AcfDisabled\"] = \"ACF_DISABLED\";\n    /** Objects with the auto-draft status */ PostStatusEnum[\"AutoDraft\"] = \"AUTO_DRAFT\";\n    /** Objects with the draft status */ PostStatusEnum[\"Draft\"] = \"DRAFT\";\n    /** Objects with the future status */ PostStatusEnum[\"Future\"] = \"FUTURE\";\n    /** Objects with the inherit status */ PostStatusEnum[\"Inherit\"] = \"INHERIT\";\n    /** Objects with the pending status */ PostStatusEnum[\"Pending\"] = \"PENDING\";\n    /** Objects with the private status */ PostStatusEnum[\"Private\"] = \"PRIVATE\";\n    /** Objects with the publish status */ PostStatusEnum[\"Publish\"] = \"PUBLISH\";\n    /** Objects with the request-completed status */ PostStatusEnum[\"RequestCompleted\"] = \"REQUEST_COMPLETED\";\n    /** Objects with the request-confirmed status */ PostStatusEnum[\"RequestConfirmed\"] = \"REQUEST_CONFIRMED\";\n    /** Objects with the request-failed status */ PostStatusEnum[\"RequestFailed\"] = \"REQUEST_FAILED\";\n    /** Objects with the request-pending status */ PostStatusEnum[\"RequestPending\"] = \"REQUEST_PENDING\";\n    /** Objects with the trash status */ PostStatusEnum[\"Trash\"] = \"TRASH\";\n})(PostStatusEnum || (PostStatusEnum = {}));\nvar RelationEnum;\n(function(RelationEnum) {\n    /** The logical AND condition returns true if both operands are true, otherwise, it returns false. */ RelationEnum[\"And\"] = \"AND\";\n    /** The logical OR condition returns false if both operands are false, otherwise, it returns true. */ RelationEnum[\"Or\"] = \"OR\";\n})(RelationEnum || (RelationEnum = {}));\nvar ScriptLoadingStrategyEnum;\n(function(ScriptLoadingStrategyEnum) {\n    /** Use the script `async` attribute */ ScriptLoadingStrategyEnum[\"Async\"] = \"ASYNC\";\n    /** Use the script `defer` attribute */ ScriptLoadingStrategyEnum[\"Defer\"] = \"DEFER\";\n})(ScriptLoadingStrategyEnum || (ScriptLoadingStrategyEnum = {}));\nvar TagIdType;\n(function(TagIdType) {\n    /** The Database ID for the node */ TagIdType[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** The hashed Global ID */ TagIdType[\"Id\"] = \"ID\";\n    /** The name of the node */ TagIdType[\"Name\"] = \"NAME\";\n    /** Url friendly name of the node */ TagIdType[\"Slug\"] = \"SLUG\";\n    /** The URI for the node */ TagIdType[\"Uri\"] = \"URI\";\n})(TagIdType || (TagIdType = {}));\nvar TaxonomyEnum;\n(function(TaxonomyEnum) {\n    /** Taxonomy enum category */ TaxonomyEnum[\"Category\"] = \"CATEGORY\";\n    /** Taxonomy enum post_format */ TaxonomyEnum[\"Postformat\"] = \"POSTFORMAT\";\n    /** Taxonomy enum post_tag */ TaxonomyEnum[\"Tag\"] = \"TAG\";\n})(TaxonomyEnum || (TaxonomyEnum = {}));\nvar TaxonomyIdTypeEnum;\n(function(TaxonomyIdTypeEnum) {\n    /** The globally unique ID */ TaxonomyIdTypeEnum[\"Id\"] = \"ID\";\n    /** The name of the taxonomy */ TaxonomyIdTypeEnum[\"Name\"] = \"NAME\";\n})(TaxonomyIdTypeEnum || (TaxonomyIdTypeEnum = {}));\nvar TermNodeIdTypeEnum;\n(function(TermNodeIdTypeEnum) {\n    /** The Database ID for the node */ TermNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** The hashed Global ID */ TermNodeIdTypeEnum[\"Id\"] = \"ID\";\n    /** The name of the node */ TermNodeIdTypeEnum[\"Name\"] = \"NAME\";\n    /** Url friendly name of the node */ TermNodeIdTypeEnum[\"Slug\"] = \"SLUG\";\n    /** The URI for the node */ TermNodeIdTypeEnum[\"Uri\"] = \"URI\";\n})(TermNodeIdTypeEnum || (TermNodeIdTypeEnum = {}));\nvar TermObjectsConnectionOrderbyEnum;\n(function(TermObjectsConnectionOrderbyEnum) {\n    /** Order the connection by item count. */ TermObjectsConnectionOrderbyEnum[\"Count\"] = \"COUNT\";\n    /** Order the connection by description. */ TermObjectsConnectionOrderbyEnum[\"Description\"] = \"DESCRIPTION\";\n    /** Order the connection by name. */ TermObjectsConnectionOrderbyEnum[\"Name\"] = \"NAME\";\n    /** Order the connection by slug. */ TermObjectsConnectionOrderbyEnum[\"Slug\"] = \"SLUG\";\n    /** Order the connection by term group. */ TermObjectsConnectionOrderbyEnum[\"TermGroup\"] = \"TERM_GROUP\";\n    /** Order the connection by term id. */ TermObjectsConnectionOrderbyEnum[\"TermId\"] = \"TERM_ID\";\n    /** Order the connection by term order. */ TermObjectsConnectionOrderbyEnum[\"TermOrder\"] = \"TERM_ORDER\";\n})(TermObjectsConnectionOrderbyEnum || (TermObjectsConnectionOrderbyEnum = {}));\nvar UserNodeIdTypeEnum;\n(function(UserNodeIdTypeEnum) {\n    /** The Database ID for the node */ UserNodeIdTypeEnum[\"DatabaseId\"] = \"DATABASE_ID\";\n    /** The Email of the User */ UserNodeIdTypeEnum[\"Email\"] = \"EMAIL\";\n    /** The hashed Global ID */ UserNodeIdTypeEnum[\"Id\"] = \"ID\";\n    /** The slug of the User */ UserNodeIdTypeEnum[\"Slug\"] = \"SLUG\";\n    /** The URI for the node */ UserNodeIdTypeEnum[\"Uri\"] = \"URI\";\n    /** The username the User uses to login with */ UserNodeIdTypeEnum[\"Username\"] = \"USERNAME\";\n})(UserNodeIdTypeEnum || (UserNodeIdTypeEnum = {}));\nvar UserRoleEnum;\n(function(UserRoleEnum) {\n    /** User role with specific capabilities */ UserRoleEnum[\"Administrator\"] = \"ADMINISTRATOR\";\n    /** User role with specific capabilities */ UserRoleEnum[\"Author\"] = \"AUTHOR\";\n    /** User role with specific capabilities */ UserRoleEnum[\"Contributor\"] = \"CONTRIBUTOR\";\n    /** User role with specific capabilities */ UserRoleEnum[\"Editor\"] = \"EDITOR\";\n    /** User role with specific capabilities */ UserRoleEnum[\"Subscriber\"] = \"SUBSCRIBER\";\n})(UserRoleEnum || (UserRoleEnum = {}));\nvar UsersConnectionOrderbyEnum;\n(function(UsersConnectionOrderbyEnum) {\n    /** Order by display name */ UsersConnectionOrderbyEnum[\"DisplayName\"] = \"DISPLAY_NAME\";\n    /** Order by email address */ UsersConnectionOrderbyEnum[\"Email\"] = \"EMAIL\";\n    /** Order by login */ UsersConnectionOrderbyEnum[\"Login\"] = \"LOGIN\";\n    /** Preserve the login order given in the LOGIN_IN array */ UsersConnectionOrderbyEnum[\"LoginIn\"] = \"LOGIN_IN\";\n    /** Order by nice name */ UsersConnectionOrderbyEnum[\"NiceName\"] = \"NICE_NAME\";\n    /** Preserve the nice name order given in the NICE_NAME_IN array */ UsersConnectionOrderbyEnum[\"NiceNameIn\"] = \"NICE_NAME_IN\";\n    /** Order by registration date */ UsersConnectionOrderbyEnum[\"Registered\"] = \"REGISTERED\";\n    /** Order by URL */ UsersConnectionOrderbyEnum[\"Url\"] = \"URL\";\n})(UsersConnectionOrderbyEnum || (UsersConnectionOrderbyEnum = {}));\nvar UsersConnectionSearchColumnEnum;\n(function(UsersConnectionSearchColumnEnum) {\n    /** The user's email address. */ UsersConnectionSearchColumnEnum[\"Email\"] = \"EMAIL\";\n    /** The globally unique ID. */ UsersConnectionSearchColumnEnum[\"Id\"] = \"ID\";\n    /** The username the User uses to login with. */ UsersConnectionSearchColumnEnum[\"Login\"] = \"LOGIN\";\n    /** A URL-friendly name for the user. The default is the user's username. */ UsersConnectionSearchColumnEnum[\"Nicename\"] = \"NICENAME\";\n    /** The URL of the user's website. */ UsersConnectionSearchColumnEnum[\"Url\"] = \"URL\";\n})(UsersConnectionSearchColumnEnum || (UsersConnectionSearchColumnEnum = {}));\nconst HeaderGeneralSettingsFragmentFragmentDoc = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"FragmentDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"HeaderGeneralSettingsFragment\"\n            },\n            \"typeCondition\": {\n                \"kind\": \"NamedType\",\n                \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"GeneralSettings\"\n                }\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"title\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"description\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst PrimaryMenuItemFragmentFragmentDoc = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"FragmentDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"PrimaryMenuItemFragment\"\n            },\n            \"typeCondition\": {\n                \"kind\": \"NamedType\",\n                \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"MenuItem\"\n                }\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"id\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"uri\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"path\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"label\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"parentId\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"cssClasses\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menu\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"node\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"name\"\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst HeroSectionBlocksFragmentDoc = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"FragmentDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"HeroSectionBlocks\"\n            },\n            \"typeCondition\": {\n                \"kind\": \"NamedType\",\n                \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"HeroSectionBlocks\"\n                }\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"__typename\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"heroDescription\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"heroTitle\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"heroCta\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ctaLink\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"target\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"title\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"url\"\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ctaText\"\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst HeroVideoFragmentDoc = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"FragmentDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"HeroVideo\"\n            },\n            \"typeCondition\": {\n                \"kind\": \"NamedType\",\n                \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"HeroVideo\"\n                }\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"__typename\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"heroVideoUri\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst BlocksWhoWeAreFragmentDoc = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"FragmentDefinition\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"BlocksWhoWeAre\"\n            },\n            \"typeCondition\": {\n                \"kind\": \"NamedType\",\n                \"name\": {\n                    \"kind\": \"Name\",\n                    \"value\": \"BlocksWhoWeAre\"\n                }\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"__typename\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"subtitleWwa\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"titleWwa\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"descriptionWwa\"\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"ctaWwa\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ctaWwaLink\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"target\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"title\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"url\"\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"ctaWwaTitle\"\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst GetExamplePageDocument = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"OperationDefinition\",\n            \"operation\": \"query\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"GetExamplePage\"\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"generalSettings\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"description\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"alias\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"primaryMenuItems\"\n                        },\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menuItems\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"where\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"ObjectValue\",\n                                    \"fields\": [\n                                        {\n                                            \"kind\": \"ObjectField\",\n                                            \"name\": {\n                                                \"kind\": \"Name\",\n                                                \"value\": \"location\"\n                                            },\n                                            \"value\": {\n                                                \"kind\": \"EnumValue\",\n                                                \"value\": \"PRIMARY\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"nodes\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"id\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"uri\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"path\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"label\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"parentId\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"cssClasses\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"menu\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"name\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst GetArchiveDocument = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"OperationDefinition\",\n            \"operation\": \"query\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"GetArchive\"\n            },\n            \"variableDefinitions\": [\n                {\n                    \"kind\": \"VariableDefinition\",\n                    \"variable\": {\n                        \"kind\": \"Variable\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"uri\"\n                        }\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"String\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"nodeByUri\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"uri\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"Variable\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"uri\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"alias\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"archiveType\"\n                                    },\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"__typename\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"InlineFragment\",\n                                    \"typeCondition\": {\n                                        \"kind\": \"NamedType\",\n                                        \"name\": {\n                                            \"kind\": \"Name\",\n                                            \"value\": \"Category\"\n                                        }\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"name\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"posts\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"nodes\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"id\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"title\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"uri\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n                                {\n                                    \"kind\": \"InlineFragment\",\n                                    \"typeCondition\": {\n                                        \"kind\": \"NamedType\",\n                                        \"name\": {\n                                            \"kind\": \"Name\",\n                                            \"value\": \"Tag\"\n                                        }\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"name\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"posts\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"nodes\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"id\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"title\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"uri\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"generalSettings\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"description\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"alias\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"primaryMenuItems\"\n                        },\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menuItems\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"where\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"ObjectValue\",\n                                    \"fields\": [\n                                        {\n                                            \"kind\": \"ObjectField\",\n                                            \"name\": {\n                                                \"kind\": \"Name\",\n                                                \"value\": \"location\"\n                                            },\n                                            \"value\": {\n                                                \"kind\": \"EnumValue\",\n                                                \"value\": \"PRIMARY\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"nodes\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"id\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"uri\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"path\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"label\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"parentId\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"cssClasses\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"menu\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"name\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst GetHomePageDocument = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"OperationDefinition\",\n            \"operation\": \"query\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"GetHomePage\"\n            },\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"generalSettings\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"description\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"alias\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"primaryMenuItems\"\n                        },\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menuItems\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"where\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"ObjectValue\",\n                                    \"fields\": [\n                                        {\n                                            \"kind\": \"ObjectField\",\n                                            \"name\": {\n                                                \"kind\": \"Name\",\n                                                \"value\": \"location\"\n                                            },\n                                            \"value\": {\n                                                \"kind\": \"EnumValue\",\n                                                \"value\": \"PRIMARY\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"nodes\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"id\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"uri\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"path\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"label\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"parentId\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"cssClasses\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"menu\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"name\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"nickelBronxHeader\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"config\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"ctaText\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"ctaLink\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"brandLogo\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"sourceUrl\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"page\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"id\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"StringValue\",\n                                    \"value\": \"cG9zdDoyMw==\",\n                                    \"block\": false\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"editorBlocks\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"InlineFragment\",\n                                                \"typeCondition\": {\n                                                    \"kind\": \"NamedType\",\n                                                    \"name\": {\n                                                        \"kind\": \"Name\",\n                                                        \"value\": \"AcfHeroSection\"\n                                                    }\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"heroSectionBlocks\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"heroCta\"\n                                                                        },\n                                                                        \"selectionSet\": {\n                                                                            \"kind\": \"SelectionSet\",\n                                                                            \"selections\": [\n                                                                                {\n                                                                                    \"kind\": \"Field\",\n                                                                                    \"name\": {\n                                                                                        \"kind\": \"Name\",\n                                                                                        \"value\": \"ctaLink\"\n                                                                                    },\n                                                                                    \"selectionSet\": {\n                                                                                        \"kind\": \"SelectionSet\",\n                                                                                        \"selections\": [\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"target\"\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"title\"\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"url\"\n                                                                                                }\n                                                                                            }\n                                                                                        ]\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    \"kind\": \"Field\",\n                                                                                    \"name\": {\n                                                                                        \"kind\": \"Name\",\n                                                                                        \"value\": \"ctaText\"\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"heroDescription\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"heroTitle\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        },\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"clientId\"\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"InlineFragment\",\n                                                \"typeCondition\": {\n                                                    \"kind\": \"NamedType\",\n                                                    \"name\": {\n                                                        \"kind\": \"Name\",\n                                                        \"value\": \"AcfHeroVideoSection\"\n                                                    }\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"heroVideo\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"heroVideoUri\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        },\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"clientId\"\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"InlineFragment\",\n                                                \"typeCondition\": {\n                                                    \"kind\": \"NamedType\",\n                                                    \"name\": {\n                                                        \"kind\": \"Name\",\n                                                        \"value\": \"AcfWhoWeAreSection\"\n                                                    }\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"blocksWhoWeAre\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"ctaWwa\"\n                                                                        },\n                                                                        \"selectionSet\": {\n                                                                            \"kind\": \"SelectionSet\",\n                                                                            \"selections\": [\n                                                                                {\n                                                                                    \"kind\": \"Field\",\n                                                                                    \"name\": {\n                                                                                        \"kind\": \"Name\",\n                                                                                        \"value\": \"ctaWwaLink\"\n                                                                                    },\n                                                                                    \"selectionSet\": {\n                                                                                        \"kind\": \"SelectionSet\",\n                                                                                        \"selections\": [\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"target\"\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"title\"\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                \"kind\": \"Field\",\n                                                                                                \"name\": {\n                                                                                                    \"kind\": \"Name\",\n                                                                                                    \"value\": \"url\"\n                                                                                                }\n                                                                                            }\n                                                                                        ]\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    \"kind\": \"Field\",\n                                                                                    \"name\": {\n                                                                                        \"kind\": \"Name\",\n                                                                                        \"value\": \"ctaWwaTitle\"\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"subtitleWwa\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"titleWwa\"\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"descriptionWwa\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        },\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"clientId\"\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst GetPageDocument = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"OperationDefinition\",\n            \"operation\": \"query\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"GetPage\"\n            },\n            \"variableDefinitions\": [\n                {\n                    \"kind\": \"VariableDefinition\",\n                    \"variable\": {\n                        \"kind\": \"Variable\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"databaseId\"\n                        }\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"ID\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"kind\": \"VariableDefinition\",\n                    \"variable\": {\n                        \"kind\": \"Variable\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"asPreview\"\n                        }\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Boolean\"\n                        }\n                    },\n                    \"defaultValue\": {\n                        \"kind\": \"BooleanValue\",\n                        \"value\": false\n                    }\n                }\n            ],\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"page\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"id\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"Variable\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"databaseId\"\n                                    }\n                                }\n                            },\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"idType\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"EnumValue\",\n                                    \"value\": \"DATABASE_ID\"\n                                }\n                            },\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"asPreview\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"Variable\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"asPreview\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"content\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"generalSettings\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"description\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"alias\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"primaryMenuItems\"\n                        },\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menuItems\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"where\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"ObjectValue\",\n                                    \"fields\": [\n                                        {\n                                            \"kind\": \"ObjectField\",\n                                            \"name\": {\n                                                \"kind\": \"Name\",\n                                                \"value\": \"location\"\n                                            },\n                                            \"value\": {\n                                                \"kind\": \"EnumValue\",\n                                                \"value\": \"PRIMARY\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"nodes\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"id\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"uri\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"path\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"label\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"parentId\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"cssClasses\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"menu\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"name\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\nconst GetPostDocument = {\n    \"kind\": \"Document\",\n    \"definitions\": [\n        {\n            \"kind\": \"OperationDefinition\",\n            \"operation\": \"query\",\n            \"name\": {\n                \"kind\": \"Name\",\n                \"value\": \"GetPost\"\n            },\n            \"variableDefinitions\": [\n                {\n                    \"kind\": \"VariableDefinition\",\n                    \"variable\": {\n                        \"kind\": \"Variable\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"databaseId\"\n                        }\n                    },\n                    \"type\": {\n                        \"kind\": \"NonNullType\",\n                        \"type\": {\n                            \"kind\": \"NamedType\",\n                            \"name\": {\n                                \"kind\": \"Name\",\n                                \"value\": \"ID\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"kind\": \"VariableDefinition\",\n                    \"variable\": {\n                        \"kind\": \"Variable\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"asPreview\"\n                        }\n                    },\n                    \"type\": {\n                        \"kind\": \"NamedType\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"Boolean\"\n                        }\n                    },\n                    \"defaultValue\": {\n                        \"kind\": \"BooleanValue\",\n                        \"value\": false\n                    }\n                }\n            ],\n            \"selectionSet\": {\n                \"kind\": \"SelectionSet\",\n                \"selections\": [\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"post\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"id\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"Variable\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"databaseId\"\n                                    }\n                                }\n                            },\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"idType\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"EnumValue\",\n                                    \"value\": \"DATABASE_ID\"\n                                }\n                            },\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"asPreview\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"Variable\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"asPreview\"\n                                    }\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"content\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"date\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"author\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"node\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"name\"\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"generalSettings\"\n                        },\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"title\"\n                                    }\n                                },\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"description\"\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        \"kind\": \"Field\",\n                        \"alias\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"primaryMenuItems\"\n                        },\n                        \"name\": {\n                            \"kind\": \"Name\",\n                            \"value\": \"menuItems\"\n                        },\n                        \"arguments\": [\n                            {\n                                \"kind\": \"Argument\",\n                                \"name\": {\n                                    \"kind\": \"Name\",\n                                    \"value\": \"where\"\n                                },\n                                \"value\": {\n                                    \"kind\": \"ObjectValue\",\n                                    \"fields\": [\n                                        {\n                                            \"kind\": \"ObjectField\",\n                                            \"name\": {\n                                                \"kind\": \"Name\",\n                                                \"value\": \"location\"\n                                            },\n                                            \"value\": {\n                                                \"kind\": \"EnumValue\",\n                                                \"value\": \"PRIMARY\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        \"selectionSet\": {\n                            \"kind\": \"SelectionSet\",\n                            \"selections\": [\n                                {\n                                    \"kind\": \"Field\",\n                                    \"name\": {\n                                        \"kind\": \"Name\",\n                                        \"value\": \"nodes\"\n                                    },\n                                    \"selectionSet\": {\n                                        \"kind\": \"SelectionSet\",\n                                        \"selections\": [\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"id\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"uri\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"path\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"label\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"parentId\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"cssClasses\"\n                                                }\n                                            },\n                                            {\n                                                \"kind\": \"Field\",\n                                                \"name\": {\n                                                    \"kind\": \"Name\",\n                                                    \"value\": \"menu\"\n                                                },\n                                                \"selectionSet\": {\n                                                    \"kind\": \"SelectionSet\",\n                                                    \"selections\": [\n                                                        {\n                                                            \"kind\": \"Field\",\n                                                            \"name\": {\n                                                                \"kind\": \"Name\",\n                                                                \"value\": \"node\"\n                                                            },\n                                                            \"selectionSet\": {\n                                                                \"kind\": \"SelectionSet\",\n                                                                \"selections\": [\n                                                                    {\n                                                                        \"kind\": \"Field\",\n                                                                        \"name\": {\n                                                                            \"kind\": \"Name\",\n                                                                            \"value\": \"name\"\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvX19nZW5lcmF0ZWRfXy9ncmFwaHFsLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxrQkFBa0I7VUE0Uk5BO0lBQ1YsNkNBQTZDO0lBRTdDLDhDQUE4QztJQUU5Qyw4Q0FBOEM7SUFFOUMsOENBQThDO0dBUHBDQSxxQkFBQUE7O1VBME9BQztJQUNWLGlDQUFpQztJQUVqQyx5QkFBeUI7SUFFekIseUJBQXlCO0lBRXpCLGtDQUFrQztJQUVsQyx5QkFBeUI7R0FUZkEsbUJBQUFBOztVQTZjQUM7SUFDViw0Q0FBNEM7SUFFNUMsbURBQW1EO0dBSHpDQSwwQkFBQUE7O1VBUUFDO0lBQ1Ysc0NBQXNDO0lBRXRDLHdDQUF3QztJQUV4QyxrQ0FBa0M7SUFFbEMsbUNBQW1DO0dBUHpCQSxzQkFBQUE7O1VBOE5BQztJQUNWLGtEQUFrRDtJQUVsRCw2Q0FBNkM7SUFFN0MseUNBQXlDO0lBRXpDLDJDQUEyQztJQUUzQywrQ0FBK0M7SUFFL0MsZ0RBQWdEO0lBRWhELG1DQUFtQztJQUVuQyxpREFBaUQ7SUFFakQsOERBQThEO0lBRTlELG1FQUFtRTtJQUVuRSx1RUFBdUU7SUFFdkUsc0NBQXNDO0lBRXRDLG9DQUFvQztJQUVwQyxpQ0FBaUM7SUFFakMscUZBQXFGO0lBRXJGLDBCQUEwQjtHQS9CaEJBLGtDQUFBQTs7VUFpVEFDO0lBQ1YsNENBQTRDO0lBRTVDLG1EQUFtRDtJQUVuRCxvQ0FBb0M7R0FMMUJBLDBCQUFBQTs7VUEwT0FDO0lBQ1YsK0JBQStCO0lBRS9CLCtCQUErQjtJQUUvQiwrQkFBK0I7R0FMckJBLG9CQUFBQTs7VUFVQUM7SUFDViwyQkFBMkI7SUFFM0Isa0NBQWtDO0dBSHhCQSwwQkFBQUE7O1VBa0hBQztJQUNWLCtCQUErQjtHQURyQkEsK0JBQUFBOztVQU1BQztJQUNWLCtCQUErQjtHQURyQkEsaUNBQUFBOztVQU1BQztJQUNWLCtCQUErQjtHQURyQkEsMEJBQUFBOztVQTAzTEFDOzs7OztHQUFBQSw4QkFBQUE7O1VBMnJCQUM7SUFDViw0Q0FBNEM7SUFFNUMsbURBQW1EO0lBRW5ELGdIQUFnSDtJQUVoSCw0Q0FBNEM7SUFFNUMsb0NBQW9DO0dBVDFCQSxvQkFBQUE7O1VBMkNBQztJQUNWLGtDQUFrQztJQUVsQyxtQ0FBbUM7SUFFbkMseUNBQXlDO0lBRXpDLHNDQUFzQztJQUV0QyxzQ0FBc0M7SUFFdEMsc0NBQXNDO0dBWDVCQSxzQkFBQUE7O1VBZ0JBQztJQUNWLHVDQUF1QztJQUV2QyxvQ0FBb0M7SUFFcEMsb0NBQW9DO0lBRXBDLGtDQUFrQztHQVB4QkEsd0JBQUFBOztVQTRUQUM7SUFDViw0Q0FBNEM7SUFFNUMsbURBQW1EO0dBSHpDQSwyQkFBQUE7O1VBMEVBQztJQUNWLHdDQUF3QztJQUV4Qyx5Q0FBeUM7R0FIL0JBLHFCQUFBQTs7VUFRQUM7SUFDViw2Q0FBNkM7SUFFN0Msb0RBQW9EO0lBRXBELDhFQUE4RTtJQUU5RSxxQ0FBcUM7SUFFckMscUNBQXFDO0dBVDNCQSx1QkFBQUE7O1VBMkRBQztJQUNWLGdDQUFnQztJQUVoQyxrQ0FBa0M7SUFFbEMsd0NBQXdDO0lBRXhDLG1DQUFtQztJQUVuQyxnQ0FBZ0M7SUFFaEMsK0JBQStCO0lBRS9CLCtCQUErQjtJQUUvQiwrQkFBK0I7SUFFL0Isb0NBQW9DO0lBRXBDLDZDQUE2QztJQUU3Qyw2Q0FBNkM7SUFFN0MsMkNBQTJDO0lBRTNDLHlDQUF5QztJQUV6Qyx3Q0FBd0M7SUFFeEMsOERBQThEO0lBRTlELHFFQUFxRTtJQUVyRSw4REFBOEQ7SUFFOUQsaUVBQWlFO0lBRWpFLDZDQUE2QztJQUU3QyxtRUFBbUU7SUFFbkUsMEVBQTBFO0lBRTFFLHVFQUF1RTtJQUV2RSxtRUFBbUU7SUFFbkUsc0VBQXNFO0lBRXRFLDBDQUEwQztJQUUxQyxnRUFBZ0U7SUFFaEUsZ0VBQWdFO0lBRWhFLHdDQUF3QztJQUV4Qyw4Q0FBOEM7SUFFOUMsd0RBQXdEO0lBRXhELDJEQUEyRDtJQUUzRCwwREFBMEQ7SUFFMUQsMkRBQTJEO0lBRTNELCtEQUErRDtJQUUvRCw4REFBOEQ7SUFFOUQsdURBQXVEO0lBRXZELHlGQUF5RjtJQUV6RixrRkFBa0Y7SUFFbEYsc0ZBQXNGO0lBRXRGLHFGQUFxRjtJQUVyRixpRkFBaUY7SUFFakYsb0ZBQW9GO0lBRXBGLHVGQUF1RjtJQUV2Rix1RkFBdUY7SUFFdkYsdUNBQXVDO0lBRXZDLDJDQUEyQztJQUUzQyxrQ0FBa0M7SUFFbEMsaUNBQWlDO0lBRWpDLCtCQUErQjtJQUUvQix5QkFBeUI7SUFFekIsMEJBQTBCO0lBRTFCLDBCQUEwQjtJQUUxQiwwQkFBMEI7SUFFMUIseUJBQXlCO0lBRXpCLHlCQUF5QjtJQUV6QixnQ0FBZ0M7SUFFaEMsOEJBQThCO0lBRTlCLDhCQUE4QjtJQUU5QixpQ0FBaUM7SUFFakMsMEJBQTBCO0lBRTFCLHlCQUF5QjtJQUV6Qix5QkFBeUI7SUFFekIsMEJBQTBCO0lBRTFCLDBCQUEwQjtJQUUxQix5QkFBeUI7SUFFekIsMEJBQTBCO0lBRTFCLDBCQUEwQjtJQUUxQiw0QkFBNEI7SUFFNUIsNkJBQTZCO0lBRTdCLHdCQUF3QjtJQUV4Qix3QkFBd0I7SUFFeEIsMEJBQTBCO0lBRTFCLDZCQUE2QjtJQUU3Qix5Q0FBeUM7SUFFekMsd0JBQXdCO0lBRXhCLDBCQUEwQjtJQUUxQiwyQkFBMkI7SUFFM0IseUJBQXlCO0lBRXpCLDBCQUEwQjtJQUUxQix5QkFBeUI7SUFFekIsMEJBQTBCO0lBRTFCLHlCQUF5QjtJQUV6QiwrQkFBK0I7SUFFL0IsMEJBQTBCO0lBRTFCLDJCQUEyQjtJQUUzQixnQ0FBZ0M7SUFFaEMsOEJBQThCO0lBRTlCLDZCQUE2QjtJQUU3Qiw4QkFBOEI7SUFFOUIsOEJBQThCO0dBbkxwQkEsaUJBQUFBOztVQTJZQUM7SUFDVixvREFBb0Q7SUFFcEQsb0RBQW9EO0dBSDFDQSxjQUFBQTs7VUFpUUFDO0lBQ1YsNENBQTRDO0lBRTVDLG1EQUFtRDtJQUVuRCxvQ0FBb0M7R0FMMUJBLGVBQUFBOztVQWtRQUM7SUFDVixvQ0FBb0M7SUFFcEMsb0NBQW9DO0lBRXBDLHNDQUFzQztJQUV0QyxxQ0FBcUM7SUFFckMsbUVBQW1FO0lBRW5FLG9DQUFvQztJQUVwQyx5Q0FBeUM7R0FiL0JBLHFCQUFBQTs7VUE2Y0FDO0lBQ1YsaUNBQWlDO0lBRWpDLHlCQUF5QjtJQUV6Qix5QkFBeUI7SUFFekIsa0NBQWtDO0lBRWxDLHlCQUF5QjtHQVRmQSxxQkFBQUE7O1VBbU1BQztJQUNWLDRDQUE0QztJQUU1QyxtREFBbUQ7SUFFbkQsZ0hBQWdIO0lBRWhILG9DQUFvQztHQVAxQkEsZUFBQUE7O1VBWUFDO0lBQ1Ysc0ZBQXNGO0lBRXRGLCtEQUErRDtHQUhyREEsOEJBQUFBOztVQVFBQztJQUNWLG9EQUFvRDtJQUVwRCxzREFBc0Q7R0FINUNBLHdDQUFBQTs7VUFRQUM7SUFDVixvQkFBb0I7SUFFcEIsb0RBQW9EO0lBRXBELDBCQUEwQjtJQUUxQixnREFBZ0Q7SUFFaEQsa0NBQWtDO0lBRWxDLGdDQUFnQztJQUVoQyxtREFBbUQ7SUFFbkQsdUJBQXVCO0lBRXZCLGtCQUFrQjtJQUVsQixtQkFBbUI7R0FuQlRBLHFDQUFBQTs7VUFvREFDO0lBQ1YseUNBQXlDO0lBRXpDLHVDQUF1QztJQUV2QyxrQ0FBa0M7SUFFbEMsbUNBQW1DO0lBRW5DLG9DQUFvQztJQUVwQyxvQ0FBb0M7SUFFcEMsb0NBQW9DO0lBRXBDLG9DQUFvQztJQUVwQyw4Q0FBOEM7SUFFOUMsOENBQThDO0lBRTlDLDJDQUEyQztJQUUzQyw0Q0FBNEM7SUFFNUMsa0NBQWtDO0dBekJ4QkEsbUJBQUFBOztVQTJ1QkFDO0lBQ1YsbUdBQW1HO0lBRW5HLG1HQUFtRztHQUh6RkEsaUJBQUFBOztVQSsvREFDO0lBQ1YscUNBQXFDO0lBRXJDLHFDQUFxQztHQUgzQkEsOEJBQUFBOztVQW9NQUM7SUFDVixpQ0FBaUM7SUFFakMseUJBQXlCO0lBRXpCLHlCQUF5QjtJQUV6QixrQ0FBa0M7SUFFbEMseUJBQXlCO0dBVGZBLGNBQUFBOztVQWtTQUM7SUFDViwyQkFBMkI7SUFFM0IsOEJBQThCO0lBRTlCLDJCQUEyQjtHQUxqQkEsaUJBQUFBOztVQVVBQztJQUNWLDJCQUEyQjtJQUUzQiw2QkFBNkI7R0FIbkJBLHVCQUFBQTs7VUF1S0FDO0lBQ1YsaUNBQWlDO0lBRWpDLHlCQUF5QjtJQUV6Qix5QkFBeUI7SUFFekIsa0NBQWtDO0lBRWxDLHlCQUF5QjtHQVRmQSx1QkFBQUE7O1VBZ0ZBQztJQUNWLHdDQUF3QztJQUV4Qyx5Q0FBeUM7SUFFekMsa0NBQWtDO0lBRWxDLGtDQUFrQztJQUVsQyx3Q0FBd0M7SUFFeEMscUNBQXFDO0lBRXJDLHdDQUF3QztHQWI5QkEscUNBQUFBOztVQTRvQkFDO0lBQ1YsaUNBQWlDO0lBRWpDLDBCQUEwQjtJQUUxQix5QkFBeUI7SUFFekIseUJBQXlCO0lBRXpCLHlCQUF5QjtJQUV6Qiw2Q0FBNkM7R0FYbkNBLHVCQUFBQTs7VUE2REFDO0lBQ1YseUNBQXlDO0lBRXpDLHlDQUF5QztJQUV6Qyx5Q0FBeUM7SUFFekMseUNBQXlDO0lBRXpDLHlDQUF5QztHQVQvQkEsaUJBQUFBOztVQTBoQkFDO0lBQ1YsMEJBQTBCO0lBRTFCLDJCQUEyQjtJQUUzQixtQkFBbUI7SUFFbkIseURBQXlEO0lBRXpELHVCQUF1QjtJQUV2QixpRUFBaUU7SUFFakUsK0JBQStCO0lBRS9CLGlCQUFpQjtHQWZQQSwrQkFBQUE7O1VBNEJBQztJQUNWLDhCQUE4QjtJQUU5Qiw0QkFBNEI7SUFFNUIsOENBQThDO0lBRTlDLDBFQUEwRTtJQUUxRSxtQ0FBbUM7R0FUekJBLG9DQUFBQTtBQWlITCxNQUFNQywyQ0FBMkM7SUFBQyxRQUFPO0lBQVcsZUFBYztRQUFDO1lBQUMsUUFBTztZQUFxQixRQUFPO2dCQUFDLFFBQU87Z0JBQU8sU0FBUTtZQUErQjtZQUFFLGlCQUFnQjtnQkFBQyxRQUFPO2dCQUFZLFFBQU87b0JBQUMsUUFBTztvQkFBTyxTQUFRO2dCQUFpQjtZQUFDO1lBQUUsZ0JBQWU7Z0JBQUMsUUFBTztnQkFBZSxjQUFhO29CQUFDO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQU87b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBYTtvQkFBQztpQkFBRTtZQUFBO1FBQUM7S0FBRTtBQUFBLEVBQTZFO0FBQy9mLE1BQU1DLHFDQUFxQztJQUFDLFFBQU87SUFBVyxlQUFjO1FBQUM7WUFBQyxRQUFPO1lBQXFCLFFBQU87Z0JBQUMsUUFBTztnQkFBTyxTQUFRO1lBQXlCO1lBQUUsaUJBQWdCO2dCQUFDLFFBQU87Z0JBQVksUUFBTztvQkFBQyxRQUFPO29CQUFPLFNBQVE7Z0JBQVU7WUFBQztZQUFFLGdCQUFlO2dCQUFDLFFBQU87Z0JBQWUsY0FBYTtvQkFBQzt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFJO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQUs7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBTTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFPO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVU7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBWTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFNO3dCQUFFLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFNO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO2lCQUFFO1lBQUE7UUFBQztLQUFFO0FBQUEsRUFBdUU7QUFDbjlCLE1BQU1DLCtCQUErQjtJQUFDLFFBQU87SUFBVyxlQUFjO1FBQUM7WUFBQyxRQUFPO1lBQXFCLFFBQU87Z0JBQUMsUUFBTztnQkFBTyxTQUFRO1lBQW1CO1lBQUUsaUJBQWdCO2dCQUFDLFFBQU87Z0JBQVksUUFBTztvQkFBQyxRQUFPO29CQUFPLFNBQVE7Z0JBQW1CO1lBQUM7WUFBRSxnQkFBZTtnQkFBQyxRQUFPO2dCQUFlLGNBQWE7b0JBQUM7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBWTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFpQjtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFXO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVM7d0JBQUUsZ0JBQWU7NEJBQUMsUUFBTzs0QkFBZSxjQUFhO2dDQUFDO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQVM7b0NBQUUsZ0JBQWU7d0NBQUMsUUFBTzt3Q0FBZSxjQUFhOzRDQUFDO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQVE7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFLOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQVM7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7aUJBQUU7WUFBQTtRQUFDO0tBQUU7QUFBQSxFQUFpRTtBQUNuK0IsTUFBTUMsdUJBQXVCO0lBQUMsUUFBTztJQUFXLGVBQWM7UUFBQztZQUFDLFFBQU87WUFBcUIsUUFBTztnQkFBQyxRQUFPO2dCQUFPLFNBQVE7WUFBVztZQUFFLGlCQUFnQjtnQkFBQyxRQUFPO2dCQUFZLFFBQU87b0JBQUMsUUFBTztvQkFBTyxTQUFRO2dCQUFXO1lBQUM7WUFBRSxnQkFBZTtnQkFBQyxRQUFPO2dCQUFlLGNBQWE7b0JBQUM7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBWTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFjO29CQUFDO2lCQUFFO1lBQUE7UUFBQztLQUFFO0FBQUEsRUFBeUQ7QUFDbmMsTUFBTUMsNEJBQTRCO0lBQUMsUUFBTztJQUFXLGVBQWM7UUFBQztZQUFDLFFBQU87WUFBcUIsUUFBTztnQkFBQyxRQUFPO2dCQUFPLFNBQVE7WUFBZ0I7WUFBRSxpQkFBZ0I7Z0JBQUMsUUFBTztnQkFBWSxRQUFPO29CQUFDLFFBQU87b0JBQU8sU0FBUTtnQkFBZ0I7WUFBQztZQUFFLGdCQUFlO2dCQUFDLFFBQU87Z0JBQWUsY0FBYTtvQkFBQzt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFZO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQWE7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBVTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFnQjtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFRO3dCQUFFLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFZO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFROzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU87NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBSzs0Q0FBQzt5Q0FBRTtvQ0FBQTtnQ0FBQztnQ0FBRTtvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFhO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO2lCQUFFO1lBQUE7UUFBQztLQUFFO0FBQUEsRUFBOEQ7QUFDemhDLE1BQU1DLHlCQUF5QjtJQUFDLFFBQU87SUFBVyxlQUFjO1FBQUM7WUFBQyxRQUFPO1lBQXNCLGFBQVk7WUFBUSxRQUFPO2dCQUFDLFFBQU87Z0JBQU8sU0FBUTtZQUFnQjtZQUFFLGdCQUFlO2dCQUFDLFFBQU87Z0JBQWUsY0FBYTtvQkFBQzt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFpQjt3QkFBRSxnQkFBZTs0QkFBQyxRQUFPOzRCQUFlLGNBQWE7Z0NBQUM7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBTztnQ0FBQztnQ0FBRTtvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFhO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsU0FBUTs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQWtCO3dCQUFFLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFXO3dCQUFFLGFBQVk7NEJBQUM7Z0NBQUMsUUFBTztnQ0FBVyxRQUFPO29DQUFDLFFBQU87b0NBQU8sU0FBUTtnQ0FBTztnQ0FBRSxTQUFRO29DQUFDLFFBQU87b0NBQWMsVUFBUzt3Q0FBQzs0Q0FBQyxRQUFPOzRDQUFjLFFBQU87Z0RBQUMsUUFBTztnREFBTyxTQUFROzRDQUFVOzRDQUFFLFNBQVE7Z0RBQUMsUUFBTztnREFBWSxTQUFROzRDQUFTO3dDQUFDO3FDQUFFO2dDQUFBOzRCQUFDO3lCQUFFO3dCQUFDLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFPO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFJOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQUs7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFPOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQVU7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBWTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNO2dEQUFFLGdCQUFlO29EQUFDLFFBQU87b0RBQWUsY0FBYTt3REFBQzs0REFBQyxRQUFPOzREQUFRLFFBQU87Z0VBQUMsUUFBTztnRUFBTyxTQUFROzREQUFNOzREQUFFLGdCQUFlO2dFQUFDLFFBQU87Z0VBQWUsY0FBYTtvRUFBQzt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFNO29FQUFDO2lFQUFFOzREQUFBO3dEQUFDO3FEQUFFO2dEQUFBOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO2lCQUFFO1lBQUE7UUFBQztLQUFFO0FBQUEsRUFBZ0Y7QUFDam5ELE1BQU1DLHFCQUFxQjtJQUFDLFFBQU87SUFBVyxlQUFjO1FBQUM7WUFBQyxRQUFPO1lBQXNCLGFBQVk7WUFBUSxRQUFPO2dCQUFDLFFBQU87Z0JBQU8sU0FBUTtZQUFZO1lBQUUsdUJBQXNCO2dCQUFDO29CQUFDLFFBQU87b0JBQXFCLFlBQVc7d0JBQUMsUUFBTzt3QkFBVyxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBSztvQkFBQztvQkFBRSxRQUFPO3dCQUFDLFFBQU87d0JBQWMsUUFBTzs0QkFBQyxRQUFPOzRCQUFZLFFBQU87Z0NBQUMsUUFBTztnQ0FBTyxTQUFROzRCQUFRO3dCQUFDO29CQUFDO2dCQUFDO2FBQUU7WUFBQyxnQkFBZTtnQkFBQyxRQUFPO2dCQUFlLGNBQWE7b0JBQUM7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBVzt3QkFBRSxhQUFZOzRCQUFDO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQUs7Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFXLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFLO2dDQUFDOzRCQUFDO3lCQUFFO3dCQUFDLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFNBQVE7d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFhO29DQUFFLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFZO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQWlCLGlCQUFnQjt3Q0FBQyxRQUFPO3dDQUFZLFFBQU87NENBQUMsUUFBTzs0Q0FBTyxTQUFRO3dDQUFVO29DQUFDO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU87Z0RBQUUsZ0JBQWU7b0RBQUMsUUFBTztvREFBZSxjQUFhO3dEQUFDOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQU87NERBQUUsZ0JBQWU7Z0VBQUMsUUFBTztnRUFBZSxjQUFhO29FQUFDO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQUk7b0VBQUM7b0VBQUU7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBTztvRUFBQztvRUFBRTt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFLO29FQUFDO2lFQUFFOzREQUFBO3dEQUFDO3FEQUFFO2dEQUFBOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQWlCLGlCQUFnQjt3Q0FBQyxRQUFPO3dDQUFZLFFBQU87NENBQUMsUUFBTzs0Q0FBTyxTQUFRO3dDQUFLO29DQUFDO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU87Z0RBQUUsZ0JBQWU7b0RBQUMsUUFBTztvREFBZSxjQUFhO3dEQUFDOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQU87NERBQUUsZ0JBQWU7Z0VBQUMsUUFBTztnRUFBZSxjQUFhO29FQUFDO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQUk7b0VBQUM7b0VBQUU7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBTztvRUFBQztvRUFBRTt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFLO29FQUFDO2lFQUFFOzREQUFBO3dEQUFDO3FEQUFFO2dEQUFBOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQWlCO3dCQUFFLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFPO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQWE7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxTQUFROzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBa0I7d0JBQUUsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVc7d0JBQUUsYUFBWTs0QkFBQztnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFPO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBYyxVQUFTO3dDQUFDOzRDQUFDLFFBQU87NENBQWMsUUFBTztnREFBQyxRQUFPO2dEQUFPLFNBQVE7NENBQVU7NENBQUUsU0FBUTtnREFBQyxRQUFPO2dEQUFZLFNBQVE7NENBQVM7d0NBQUM7cUNBQUU7Z0NBQUE7NEJBQUM7eUJBQUU7d0JBQUMsZ0JBQWU7NEJBQUMsUUFBTzs0QkFBZSxjQUFhO2dDQUFDO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQU87b0NBQUUsZ0JBQWU7d0NBQUMsUUFBTzt3Q0FBZSxjQUFhOzRDQUFDO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQUk7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBSzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU87NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBVTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFZOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU07Z0RBQUUsZ0JBQWU7b0RBQUMsUUFBTztvREFBZSxjQUFhO3dEQUFDOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQU07NERBQUUsZ0JBQWU7Z0VBQUMsUUFBTztnRUFBZSxjQUFhO29FQUFDO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQU07b0VBQUM7aUVBQUU7NERBQUE7d0RBQUM7cURBQUU7Z0RBQUE7NENBQUM7eUNBQUU7b0NBQUE7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7aUJBQUU7WUFBQTtRQUFDO0tBQUU7QUFBQSxFQUF3RTtBQUN2MEcsTUFBTUMsc0JBQXNCO0lBQUMsUUFBTztJQUFXLGVBQWM7UUFBQztZQUFDLFFBQU87WUFBc0IsYUFBWTtZQUFRLFFBQU87Z0JBQUMsUUFBTztnQkFBTyxTQUFRO1lBQWE7WUFBRSxnQkFBZTtnQkFBQyxRQUFPO2dCQUFlLGNBQWE7b0JBQUM7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBaUI7d0JBQUUsZ0JBQWU7NEJBQUMsUUFBTzs0QkFBZSxjQUFhO2dDQUFDO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQU87Z0NBQUM7Z0NBQUU7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBYTtnQ0FBQzs2QkFBRTt3QkFBQTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFNBQVE7NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFrQjt3QkFBRSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBVzt3QkFBRSxhQUFZOzRCQUFDO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQU87Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFjLFVBQVM7d0NBQUM7NENBQUMsUUFBTzs0Q0FBYyxRQUFPO2dEQUFDLFFBQU87Z0RBQU8sU0FBUTs0Q0FBVTs0Q0FBRSxTQUFRO2dEQUFDLFFBQU87Z0RBQVksU0FBUTs0Q0FBUzt3Q0FBQztxQ0FBRTtnQ0FBQTs0QkFBQzt5QkFBRTt3QkFBQyxnQkFBZTs0QkFBQyxRQUFPOzRCQUFlLGNBQWE7Z0NBQUM7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBTztvQ0FBRSxnQkFBZTt3Q0FBQyxRQUFPO3dDQUFlLGNBQWE7NENBQUM7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBSTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFLOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU07NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFVOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQVk7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTTtnREFBRSxnQkFBZTtvREFBQyxRQUFPO29EQUFlLGNBQWE7d0RBQUM7NERBQUMsUUFBTzs0REFBUSxRQUFPO2dFQUFDLFFBQU87Z0VBQU8sU0FBUTs0REFBTTs0REFBRSxnQkFBZTtnRUFBQyxRQUFPO2dFQUFlLGNBQWE7b0VBQUM7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBTTtvRUFBQztpRUFBRTs0REFBQTt3REFBQztxREFBRTtnREFBQTs0Q0FBQzt5Q0FBRTtvQ0FBQTtnQ0FBQzs2QkFBRTt3QkFBQTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFtQjt3QkFBRSxnQkFBZTs0QkFBQyxRQUFPOzRCQUFlLGNBQWE7Z0NBQUM7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBUTtvQ0FBRSxnQkFBZTt3Q0FBQyxRQUFPO3dDQUFlLGNBQWE7NENBQUM7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBUzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFTOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQVc7Z0RBQUUsZ0JBQWU7b0RBQUMsUUFBTztvREFBZSxjQUFhO3dEQUFDOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQU07NERBQUUsZ0JBQWU7Z0VBQUMsUUFBTztnRUFBZSxjQUFhO29FQUFDO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQVc7b0VBQUM7aUVBQUU7NERBQUE7d0RBQUM7cURBQUU7Z0RBQUE7NENBQUM7eUNBQUU7b0NBQUE7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBTTt3QkFBRSxhQUFZOzRCQUFDO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQUk7Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFjLFNBQVE7b0NBQWUsU0FBUTtnQ0FBSzs0QkFBQzt5QkFBRTt3QkFBQyxnQkFBZTs0QkFBQyxRQUFPOzRCQUFlLGNBQWE7Z0NBQUM7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBYztvQ0FBRSxnQkFBZTt3Q0FBQyxRQUFPO3dDQUFlLGNBQWE7NENBQUM7Z0RBQUMsUUFBTztnREFBaUIsaUJBQWdCO29EQUFDLFFBQU87b0RBQVksUUFBTzt3REFBQyxRQUFPO3dEQUFPLFNBQVE7b0RBQWdCO2dEQUFDO2dEQUFFLGdCQUFlO29EQUFDLFFBQU87b0RBQWUsY0FBYTt3REFBQzs0REFBQyxRQUFPOzREQUFRLFFBQU87Z0VBQUMsUUFBTztnRUFBTyxTQUFROzREQUFtQjs0REFBRSxnQkFBZTtnRUFBQyxRQUFPO2dFQUFlLGNBQWE7b0VBQUM7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBUzt3RUFBRSxnQkFBZTs0RUFBQyxRQUFPOzRFQUFlLGNBQWE7Z0ZBQUM7b0ZBQUMsUUFBTztvRkFBUSxRQUFPO3dGQUFDLFFBQU87d0ZBQU8sU0FBUTtvRkFBUztvRkFBRSxnQkFBZTt3RkFBQyxRQUFPO3dGQUFlLGNBQWE7NEZBQUM7Z0dBQUMsUUFBTztnR0FBUSxRQUFPO29HQUFDLFFBQU87b0dBQU8sU0FBUTtnR0FBUTs0RkFBQzs0RkFBRTtnR0FBQyxRQUFPO2dHQUFRLFFBQU87b0dBQUMsUUFBTztvR0FBTyxTQUFRO2dHQUFPOzRGQUFDOzRGQUFFO2dHQUFDLFFBQU87Z0dBQVEsUUFBTztvR0FBQyxRQUFPO29HQUFPLFNBQVE7Z0dBQUs7NEZBQUM7eUZBQUU7b0ZBQUE7Z0ZBQUM7Z0ZBQUU7b0ZBQUMsUUFBTztvRkFBUSxRQUFPO3dGQUFDLFFBQU87d0ZBQU8sU0FBUTtvRkFBUztnRkFBQzs2RUFBRTt3RUFBQTtvRUFBQztvRUFBRTt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFpQjtvRUFBQztvRUFBRTt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFXO29FQUFDO2lFQUFFOzREQUFBO3dEQUFDO3dEQUFFOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQVU7d0RBQUM7cURBQUU7Z0RBQUE7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBaUIsaUJBQWdCO29EQUFDLFFBQU87b0RBQVksUUFBTzt3REFBQyxRQUFPO3dEQUFPLFNBQVE7b0RBQXFCO2dEQUFDO2dEQUFFLGdCQUFlO29EQUFDLFFBQU87b0RBQWUsY0FBYTt3REFBQzs0REFBQyxRQUFPOzREQUFRLFFBQU87Z0VBQUMsUUFBTztnRUFBTyxTQUFROzREQUFXOzREQUFFLGdCQUFlO2dFQUFDLFFBQU87Z0VBQWUsY0FBYTtvRUFBQzt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFjO29FQUFDO2lFQUFFOzREQUFBO3dEQUFDO3dEQUFFOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQVU7d0RBQUM7cURBQUU7Z0RBQUE7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBaUIsaUJBQWdCO29EQUFDLFFBQU87b0RBQVksUUFBTzt3REFBQyxRQUFPO3dEQUFPLFNBQVE7b0RBQW9CO2dEQUFDO2dEQUFFLGdCQUFlO29EQUFDLFFBQU87b0RBQWUsY0FBYTt3REFBQzs0REFBQyxRQUFPOzREQUFRLFFBQU87Z0VBQUMsUUFBTztnRUFBTyxTQUFROzREQUFnQjs0REFBRSxnQkFBZTtnRUFBQyxRQUFPO2dFQUFlLGNBQWE7b0VBQUM7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBUTt3RUFBRSxnQkFBZTs0RUFBQyxRQUFPOzRFQUFlLGNBQWE7Z0ZBQUM7b0ZBQUMsUUFBTztvRkFBUSxRQUFPO3dGQUFDLFFBQU87d0ZBQU8sU0FBUTtvRkFBWTtvRkFBRSxnQkFBZTt3RkFBQyxRQUFPO3dGQUFlLGNBQWE7NEZBQUM7Z0dBQUMsUUFBTztnR0FBUSxRQUFPO29HQUFDLFFBQU87b0dBQU8sU0FBUTtnR0FBUTs0RkFBQzs0RkFBRTtnR0FBQyxRQUFPO2dHQUFRLFFBQU87b0dBQUMsUUFBTztvR0FBTyxTQUFRO2dHQUFPOzRGQUFDOzRGQUFFO2dHQUFDLFFBQU87Z0dBQVEsUUFBTztvR0FBQyxRQUFPO29HQUFPLFNBQVE7Z0dBQUs7NEZBQUM7eUZBQUU7b0ZBQUE7Z0ZBQUM7Z0ZBQUU7b0ZBQUMsUUFBTztvRkFBUSxRQUFPO3dGQUFDLFFBQU87d0ZBQU8sU0FBUTtvRkFBYTtnRkFBQzs2RUFBRTt3RUFBQTtvRUFBQztvRUFBRTt3RUFBQyxRQUFPO3dFQUFRLFFBQU87NEVBQUMsUUFBTzs0RUFBTyxTQUFRO3dFQUFhO29FQUFDO29FQUFFO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQVU7b0VBQUM7b0VBQUU7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBZ0I7b0VBQUM7aUVBQUU7NERBQUE7d0RBQUM7d0RBQUU7NERBQUMsUUFBTzs0REFBUSxRQUFPO2dFQUFDLFFBQU87Z0VBQU8sU0FBUTs0REFBVTt3REFBQztxREFBRTtnREFBQTs0Q0FBQzt5Q0FBRTtvQ0FBQTtnQ0FBQzs2QkFBRTt3QkFBQTtvQkFBQztpQkFBRTtZQUFBO1FBQUM7S0FBRTtBQUFBLEVBQTBFO0FBQ3AxSixNQUFNQyxrQkFBa0I7SUFBQyxRQUFPO0lBQVcsZUFBYztRQUFDO1lBQUMsUUFBTztZQUFzQixhQUFZO1lBQVEsUUFBTztnQkFBQyxRQUFPO2dCQUFPLFNBQVE7WUFBUztZQUFFLHVCQUFzQjtnQkFBQztvQkFBQyxRQUFPO29CQUFxQixZQUFXO3dCQUFDLFFBQU87d0JBQVcsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVk7b0JBQUM7b0JBQUUsUUFBTzt3QkFBQyxRQUFPO3dCQUFjLFFBQU87NEJBQUMsUUFBTzs0QkFBWSxRQUFPO2dDQUFDLFFBQU87Z0NBQU8sU0FBUTs0QkFBSTt3QkFBQztvQkFBQztnQkFBQztnQkFBRTtvQkFBQyxRQUFPO29CQUFxQixZQUFXO3dCQUFDLFFBQU87d0JBQVcsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVc7b0JBQUM7b0JBQUUsUUFBTzt3QkFBQyxRQUFPO3dCQUFZLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFTO29CQUFDO29CQUFFLGdCQUFlO3dCQUFDLFFBQU87d0JBQWUsU0FBUTtvQkFBSztnQkFBQzthQUFFO1lBQUMsZ0JBQWU7Z0JBQUMsUUFBTztnQkFBZSxjQUFhO29CQUFDO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQU07d0JBQUUsYUFBWTs0QkFBQztnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFJO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBVyxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBWTtnQ0FBQzs0QkFBQzs0QkFBRTtnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFRO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBWSxTQUFRO2dDQUFhOzRCQUFDOzRCQUFFO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQVc7Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFXLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFXO2dDQUFDOzRCQUFDO3lCQUFFO3dCQUFDLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFPO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQVM7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBaUI7d0JBQUUsZ0JBQWU7NEJBQUMsUUFBTzs0QkFBZSxjQUFhO2dDQUFDO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQU87Z0NBQUM7Z0NBQUU7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBYTtnQ0FBQzs2QkFBRTt3QkFBQTtvQkFBQztvQkFBRTt3QkFBQyxRQUFPO3dCQUFRLFNBQVE7NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFrQjt3QkFBRSxRQUFPOzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBVzt3QkFBRSxhQUFZOzRCQUFDO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQU87Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFjLFVBQVM7d0NBQUM7NENBQUMsUUFBTzs0Q0FBYyxRQUFPO2dEQUFDLFFBQU87Z0RBQU8sU0FBUTs0Q0FBVTs0Q0FBRSxTQUFRO2dEQUFDLFFBQU87Z0RBQVksU0FBUTs0Q0FBUzt3Q0FBQztxQ0FBRTtnQ0FBQTs0QkFBQzt5QkFBRTt3QkFBQyxnQkFBZTs0QkFBQyxRQUFPOzRCQUFlLGNBQWE7Z0NBQUM7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBTztvQ0FBRSxnQkFBZTt3Q0FBQyxRQUFPO3dDQUFlLGNBQWE7NENBQUM7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBSTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFLOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU07NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFVOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQVk7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBTTtnREFBRSxnQkFBZTtvREFBQyxRQUFPO29EQUFlLGNBQWE7d0RBQUM7NERBQUMsUUFBTzs0REFBUSxRQUFPO2dFQUFDLFFBQU87Z0VBQU8sU0FBUTs0REFBTTs0REFBRSxnQkFBZTtnRUFBQyxRQUFPO2dFQUFlLGNBQWE7b0VBQUM7d0VBQUMsUUFBTzt3RUFBUSxRQUFPOzRFQUFDLFFBQU87NEVBQU8sU0FBUTt3RUFBTTtvRUFBQztpRUFBRTs0REFBQTt3REFBQztxREFBRTtnREFBQTs0Q0FBQzt5Q0FBRTtvQ0FBQTtnQ0FBQzs2QkFBRTt3QkFBQTtvQkFBQztpQkFBRTtZQUFBO1FBQUM7S0FBRTtBQUFBLEVBQWtFO0FBQ3huRixNQUFNQyxrQkFBa0I7SUFBQyxRQUFPO0lBQVcsZUFBYztRQUFDO1lBQUMsUUFBTztZQUFzQixhQUFZO1lBQVEsUUFBTztnQkFBQyxRQUFPO2dCQUFPLFNBQVE7WUFBUztZQUFFLHVCQUFzQjtnQkFBQztvQkFBQyxRQUFPO29CQUFxQixZQUFXO3dCQUFDLFFBQU87d0JBQVcsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVk7b0JBQUM7b0JBQUUsUUFBTzt3QkFBQyxRQUFPO3dCQUFjLFFBQU87NEJBQUMsUUFBTzs0QkFBWSxRQUFPO2dDQUFDLFFBQU87Z0NBQU8sU0FBUTs0QkFBSTt3QkFBQztvQkFBQztnQkFBQztnQkFBRTtvQkFBQyxRQUFPO29CQUFxQixZQUFXO3dCQUFDLFFBQU87d0JBQVcsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVc7b0JBQUM7b0JBQUUsUUFBTzt3QkFBQyxRQUFPO3dCQUFZLFFBQU87NEJBQUMsUUFBTzs0QkFBTyxTQUFRO3dCQUFTO29CQUFDO29CQUFFLGdCQUFlO3dCQUFDLFFBQU87d0JBQWUsU0FBUTtvQkFBSztnQkFBQzthQUFFO1lBQUMsZ0JBQWU7Z0JBQUMsUUFBTztnQkFBZSxjQUFhO29CQUFDO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQU07d0JBQUUsYUFBWTs0QkFBQztnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFJO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBVyxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBWTtnQ0FBQzs0QkFBQzs0QkFBRTtnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFRO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBWSxTQUFRO2dDQUFhOzRCQUFDOzRCQUFFO2dDQUFDLFFBQU87Z0NBQVcsUUFBTztvQ0FBQyxRQUFPO29DQUFPLFNBQVE7Z0NBQVc7Z0NBQUUsU0FBUTtvQ0FBQyxRQUFPO29DQUFXLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFXO2dDQUFDOzRCQUFDO3lCQUFFO3dCQUFDLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFPO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQVM7Z0NBQUM7Z0NBQUU7b0NBQUMsUUFBTztvQ0FBUSxRQUFPO3dDQUFDLFFBQU87d0NBQU8sU0FBUTtvQ0FBTTtnQ0FBQztnQ0FBRTtvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFRO29DQUFFLGdCQUFlO3dDQUFDLFFBQU87d0NBQWUsY0FBYTs0Q0FBQztnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNO2dEQUFFLGdCQUFlO29EQUFDLFFBQU87b0RBQWUsY0FBYTt3REFBQzs0REFBQyxRQUFPOzREQUFRLFFBQU87Z0VBQUMsUUFBTztnRUFBTyxTQUFROzREQUFNO3dEQUFDO3FEQUFFO2dEQUFBOzRDQUFDO3lDQUFFO29DQUFBO2dDQUFDOzZCQUFFO3dCQUFBO29CQUFDO29CQUFFO3dCQUFDLFFBQU87d0JBQVEsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQWlCO3dCQUFFLGdCQUFlOzRCQUFDLFFBQU87NEJBQWUsY0FBYTtnQ0FBQztvQ0FBQyxRQUFPO29DQUFRLFFBQU87d0NBQUMsUUFBTzt3Q0FBTyxTQUFRO29DQUFPO2dDQUFDO2dDQUFFO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQWE7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7b0JBQUU7d0JBQUMsUUFBTzt3QkFBUSxTQUFROzRCQUFDLFFBQU87NEJBQU8sU0FBUTt3QkFBa0I7d0JBQUUsUUFBTzs0QkFBQyxRQUFPOzRCQUFPLFNBQVE7d0JBQVc7d0JBQUUsYUFBWTs0QkFBQztnQ0FBQyxRQUFPO2dDQUFXLFFBQU87b0NBQUMsUUFBTztvQ0FBTyxTQUFRO2dDQUFPO2dDQUFFLFNBQVE7b0NBQUMsUUFBTztvQ0FBYyxVQUFTO3dDQUFDOzRDQUFDLFFBQU87NENBQWMsUUFBTztnREFBQyxRQUFPO2dEQUFPLFNBQVE7NENBQVU7NENBQUUsU0FBUTtnREFBQyxRQUFPO2dEQUFZLFNBQVE7NENBQVM7d0NBQUM7cUNBQUU7Z0NBQUE7NEJBQUM7eUJBQUU7d0JBQUMsZ0JBQWU7NEJBQUMsUUFBTzs0QkFBZSxjQUFhO2dDQUFDO29DQUFDLFFBQU87b0NBQVEsUUFBTzt3Q0FBQyxRQUFPO3dDQUFPLFNBQVE7b0NBQU87b0NBQUUsZ0JBQWU7d0NBQUMsUUFBTzt3Q0FBZSxjQUFhOzRDQUFDO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQUk7NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBSzs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFNOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU87NENBQUM7NENBQUU7Z0RBQUMsUUFBTztnREFBUSxRQUFPO29EQUFDLFFBQU87b0RBQU8sU0FBUTtnREFBVTs0Q0FBQzs0Q0FBRTtnREFBQyxRQUFPO2dEQUFRLFFBQU87b0RBQUMsUUFBTztvREFBTyxTQUFRO2dEQUFZOzRDQUFDOzRDQUFFO2dEQUFDLFFBQU87Z0RBQVEsUUFBTztvREFBQyxRQUFPO29EQUFPLFNBQVE7Z0RBQU07Z0RBQUUsZ0JBQWU7b0RBQUMsUUFBTztvREFBZSxjQUFhO3dEQUFDOzREQUFDLFFBQU87NERBQVEsUUFBTztnRUFBQyxRQUFPO2dFQUFPLFNBQVE7NERBQU07NERBQUUsZ0JBQWU7Z0VBQUMsUUFBTztnRUFBZSxjQUFhO29FQUFDO3dFQUFDLFFBQU87d0VBQVEsUUFBTzs0RUFBQyxRQUFPOzRFQUFPLFNBQVE7d0VBQU07b0VBQUM7aUVBQUU7NERBQUE7d0RBQUM7cURBQUU7Z0RBQUE7NENBQUM7eUNBQUU7b0NBQUE7Z0NBQUM7NkJBQUU7d0JBQUE7b0JBQUM7aUJBQUU7WUFBQTtRQUFDO0tBQUU7QUFBQSxFQUFrRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvX19nZW5lcmF0ZWRfXy9ncmFwaHFsLnRzP2RmNTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCB7IFR5cGVkRG9jdW1lbnROb2RlIGFzIERvY3VtZW50Tm9kZSB9IGZyb20gJ0BncmFwaHFsLXR5cGVkLWRvY3VtZW50LW5vZGUvY29yZSc7XG5leHBvcnQgdHlwZSBNYXliZTxUPiA9IFQgfCBudWxsO1xuZXhwb3J0IHR5cGUgSW5wdXRNYXliZTxUPiA9IE1heWJlPFQ+O1xuZXhwb3J0IHR5cGUgRXhhY3Q8VCBleHRlbmRzIHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9PiA9IHsgW0sgaW4ga2V5b2YgVF06IFRbS10gfTtcbmV4cG9ydCB0eXBlIE1ha2VPcHRpb25hbDxULCBLIGV4dGVuZHMga2V5b2YgVD4gPSBPbWl0PFQsIEs+ICYgeyBbU3ViS2V5IGluIEtdPzogTWF5YmU8VFtTdWJLZXldPiB9O1xuZXhwb3J0IHR5cGUgTWFrZU1heWJlPFQsIEsgZXh0ZW5kcyBrZXlvZiBUPiA9IE9taXQ8VCwgSz4gJiB7IFtTdWJLZXkgaW4gS106IE1heWJlPFRbU3ViS2V5XT4gfTtcbmV4cG9ydCB0eXBlIE1ha2VFbXB0eTxUIGV4dGVuZHMgeyBba2V5OiBzdHJpbmddOiB1bmtub3duIH0sIEsgZXh0ZW5kcyBrZXlvZiBUPiA9IHsgW18gaW4gS10/OiBuZXZlciB9O1xuZXhwb3J0IHR5cGUgSW5jcmVtZW50YWw8VD4gPSBUIHwgeyBbUCBpbiBrZXlvZiBUXT86IFAgZXh0ZW5kcyAnICRmcmFnbWVudE5hbWUnIHwgJ19fdHlwZW5hbWUnID8gVFtQXSA6IG5ldmVyIH07XG4vKiogQWxsIGJ1aWx0LWluIGFuZCBjdXN0b20gc2NhbGFycywgbWFwcGVkIHRvIHRoZWlyIGFjdHVhbCB2YWx1ZXMgKi9cbmV4cG9ydCB0eXBlIFNjYWxhcnMgPSB7XG4gIElEOiB7IGlucHV0OiBzdHJpbmc7IG91dHB1dDogc3RyaW5nOyB9XG4gIFN0cmluZzogeyBpbnB1dDogc3RyaW5nOyBvdXRwdXQ6IHN0cmluZzsgfVxuICBCb29sZWFuOiB7IGlucHV0OiBib29sZWFuOyBvdXRwdXQ6IGJvb2xlYW47IH1cbiAgSW50OiB7IGlucHV0OiBudW1iZXI7IG91dHB1dDogbnVtYmVyOyB9XG4gIEZsb2F0OiB7IGlucHV0OiBudW1iZXI7IG91dHB1dDogbnVtYmVyOyB9XG4gIC8qKiBHZW5lcmljIEFycmF5IFNjYWxhciBUeXBlICovXG4gIEJsb2NrQXR0cmlidXRlc0FycmF5OiB7IGlucHV0OiBhbnk7IG91dHB1dDogYW55OyB9XG4gIC8qKiBHZW5lcmljIE9iamVjdCBTY2FsYXIgVHlwZSAqL1xuICBCbG9ja0F0dHJpYnV0ZXNPYmplY3Q6IHsgaW5wdXQ6IGFueTsgb3V0cHV0OiBhbnk7IH1cbn07XG5cbmV4cG9ydCB0eXBlIEFjZmVfQWR2YW5jZWRMaW5rID0ge1xuICBsaW5rVGV4dD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHNob3VsZE9wZW5Jbk5ld1dpbmRvdz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xufTtcblxuZXhwb3J0IHR5cGUgQWNmZV9BZHZhbmNlZExpbmtfQ29udGVudE5vZGUgPSBBY2ZlX0FkdmFuY2VkTGluayAmIHtcbiAgX190eXBlbmFtZT86ICdBQ0ZFX0FkdmFuY2VkTGlua19Db250ZW50Tm9kZSc7XG4gIGNvbnRlbnROb2RlPzogTWF5YmU8Q29udGVudE5vZGU+O1xuICBsaW5rVGV4dD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHNob3VsZE9wZW5Jbk5ld1dpbmRvdz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xufTtcblxuZXhwb3J0IHR5cGUgQWNmZV9BZHZhbmNlZExpbmtfVGVybU5vZGUgPSBBY2ZlX0FkdmFuY2VkTGluayAmIHtcbiAgX190eXBlbmFtZT86ICdBQ0ZFX0FkdmFuY2VkTGlua19UZXJtTm9kZSc7XG4gIGxpbmtUZXh0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgc2hvdWxkT3BlbkluTmV3V2luZG93PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIHRlcm0/OiBNYXliZTxUZXJtTm9kZT47XG59O1xuXG5leHBvcnQgdHlwZSBBY2ZlX0FkdmFuY2VkTGlua19VcmwgPSBBY2ZlX0FkdmFuY2VkTGluayAmIHtcbiAgX190eXBlbmFtZT86ICdBQ0ZFX0FkdmFuY2VkTGlua19VcmwnO1xuICBsaW5rVGV4dD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHNob3VsZE9wZW5Jbk5ld1dpbmRvdz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVybCBsaW5rZWQgdG8gKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBCbG9jayByZWdpc3RlcmVkIGJ5IEFDRiAqL1xuZXhwb3J0IHR5cGUgQWNmQmxvY2sgPSB7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIEJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgRmllbGQgR3JvdXAgbWFuYWdlZCBieSBBQ0YgKi9cbmV4cG9ydCB0eXBlIEFjZkZpZWxkR3JvdXAgPSB7XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZmllbGQgZ3JvdXBcbiAgICogQGRlcHJlY2F0ZWQgVXNlIF9fdHlwZW5hbWUgaW5zdGVhZFxuICAgKi9cbiAgZmllbGRHcm91cE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEZpZWxkcyBhc3NvY2lhdGVkIHdpdGggYW4gQUNGIEZpZWxkIEdyb3VwICovXG5leHBvcnQgdHlwZSBBY2ZGaWVsZEdyb3VwRmllbGRzID0ge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIEFjZkhlcm9TZWN0aW9uID0gQWNmQmxvY2sgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIFdpdGhBY2ZIZXJvU2VjdGlvbkJsb2NrcyAmIHtcbiAgX190eXBlbmFtZT86ICdBY2ZIZXJvU2VjdGlvbic7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIEFjZkhlcm9TZWN0aW9uIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPEFjZkhlcm9TZWN0aW9uQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIEZpZWxkcyBvZiB0aGUgSGVyb1NlY3Rpb25CbG9ja3MgQUNGIEZpZWxkIEdyb3VwICovXG4gIGhlcm9TZWN0aW9uQmxvY2tzPzogTWF5YmU8SGVyb1NlY3Rpb25CbG9ja3M+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIEFjZkhlcm9TZWN0aW9uIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIEFjZkhlcm9TZWN0aW9uQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdBY2ZIZXJvU2VjdGlvbkF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbjogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7QWNmSGVyb1NlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkYXRhOiBTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7QWNmSGVyb1NlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZkhlcm9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttb2RlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtb2RlOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7QWNmSGVyb1NlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQWNmSGVyb1ZpZGVvU2VjdGlvbiA9IEFjZkJsb2NrICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiBXaXRoQWNmSGVyb1ZpZGVvICYge1xuICBfX3R5cGVuYW1lPzogJ0FjZkhlcm9WaWRlb1NlY3Rpb24nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBBY2ZIZXJvVmlkZW9TZWN0aW9uIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPEFjZkhlcm9WaWRlb1NlY3Rpb25BdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogRmllbGRzIG9mIHRoZSBIZXJvVmlkZW8gQUNGIEZpZWxkIEdyb3VwICovXG4gIGhlcm9WaWRlbz86IE1heWJlPEhlcm9WaWRlbz47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQWNmSGVyb1ZpZGVvU2VjdGlvbiBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZkhlcm9WaWRlb1NlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ246IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZkhlcm9WaWRlb1NlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRhdGE6IFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttb2RlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1vZGU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtuYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZIZXJvVmlkZW9TZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBQ0YgTGluayBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgQWNmTGluayA9IHtcbiAgX190eXBlbmFtZT86ICdBY2ZMaW5rJztcbiAgLyoqIFRoZSB0YXJnZXQgb2YgdGhlIGxpbmsgKF9ibGFuaywgZXRjKSAqL1xuICB0YXJnZXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBsaW5rICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1cmwgb2YgdGhlIGxpbmsgKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbmZpZ19GaWVsZHMgdHlwZSBhbmQgdGhlIE1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBBY2ZNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdBY2ZNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogTWVkaWFJdGVtO1xufTtcblxuLyoqIE9wdGlvbnMgUGFnZSByZWdpc3RlcmVkIGJ5IEFDRiAqL1xuZXhwb3J0IHR5cGUgQWNmT3B0aW9uc1BhZ2UgPSB7XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgbWVudVRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgcGFnZVRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQWNmV2hvV2VBcmVTZWN0aW9uID0gQWNmQmxvY2sgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIFdpdGhBY2ZCbG9ja3NXaG9XZUFyZSAmIHtcbiAgX190eXBlbmFtZT86ICdBY2ZXaG9XZUFyZVNlY3Rpb24nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBBY2ZXaG9XZUFyZVNlY3Rpb24gQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8QWNmV2hvV2VBcmVTZWN0aW9uQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRmllbGRzIG9mIHRoZSBCbG9ja3NXaG9XZUFyZSBBQ0YgRmllbGQgR3JvdXAgKi9cbiAgYmxvY2tzV2hvV2VBcmU/OiBNYXliZTxCbG9ja3NXaG9XZUFyZT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIEFjZldob1dlQXJlU2VjdGlvbiBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBBY2ZXaG9XZUFyZVNlY3Rpb25BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0FjZldob1dlQXJlU2VjdGlvbkF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZXaG9XZUFyZVNlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ246IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZldob1dlQXJlU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2RhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZldob1dlQXJlU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkYXRhOiBTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7QWNmV2hvV2VBcmVTZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtBY2ZXaG9XZUFyZVNlY3Rpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21vZGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0FjZldob1dlQXJlU2VjdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtb2RlOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7QWNmV2hvV2VBcmVTZWN0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBdmF0YXJzIGFyZSBwcm9maWxlIGltYWdlcyBmb3IgdXNlcnMuIFdvcmRQcmVzcyBieSBkZWZhdWx0IHVzZXMgdGhlIEdyYXZhdGFyIHNlcnZpY2UgdG8gaG9zdCBhbmQgZmV0Y2ggYXZhdGFycyBmcm9tLiAqL1xuZXhwb3J0IHR5cGUgQXZhdGFyID0ge1xuICBfX3R5cGVuYW1lPzogJ0F2YXRhcic7XG4gIC8qKiBVUkwgZm9yIHRoZSBkZWZhdWx0IGltYWdlIG9yIGEgZGVmYXVsdCB0eXBlLiBBY2NlcHRzICYjMDM5OzQwNCYjMDM5OyAocmV0dXJuIGEgNDA0IGluc3RlYWQgb2YgYSBkZWZhdWx0IGltYWdlKSwgJiMwMzk7cmV0cm8mIzAzOTsgKDhiaXQpLCAmIzAzOTttb25zdGVyaWQmIzAzOTsgKG1vbnN0ZXIpLCAmIzAzOTt3YXZhdGFyJiMwMzk7IChjYXJ0b29uIGZhY2UpLCAmIzAzOTtpbmRlbnRpY29uJiMwMzk7ICh0aGUgJiMwMzk7cXVpbHQmIzAzOTspLCAmIzAzOTtteXN0ZXJ5JiMwMzk7LCAmIzAzOTttbSYjMDM5Oywgb3IgJiMwMzk7bXlzdGVyeW1hbiYjMDM5OyAoVGhlIE95c3RlciBNYW4pLCAmIzAzOTtibGFuayYjMDM5OyAodHJhbnNwYXJlbnQgR0lGKSwgb3IgJiMwMzk7Z3JhdmF0YXJfZGVmYXVsdCYjMDM5OyAodGhlIEdyYXZhdGFyIGxvZ28pLiAqL1xuICBkZWZhdWx0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEhUTUwgYXR0cmlidXRlcyB0byBpbnNlcnQgaW4gdGhlIElNRyBlbGVtZW50LiBJcyBub3Qgc2FuaXRpemVkLiAqL1xuICBleHRyYUF0dHI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0byBhbHdheXMgc2hvdyB0aGUgZGVmYXVsdCBpbWFnZSwgbmV2ZXIgdGhlIEdyYXZhdGFyLiAqL1xuICBmb3JjZURlZmF1bHQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIGF2YXRhciB3YXMgc3VjY2Vzc2Z1bGx5IGZvdW5kLiAqL1xuICBmb3VuZEF2YXRhcj86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogSGVpZ2h0IG9mIHRoZSBhdmF0YXIgaW1hZ2UuICovXG4gIGhlaWdodD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoYXQgcmF0aW5nIHRvIGRpc3BsYXkgYXZhdGFycyB1cCB0by4gQWNjZXB0cyAmIzAzOTtHJiMwMzk7LCAmIzAzOTtQRyYjMDM5OywgJiMwMzk7UiYjMDM5OywgJiMwMzk7WCYjMDM5OywgYW5kIGFyZSBqdWRnZWQgaW4gdGhhdCBvcmRlci4gKi9cbiAgcmF0aW5nPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFR5cGUgb2YgdXJsIHNjaGVtZSB0byB1c2UuIFR5cGljYWxseSBIVFRQIHZzLiBIVFRQUy4gKi9cbiAgc2NoZW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBzaXplIG9mIHRoZSBhdmF0YXIgaW4gcGl4ZWxzLiBBIHZhbHVlIG9mIDk2IHdpbGwgbWF0Y2ggYSA5NnB4IHggOTZweCBncmF2YXRhciBpbWFnZS4gKi9cbiAgc2l6ZT86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBVUkwgZm9yIHRoZSBncmF2YXRhciBpbWFnZSBzb3VyY2UuICovXG4gIHVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaWR0aCBvZiB0aGUgYXZhdGFyIGltYWdlLiAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogV2hhdCByYXRpbmcgdG8gZGlzcGxheSBhdmF0YXJzIHVwIHRvLiBBY2NlcHRzICdHJywgJ1BHJywgJ1InLCAnWCcsIGFuZCBhcmUganVkZ2VkIGluIHRoYXQgb3JkZXIuIERlZmF1bHQgaXMgdGhlIHZhbHVlIG9mIHRoZSAnYXZhdGFyX3JhdGluZycgb3B0aW9uICovXG5leHBvcnQgZW51bSBBdmF0YXJSYXRpbmdFbnVtIHtcbiAgLyoqIEluZGljYXRlcyBhIEcgbGV2ZWwgYXZhdGFyIHJhdGluZyBsZXZlbC4gKi9cbiAgRyA9ICdHJyxcbiAgLyoqIEluZGljYXRlcyBhIFBHIGxldmVsIGF2YXRhciByYXRpbmcgbGV2ZWwuICovXG4gIFBnID0gJ1BHJyxcbiAgLyoqIEluZGljYXRlcyBhbiBSIGxldmVsIGF2YXRhciByYXRpbmcgbGV2ZWwuICovXG4gIFIgPSAnUicsXG4gIC8qKiBJbmRpY2F0ZXMgYW4gWCBsZXZlbCBhdmF0YXIgcmF0aW5nIGxldmVsLiAqL1xuICBYID0gJ1gnXG59XG5cbi8qKiBCbG9jayB0aGF0IHN1cHBvcnRzIEFuY2hvciBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgPSB7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlICZxdW90O0Jsb2Nrc1dob1dlQXJlJnF1b3Q7IEZpZWxkIEdyb3VwLiBBZGRlZCB0byB0aGUgU2NoZW1hIGJ5ICZxdW90O1dQR3JhcGhRTCBmb3IgQUNGJnF1b3Q7LiAqL1xuZXhwb3J0IHR5cGUgQmxvY2tzV2hvV2VBcmUgPSBBY2ZGaWVsZEdyb3VwICYgQWNmRmllbGRHcm91cEZpZWxkcyAmIEJsb2Nrc1dob1dlQXJlX0ZpZWxkcyAmIHtcbiAgX190eXBlbmFtZT86ICdCbG9ja3NXaG9XZUFyZSc7XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7Z3JvdXAmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0Jsb2Nrc1dob1dlQXJlJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YVd3YT86IE1heWJlPEJsb2Nrc1dob1dlQXJlQ3RhV3dhPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0YXJlYSZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmUmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgZGVzY3JpcHRpb25Xd2E/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0JnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtCbG9ja3NXaG9XZUFyZSZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBzdWJ0aXRsZVd3YT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmUmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgdGl0bGVXd2E/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSAmcXVvdDtCbG9ja3NXaG9XZUFyZUN0YVd3YSZxdW90OyBGaWVsZCBHcm91cC4gQWRkZWQgdG8gdGhlIFNjaGVtYSBieSAmcXVvdDtXUEdyYXBoUUwgZm9yIEFDRiZxdW90Oy4gKi9cbmV4cG9ydCB0eXBlIEJsb2Nrc1dob1dlQXJlQ3RhV3dhID0gQWNmRmllbGRHcm91cCAmIEFjZkZpZWxkR3JvdXBGaWVsZHMgJiBCbG9ja3NXaG9XZUFyZUN0YVd3YV9GaWVsZHMgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQmxvY2tzV2hvV2VBcmVDdGFXd2EnO1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O2xpbmsmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0Jsb2Nrc1dob1dlQXJlQ3RhV3dhJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YVd3YUxpbms/OiBNYXliZTxBY2ZMaW5rPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0JnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtCbG9ja3NXaG9XZUFyZUN0YVd3YSZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBjdGFXd2FUaXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZmllbGQgZ3JvdXBcbiAgICogQGRlcHJlY2F0ZWQgVXNlIF9fdHlwZW5hbWUgaW5zdGVhZFxuICAgKi9cbiAgZmllbGRHcm91cE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEludGVyZmFjZSByZXByZXNlbnRpbmcgZmllbGRzIG9mIHRoZSBBQ0YgJnF1b3Q7QmxvY2tzV2hvV2VBcmVDdGFXd2EmcXVvdDsgRmllbGQgR3JvdXAgKi9cbmV4cG9ydCB0eXBlIEJsb2Nrc1dob1dlQXJlQ3RhV3dhX0ZpZWxkcyA9IHtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDtsaW5rJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtCbG9ja3NXaG9XZUFyZUN0YVd3YSZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBjdGFXd2FMaW5rPzogTWF5YmU8QWNmTGluaz47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmVDdGFXd2EmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgY3RhV3dhVGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnRlcmZhY2UgcmVwcmVzZW50aW5nIGZpZWxkcyBvZiB0aGUgQUNGICZxdW90O0Jsb2Nrc1dob1dlQXJlJnF1b3Q7IEZpZWxkIEdyb3VwICovXG5leHBvcnQgdHlwZSBCbG9ja3NXaG9XZUFyZV9GaWVsZHMgPSB7XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7Z3JvdXAmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0Jsb2Nrc1dob1dlQXJlJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YVd3YT86IE1heWJlPEJsb2Nrc1dob1dlQXJlQ3RhV3dhPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0YXJlYSZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmUmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgZGVzY3JpcHRpb25Xd2E/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0JnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtCbG9ja3NXaG9XZUFyZSZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBzdWJ0aXRsZVd3YT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmUmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgdGl0bGVXd2E/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeSA9IERhdGFiYXNlSWRlbnRpZmllciAmIEhpZXJhcmNoaWNhbE5vZGUgJiBIaWVyYXJjaGljYWxUZXJtTm9kZSAmIE1lbnVJdGVtTGlua2FibGUgJiBOb2RlICYgVGVybU5vZGUgJiBVbmlmb3JtUmVzb3VyY2VJZGVudGlmaWFibGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2F0ZWdvcnknO1xuICAvKiogVGhlIGFuY2VzdG9ycyBvZiB0aGUgbm9kZS4gRGVmYXVsdCBvcmRlcmVkIGFzIGxvd2VzdCAoY2xvc2VzdCB0byB0aGUgY2hpbGQpIHRvIGhpZ2hlc3QgKGNsb3Nlc3QgdG8gdGhlIHJvb3QpLiAqL1xuICBhbmNlc3RvcnM/OiBNYXliZTxDYXRlZ29yeVRvQW5jZXN0b3JzQ2F0ZWdvcnlDb25uZWN0aW9uPjtcbiAgLyoqXG4gICAqIFRoZSBpZCBmaWVsZCBtYXRjaGVzIHRoZSBXUF9Qb3N0LSZndDtJRCBmaWVsZC5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiBkYXRhYmFzZUlkXG4gICAqL1xuICBjYXRlZ29yeUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgY2F0ZWdvcnkgdHlwZSBhbmQgaXRzIGNoaWxkcmVuIGNhdGVnb3JpZXMuICovXG4gIGNoaWxkcmVuPzogTWF5YmU8Q2F0ZWdvcnlUb0NhdGVnb3J5Q29ubmVjdGlvbj47XG4gIC8qKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXMgKi9cbiAgY29uZGl0aW9uYWxUYWdzPzogTWF5YmU8Q29uZGl0aW9uYWxUYWdzPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ2F0ZWdvcnkgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbiAgY29udGVudE5vZGVzPzogTWF5YmU8Q2F0ZWdvcnlUb0NvbnRlbnROb2RlQ29ubmVjdGlvbj47XG4gIC8qKiBUaGUgbnVtYmVyIG9mIG9iamVjdHMgY29ubmVjdGVkIHRvIHRoZSBvYmplY3QgKi9cbiAgY291bnQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UgKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBvYmplY3QgKi9cbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVGVybU5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU3R5bGVzaGVldCB0eXBlICovXG4gIGVucXVldWVkU3R5bGVzaGVldHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgVGVybSAqL1xuICBpc1Rlcm1Ob2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIGxpbmsgdG8gdGhlIHRlcm0gKi9cbiAgbGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaHVtYW4gZnJpZW5kbHkgbmFtZSBvZiB0aGUgb2JqZWN0LiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgY2F0ZWdvcnkgdHlwZSBhbmQgaXRzIHBhcmVudCBjYXRlZ29yeS4gKi9cbiAgcGFyZW50PzogTWF5YmU8Q2F0ZWdvcnlUb1BhcmVudENhdGVnb3J5Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogRGF0YWJhc2UgaWQgb2YgdGhlIHBhcmVudCBub2RlICovXG4gIHBhcmVudERhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgbm9kZS4gKi9cbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENhdGVnb3J5IHR5cGUgYW5kIHRoZSBwb3N0IHR5cGUgKi9cbiAgcG9zdHM/OiBNYXliZTxDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb24+O1xuICAvKiogQW4gYWxwaGFudW1lcmljIGlkZW50aWZpZXIgZm9yIHRoZSBvYmplY3QgdW5pcXVlIHRvIGl0cyB0eXBlLiAqL1xuICBzbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ2F0ZWdvcnkgdHlwZSBhbmQgdGhlIFRheG9ub215IHR5cGUgKi9cbiAgdGF4b25vbXk/OiBNYXliZTxDYXRlZ29yeVRvVGF4b25vbXlDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGF4b25vbXkgdGhhdCB0aGUgb2JqZWN0IGlzIGFzc29jaWF0ZWQgd2l0aCAqL1xuICB0YXhvbm9teU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICB0ZW1wbGF0ZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHRlcm0gZ3JvdXAgdGhhdCB0aGlzIHRlcm0gb2JqZWN0IGJlbG9uZ3MgdG8gKi9cbiAgdGVybUdyb3VwSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRheG9ub215IElEIHRoYXQgdGhlIG9iamVjdCBpcyBhc3NvY2lhdGVkIHdpdGggKi9cbiAgdGVybVRheG9ub215SWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeUFuY2VzdG9yc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgY2F0ZWdvcnkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlDaGlsZHJlbkFyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeUNvbnRlbnROb2Rlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxDYXRlZ29yeVRvQ29udGVudE5vZGVDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeUVucXVldWVkU2NyaXB0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgY2F0ZWdvcnkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlFbnF1ZXVlZFN0eWxlc2hlZXRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVBvc3RzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPENhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBjYXRlZ29yeSBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgY2F0ZWdvcnkgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PENhdGVnb3J5Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBjYXRlZ29yeSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8Q2F0ZWdvcnk+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBjYXRlZ29yeSAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgY2F0ZWdvcnkgTm9kZSAqL1xuICBub2RlOiBDYXRlZ29yeTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBDYXRlZ29yeUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgVHlwZSBvZiBJZGVudGlmaWVyIHVzZWQgdG8gZmV0Y2ggYSBzaW5nbGUgcmVzb3VyY2UuIERlZmF1bHQgaXMgSUQuICovXG5leHBvcnQgZW51bSBDYXRlZ29yeUlkVHlwZSB7XG4gIC8qKiBUaGUgRGF0YWJhc2UgSUQgZm9yIHRoZSBub2RlICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogVGhlIGhhc2hlZCBHbG9iYWwgSUQgKi9cbiAgSWQgPSAnSUQnLFxuICAvKiogVGhlIG5hbWUgb2YgdGhlIG5vZGUgKi9cbiAgTmFtZSA9ICdOQU1FJyxcbiAgLyoqIFVybCBmcmllbmRseSBuYW1lIG9mIHRoZSBub2RlICovXG4gIFNsdWcgPSAnU0xVRycsXG4gIC8qKiBUaGUgVVJJIGZvciB0aGUgbm9kZSAqL1xuICBVcmkgPSAnVVJJJ1xufVxuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDYXRlZ29yeSB0eXBlIGFuZCB0aGUgY2F0ZWdvcnkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvbiA9IENhdGVnb3J5Q29ubmVjdGlvbiAmIENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIENhdGVnb3J5VG9BbmNlc3RvcnNDYXRlZ29yeUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Q2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q2F0ZWdvcnk+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDYXRlZ29yeVRvQW5jZXN0b3JzQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9BbmNlc3RvcnNDYXRlZ29yeUNvbm5lY3Rpb25FZGdlID0gQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENhdGVnb3J5O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Q2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvblBhZ2VJbmZvID0gQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ2F0ZWdvcnlUb0FuY2VzdG9yc0NhdGVnb3J5Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENhdGVnb3J5IHR5cGUgYW5kIHRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uID0gQ2F0ZWdvcnlDb25uZWN0aW9uICYgQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgQ2F0ZWdvcnlUb0NhdGVnb3J5Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDYXRlZ29yeT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IENhdGVnb3J5VG9DYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlUb0NhdGVnb3J5Q29ubmVjdGlvbkVkZ2UgPSBDYXRlZ29yeUNvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ2F0ZWdvcnk7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm8gPSBDYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBDYXRlZ29yeVRvQ2F0ZWdvcnlDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9DYXRlZ29yeUNvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBVbmlxdWUgY2FjaGUga2V5IHRvIGJlIHByb2R1Y2VkIHdoZW4gdGhpcyBxdWVyeSBpcyBzdG9yZWQgaW4gYW4gb2JqZWN0IGNhY2hlLiBEZWZhdWx0IGlzICdjb3JlJy4gKi9cbiAgY2FjaGVEb21haW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRlcm0gSUQgdG8gcmV0cmlldmUgY2hpbGQgdGVybXMgb2YuIElmIG11bHRpcGxlIHRheG9ub21pZXMgYXJlIHBhc3NlZCwgJGNoaWxkX29mIGlzIGlnbm9yZWQuIERlZmF1bHQgMC4gKi9cbiAgY2hpbGRPZj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVHJ1ZSB0byBsaW1pdCByZXN1bHRzIHRvIHRlcm1zIHRoYXQgaGF2ZSBubyBjaGlsZHJlbi4gVGhpcyBwYXJhbWV0ZXIgaGFzIG5vIGVmZmVjdCBvbiBub24taGllcmFyY2hpY2FsIHRheG9ub21pZXMuIERlZmF1bHQgZmFsc2UuICovXG4gIGNoaWxkbGVzcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBkZXNjcmlwdGlvbiBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgZGVzY3JpcHRpb25MaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUgYWxvbmcgd2l0aCBhbGwgb2YgdGhlaXIgZGVzY2VuZGFudCB0ZXJtcy4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZV90cmVlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGVUcmVlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIGhpZGUgdGVybXMgbm90IGFzc2lnbmVkIHRvIGFueSBwb3N0cy4gQWNjZXB0cyB0cnVlIG9yIGZhbHNlLiBEZWZhdWx0IGZhbHNlICovXG4gIGhpZGVFbXB0eT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gaW5jbHVkZSB0ZXJtcyB0aGF0IGhhdmUgbm9uLWVtcHR5IGRlc2NlbmRhbnRzIChldmVuIGlmICRoaWRlX2VtcHR5IGlzIHNldCB0byB0cnVlKS4gRGVmYXVsdCB0cnVlLiAqL1xuICBoaWVyYXJjaGljYWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBpbmNsdWRlLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBpbmNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBuYW1lcyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgbmFtZSBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZUxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIG9iamVjdCBJRHMuIFJlc3VsdHMgd2lsbCBiZSBsaW1pdGVkIHRvIHRlcm1zIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBvYmplY3RzLiAqL1xuICBvYmplY3RJZHM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIERpcmVjdGlvbiB0aGUgY29ubmVjdGlvbiBzaG91bGQgYmUgb3JkZXJlZCBpbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkKHMpIHRvIG9yZGVyIHRlcm1zIGJ5LiBEZWZhdWx0cyB0byAnbmFtZScuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFdoZXRoZXIgdG8gcGFkIHRoZSBxdWFudGl0eSBvZiBhIHRlcm0ncyBjaGlsZHJlbiBpbiB0aGUgcXVhbnRpdHkgb2YgZWFjaCB0ZXJtJ3MgXCJjb3VudFwiIG9iamVjdCB2YXJpYWJsZS4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgcGFkQ291bnRzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUGFyZW50IHRlcm0gSUQgdG8gcmV0cmlldmUgZGlyZWN0LWNoaWxkIHRlcm1zIG9mLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFNlYXJjaCBjcml0ZXJpYSB0byBtYXRjaCB0ZXJtcy4gV2lsbCBiZSBTUUwtZm9ybWF0dGVkIHdpdGggd2lsZGNhcmRzIGJlZm9yZSBhbmQgYWZ0ZXIuIERlZmF1bHQgZW1wdHkuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygc2x1Z3MgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9tSWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gdGF4b25vbXkgSURzLCB0byBtYXRjaCB3aGVuIHF1ZXJ5aW5nIHRlcm1zLiAqL1xuICB0ZXJtVGF4b25vbXlJZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hldGhlciB0byBwcmltZSBtZXRhIGNhY2hlcyBmb3IgbWF0Y2hlZCB0ZXJtcy4gRGVmYXVsdCB0cnVlLiAqL1xuICB1cGRhdGVUZXJtTWV0YUNhY2hlPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ2F0ZWdvcnkgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudE5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBDYXRlZ29yeVRvQ29udGVudE5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PENhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnROb2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogQ2F0ZWdvcnlUb0NvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVRvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSA9IENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O0NhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyA9IENvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIENhdGVnb3J5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlUb0NvbnRlbnROb2RlQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBUeXBlcyBvZiBjb250ZW50IHRvIGZpbHRlciAqL1xuICBjb250ZW50VHlwZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8Q29udGVudFR5cGVzT2ZDYXRlZ29yeUVudW0+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENhdGVnb3J5IHR5cGUgYW5kIHRoZSBjYXRlZ29yeSB0eXBlICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVRvUGFyZW50Q2F0ZWdvcnlDb25uZWN0aW9uRWRnZSA9IENhdGVnb3J5Q29ubmVjdGlvbkVkZ2UgJiBFZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9QYXJlbnRDYXRlZ29yeUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBDYXRlZ29yeTtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENhdGVnb3J5IHR5cGUgYW5kIHRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBQb3N0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Q2F0ZWdvcnlUb1Bvc3RDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxQb3N0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogQ2F0ZWdvcnlUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgUG9zdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFBvc3Q7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIENhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBQb3N0Q29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIENhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBDYXRlZ29yeVRvUG9zdENvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBUaGUgdXNlciB0aGF0J3MgY29ubmVjdGVkIGFzIHRoZSBhdXRob3Igb2YgdGhlIG9iamVjdC4gVXNlIHRoZSB1c2VySWQgZm9yIHRoZSBhdXRob3Igb2JqZWN0LiAqL1xuICBhdXRob3I/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaW5kIG9iamVjdHMgY29ubmVjdGVkIHRvIHRoZSBhdXRob3IgYnkgdGhlIGF1dGhvcidzIG5pY2VuYW1lICovXG4gIGF1dGhvck5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBOT1QgY29ubmVjdGVkIHRvIGF1dGhvcihzKSBpbiB0aGUgYXJyYXkgb2YgYXV0aG9yJ3MgdXNlcklkcyAqL1xuICBhdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ2F0ZWdvcnkgSUQgKi9cbiAgY2F0ZWdvcnlJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY2F0ZWdvcnkgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSBjYXRlZ29yeSBPUiBhbm90aGVyICovXG4gIGNhdGVnb3J5SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFVzZSBDYXRlZ29yeSBTbHVnICovXG4gIGNhdGVnb3J5TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY2F0ZWdvcnkgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSBjYXRlZ29yeSBPUiBhbm90aGVyICovXG4gIGNhdGVnb3J5Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbHRlciB0aGUgY29ubmVjdGlvbiBiYXNlZCBvbiBkYXRlcyAqL1xuICBkYXRlUXVlcnk/OiBJbnB1dE1heWJlPERhdGVRdWVyeUlucHV0PjtcbiAgLyoqIFRydWUgZm9yIG9iamVjdHMgd2l0aCBwYXNzd29yZHM7IEZhbHNlIGZvciBvYmplY3RzIHdpdGhvdXQgcGFzc3dvcmRzOyBudWxsIGZvciBhbGwgb2JqZWN0cyB3aXRoIG9yIHdpdGhvdXQgcGFzc3dvcmRzICovXG4gIGhhc1Bhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmaWMgZGF0YWJhc2UgSUQgb2YgdGhlIG9iamVjdCAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgSURzIGZvciB0aGUgb2JqZWN0cyB0byByZXRyaWV2ZSAqL1xuICBpbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogR2V0IG9iamVjdHMgd2l0aCBhIHNwZWNpZmljIG1pbWVUeXBlIHByb3BlcnR5ICovXG4gIG1pbWVUeXBlPzogSW5wdXRNYXliZTxNaW1lVHlwZUVudW0+O1xuICAvKiogU2x1ZyAvIHBvc3RfbmFtZSBvZiB0aGUgb2JqZWN0ICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB0byByZXRyaWV2ZS4gVXNlIHNsdWdzICovXG4gIG5hbWVJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgSURzIE5PVCB0byByZXRyaWV2ZS4gSWYgdGhpcyBpcyB1c2VkIGluIHRoZSBzYW1lIHF1ZXJ5IGFzIFwiaW5cIiwgaXQgd2lsbCBiZSBpZ25vcmVkICovXG4gIG5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGF0IHBhcmFtZXRlciB0byB1c2UgdG8gb3JkZXIgdGhlIG9iamVjdHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdE9iamVjdHNDb25uZWN0aW9uT3JkZXJieUlucHV0Pj4+O1xuICAvKiogVXNlIElEIHRvIHJldHVybiBvbmx5IGNoaWxkcmVuLiBVc2UgMCB0byByZXR1cm4gb25seSB0b3AtbGV2ZWwgaXRlbXMgKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB3aG9zZSBwYXJlbnQgaXMgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgcG9zdHMgd2hvc2UgcGFyZW50IGlzIG5vdCBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgcGFzc3dvcmQuICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaG93IFBvc3RzIGJhc2VkIG9uIGEga2V5d29yZCBzZWFyY2ggKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSBwb3N0cyB3aGVyZSBwb3N0IHN0YXR1cyBpcyBpbiBhbiBhcnJheS4gKi9cbiAgc3RhdGk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBzdGF0dXMuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+O1xuICAvKiogVGFnIFNsdWcgKi9cbiAgdGFnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBVc2UgVGFnIElEICovXG4gIHRhZ0lkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0YWcgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgT1IgYW5vdGhlciAqL1xuICB0YWdJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgdGFnIE9SIGFub3RoZXIgKi9cbiAgdGFnTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBzbHVncywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgdGFnIEFORCBhbm90aGVyICovXG4gIHRhZ1NsdWdBbmQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgc2x1Z3MsIHVzZWQgdG8gaW5jbHVkZSBvYmplY3RzIGluIEFOWSBzcGVjaWZpZWQgdGFncyAqL1xuICB0YWdTbHVnSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBUaXRsZSBvZiB0aGUgb2JqZWN0ICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDYXRlZ29yeSB0eXBlIGFuZCB0aGUgVGF4b25vbXkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ2F0ZWdvcnlUb1RheG9ub215Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYgVGF4b25vbXlDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdDYXRlZ29yeVRvVGF4b25vbXlDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogVGF4b25vbXk7XG59O1xuXG4vKiogQSBDb21tZW50IG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgQ29tbWVudCA9IERhdGFiYXNlSWRlbnRpZmllciAmIE5vZGUgJiBVbmlmb3JtUmVzb3VyY2VJZGVudGlmaWFibGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29tbWVudCc7XG4gIC8qKiBVc2VyIGFnZW50IHVzZWQgdG8gcG9zdCB0aGUgY29tbWVudC4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX0NvbW1lbnQtJmd0O2NvbW1lbnRfYWdlbnQgYW5kIHRoZSB2YWx1ZSBtYXRjaGluZyB0aGUgJnF1b3Q7Y29tbWVudF9hZ2VudCZxdW90OyBjb2x1bW4gaW4gU1FMLiAqL1xuICBhZ2VudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgYXBwcm92YWwgc3RhdHVzIG9mIHRoZSBjb21tZW50LiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7Y29tbWVudF9hcHByb3ZlZCBhbmQgdGhlIHZhbHVlIG1hdGNoaW5nIHRoZSAmcXVvdDtjb21tZW50X2FwcHJvdmVkJnF1b3Q7IGNvbHVtbiBpbiBTUUwuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGBzdGF0dXNgIGZpZWxkXG4gICAqL1xuICBhcHByb3ZlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGF1dGhvciBvZiB0aGUgY29tbWVudCAqL1xuICBhdXRob3I/OiBNYXliZTxDb21tZW50VG9Db21tZW50ZXJDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBJUCBhZGRyZXNzIGZvciB0aGUgYXV0aG9yLiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7Y29tbWVudF9hdXRob3JfSVAgYW5kIHRoZSB2YWx1ZSBtYXRjaGluZyB0aGUgJnF1b3Q7Y29tbWVudF9hdXRob3JfSVAmcXVvdDsgY29sdW1uIGluIFNRTC4gKi9cbiAgYXV0aG9ySXA/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogSUQgZm9yIHRoZSBjb21tZW50LCB1bmlxdWUgYW1vbmcgY29tbWVudHMuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgZGF0YWJhc2VJZFxuICAgKi9cbiAgY29tbWVudElkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29tbWVudCB0eXBlIGFuZCB0aGUgQ29udGVudE5vZGUgdHlwZSAqL1xuICBjb21tZW50ZWRPbj86IE1heWJlPENvbW1lbnRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBDb250ZW50IG9mIHRoZSBjb21tZW50LiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7Y29tbWVudF9jb250ZW50IGFuZCB0aGUgdmFsdWUgbWF0Y2hpbmcgdGhlICZxdW90O2NvbW1lbnRfY29udGVudCZxdW90OyBjb2x1bW4gaW4gU1FMLiAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBzdG9yZWQgaW4gdGhlIGRhdGFiYXNlICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIERhdGUgdGhlIGNvbW1lbnQgd2FzIHBvc3RlZCBpbiBsb2NhbCB0aW1lLiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7ZGF0ZSBhbmQgdGhlIHZhbHVlIG1hdGNoaW5nIHRoZSAmcXVvdDtkYXRlJnF1b3Q7IGNvbHVtbiBpbiBTUUwuICovXG4gIGRhdGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRGF0ZSB0aGUgY29tbWVudCB3YXMgcG9zdGVkIGluIEdNVC4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX0NvbW1lbnQtJmd0O2RhdGVfZ210IGFuZCB0aGUgdmFsdWUgbWF0Y2hpbmcgdGhlICZxdW90O2RhdGVfZ210JnF1b3Q7IGNvbHVtbiBpbiBTUUwuICovXG4gIGRhdGVHbXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgY29tbWVudCBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbW1lbnQgKi9cbiAgaXNDb21tZW50OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbnRlbnQgTm9kZSAqL1xuICBpc0NvbnRlbnROb2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBmcm9udCBwYWdlLiAqL1xuICBpc0Zyb250UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGJsb2cgcGFnZS4gKi9cbiAgaXNQb3N0c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBUZXJtICovXG4gIGlzVGVybU5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBLYXJtYSB2YWx1ZSBmb3IgdGhlIGNvbW1lbnQuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9Db21tZW50LSZndDtjb21tZW50X2thcm1hIGFuZCB0aGUgdmFsdWUgbWF0Y2hpbmcgdGhlICZxdW90O2NvbW1lbnRfa2FybWEmcXVvdDsgY29sdW1uIGluIFNRTC4gKi9cbiAga2FybWE/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBlcm1hbGluayBvZiB0aGUgY29tbWVudCAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29tbWVudCB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG4gIHBhcmVudD86IE1heWJlPENvbW1lbnRUb1BhcmVudENvbW1lbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWQgb2YgdGhlIHBhcmVudCBjb21tZW50IG5vZGUgb3IgbnVsbCBpZiBpdCBpcyB0aGUgcm9vdCBjb21tZW50ICovXG4gIHBhcmVudERhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgY29tbWVudCBub2RlLiAqL1xuICBwYXJlbnRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29tbWVudCB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG4gIHJlcGxpZXM/OiBNYXliZTxDb21tZW50VG9Db21tZW50Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgYXBwcm92YWwgc3RhdHVzIG9mIHRoZSBjb21tZW50LiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7Y29tbWVudF9hcHByb3ZlZCBhbmQgdGhlIHZhbHVlIG1hdGNoaW5nIHRoZSAmcXVvdDtjb21tZW50X2FwcHJvdmVkJnF1b3Q7IGNvbHVtbiBpbiBTUUwuICovXG4gIHN0YXR1cz86IE1heWJlPENvbW1lbnRTdGF0dXNFbnVtPjtcbiAgdGVtcGxhdGVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVHlwZSBvZiBjb21tZW50LiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfQ29tbWVudC0mZ3Q7Y29tbWVudF90eXBlIGFuZCB0aGUgdmFsdWUgbWF0Y2hpbmcgdGhlICZxdW90O2NvbW1lbnRfdHlwZSZxdW90OyBjb2x1bW4gaW4gU1FMLiAqL1xuICB0eXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1bmlxdWUgcmVzb3VyY2UgaWRlbnRpZmllciBwYXRoICovXG4gIHVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBBIENvbW1lbnQgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBDb21tZW50Q29udGVudEFyZ3MgPSB7XG4gIGZvcm1hdD86IElucHV0TWF5YmU8UG9zdE9iamVjdEZpZWxkRm9ybWF0RW51bT47XG59O1xuXG5cbi8qKiBBIENvbW1lbnQgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBDb21tZW50UGFyZW50QXJncyA9IHtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPENvbW1lbnRUb1BhcmVudENvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIEEgQ29tbWVudCBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRSZXBsaWVzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPENvbW1lbnRUb0NvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cbi8qKiBBIENvbW1lbnQgQXV0aG9yIG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgQ29tbWVudEF1dGhvciA9IENvbW1lbnRlciAmIERhdGFiYXNlSWRlbnRpZmllciAmIE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29tbWVudEF1dGhvcic7XG4gIC8qKiBBdmF0YXIgb2JqZWN0IGZvciB1c2VyLiBUaGUgYXZhdGFyIG9iamVjdCBjYW4gYmUgcmV0cmlldmVkIGluIGRpZmZlcmVudCBzaXplcyBieSBzcGVjaWZ5aW5nIHRoZSBzaXplIGFyZ3VtZW50LiAqL1xuICBhdmF0YXI/OiBNYXliZTxBdmF0YXI+O1xuICAvKiogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UgKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogVGhlIGVtYWlsIGZvciB0aGUgY29tbWVudCBhdXRob3IgKi9cbiAgZW1haWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgY29tbWVudCBhdXRob3Igb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5hbWUgZm9yIHRoZSBjb21tZW50IGF1dGhvci4gKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdXJsIHRoZSBjb21tZW50IGF1dGhvci4gKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIEEgQ29tbWVudCBBdXRob3Igb2JqZWN0ICovXG5leHBvcnQgdHlwZSBDb21tZW50QXV0aG9yQXZhdGFyQXJncyA9IHtcbiAgZm9yY2VEZWZhdWx0PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICByYXRpbmc/OiBJbnB1dE1heWJlPEF2YXRhclJhdGluZ0VudW0+O1xuICBzaXplPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBDb21tZW50IE5vZGVzICovXG5leHBvcnQgdHlwZSBDb21tZW50Q29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIFJvb3RRdWVyeSBhbmQgY29ubmVjdGVkIENvbW1lbnQgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PENvbW1lbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIENvbW1lbnQgTm9kZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbW1lbnQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDb21tZW50Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIENvbW1lbnQgKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgQ29tbWVudCBOb2RlICovXG4gIG5vZGU6IENvbW1lbnQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSBjb25uZWN0ZWQgQ29tbWVudENvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBDb21tZW50Q29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSBjb21tZW50IG5vZGUuIERlZmF1bHQgaXMgXCJJRFwiLiBUbyBiZSB1c2VkIGFsb25nIHdpdGggdGhlIFwiaWRcIiBmaWVsZC4gKi9cbmV4cG9ydCBlbnVtIENvbW1lbnROb2RlSWRUeXBlRW51bSB7XG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSBEYXRhYmFzZSBJRC4gKi9cbiAgRGF0YWJhc2VJZCA9ICdEQVRBQkFTRV9JRCcsXG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSAoaGFzaGVkKSBHbG9iYWwgSUQuICovXG4gIElkID0gJ0lEJ1xufVxuXG4vKiogVGhlIHN0YXR1cyBvZiB0aGUgY29tbWVudCBvYmplY3QuICovXG5leHBvcnQgZW51bSBDb21tZW50U3RhdHVzRW51bSB7XG4gIC8qKiBDb21tZW50cyB3aXRoIHRoZSBBcHByb3ZlZCBzdGF0dXMgKi9cbiAgQXBwcm92ZSA9ICdBUFBST1ZFJyxcbiAgLyoqIENvbW1lbnRzIHdpdGggdGhlIFVuYXBwcm92ZWQgc3RhdHVzICovXG4gIEhvbGQgPSAnSE9MRCcsXG4gIC8qKiBDb21tZW50cyB3aXRoIHRoZSBTcGFtIHN0YXR1cyAqL1xuICBTcGFtID0gJ1NQQU0nLFxuICAvKiogQ29tbWVudHMgd2l0aCB0aGUgVHJhc2ggc3RhdHVzICovXG4gIFRyYXNoID0gJ1RSQVNIJ1xufVxuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb21tZW50IHR5cGUgYW5kIHRoZSBDb21tZW50IHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRUb0NvbW1lbnRDb25uZWN0aW9uID0gQ29tbWVudENvbm5lY3Rpb24gJiBDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbW1lbnRUb0NvbW1lbnRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgQ29tbWVudFRvQ29tbWVudENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Q29tbWVudFRvQ29tbWVudENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbW1lbnQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDb21tZW50VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBDb21tZW50VG9Db21tZW50Q29ubmVjdGlvbkVkZ2UgPSBDb21tZW50Q29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbW1lbnRUb0NvbW1lbnRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ29tbWVudDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O0NvbW1lbnRUb0NvbW1lbnRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBDb21tZW50VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvID0gQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdDb21tZW50VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgQ29tbWVudFRvQ29tbWVudENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgQ29tbWVudFRvQ29tbWVudENvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBDb21tZW50IGF1dGhvciBlbWFpbCBhZGRyZXNzLiAqL1xuICBhdXRob3JFbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyB0byBpbmNsdWRlIGNvbW1lbnRzIGZvci4gKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gZXhjbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDb21tZW50IGF1dGhvciBVUkwuICovXG4gIGF1dGhvclVybD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY29tbWVudCBJRHMgdG8gaW5jbHVkZS4gKi9cbiAgY29tbWVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb2YgdXNlcnMgd2hvc2UgdW5hcHByb3ZlZCBjb21tZW50cyB3aWxsIGJlIHJldHVybmVkIGJ5IHRoZSBxdWVyeSByZWdhcmRsZXNzIG9mIHN0YXR1cy4gKi9cbiAgY29tbWVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIG9mIGEgZ2l2ZW4gdHlwZS4gKi9cbiAgY29tbWVudFR5cGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEluY2x1ZGUgY29tbWVudHMgZnJvbSBhIGdpdmVuIGFycmF5IG9mIGNvbW1lbnQgdHlwZXMuICovXG4gIGNvbW1lbnRUeXBlSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBFeGNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZU5vdEluPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IG9iamVjdCBhdXRob3IgSUQgdG8gbGltaXQgcmVzdWx0cyBieS4gKi9cbiAgY29udGVudEF1dGhvcj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyB0byByZXRyaWV2ZSBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRBdXRob3JJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyAqbm90KiB0byByZXRyaWV2ZSBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRBdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogTGltaXQgcmVzdWx0cyB0byB0aG9zZSBhZmZpbGlhdGVkIHdpdGggYSBnaXZlbiBjb250ZW50IG9iamVjdCBJRC4gKi9cbiAgY29udGVudElkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBpbmNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgY29udGVudCBvYmplY3QgSURzIHRvIGV4Y2x1ZGUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRJZE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDb250ZW50IG9iamVjdCBuYW1lIChpLmUuIHNsdWcgKSB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudE5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbnRlbnQgT2JqZWN0IHBhcmVudCBJRCB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudFBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY29udGVudCBvYmplY3Qgc3RhdHVzZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50U3RhdHVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgdHlwZSBvciBhcnJheSBvZiB0eXBlcyB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gUGFzcyAnYW55JyB0byBtYXRjaCBhbnkgdmFsdWUuICovXG4gIGNvbnRlbnRUeXBlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPENvbnRlbnRUeXBlRW51bT4+PjtcbiAgLyoqIEFycmF5IG9mIElEcyBvciBlbWFpbCBhZGRyZXNzZXMgb2YgdXNlcnMgd2hvc2UgdW5hcHByb3ZlZCBjb21tZW50cyB3aWxsIGJlIHJldHVybmVkIGJ5IHRoZSBxdWVyeSByZWdhcmRsZXNzIG9mICRzdGF0dXMuIERlZmF1bHQgZW1wdHkgKi9cbiAgaW5jbHVkZVVuYXBwcm92ZWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEthcm1hIHNjb3JlIHRvIHJldHJpZXZlIG1hdGNoaW5nIGNvbW1lbnRzIGZvci4gKi9cbiAga2FybWE/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjYXJkaW5hbGl0eSBvZiB0aGUgb3JkZXIgb2YgdGhlIGNvbm5lY3Rpb24gKi9cbiAgb3JkZXI/OiBJbnB1dE1heWJlPE9yZGVyRW51bT47XG4gIC8qKiBGaWVsZCB0byBvcmRlciB0aGUgY29tbWVudHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPENvbW1lbnRzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFBhcmVudCBJRCBvZiBjb21tZW50IHRvIHJldHJpZXZlIGNoaWxkcmVuIG9mLiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgcGFyZW50IElEcyBvZiBjb21tZW50cyAqbm90KiB0byByZXRyaWV2ZSBjaGlsZHJlbiBmb3IuICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTZWFyY2ggdGVybShzKSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29tbWVudCBzdGF0dXMgdG8gbGltaXQgcmVzdWx0cyBieS4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZvciBhIHNwZWNpZmljIHVzZXIgSUQuICovXG4gIHVzZXJJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb21tZW50IHR5cGUgYW5kIHRoZSBDb21tZW50ZXIgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29tbWVudFRvQ29tbWVudGVyQ29ubmVjdGlvbkVkZ2UgPSBDb21tZW50ZXJDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiBPbmVUb09uZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29tbWVudFRvQ29tbWVudGVyQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IENvbW1lbnRlcjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbW1lbnQgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UgPSBDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlICYgRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdDb21tZW50VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbW1lbnQgdHlwZSBhbmQgdGhlIENvbW1lbnQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29tbWVudFRvUGFyZW50Q29tbWVudENvbm5lY3Rpb25FZGdlID0gQ29tbWVudENvbm5lY3Rpb25FZGdlICYgRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdDb21tZW50VG9QYXJlbnRDb21tZW50Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IENvbW1lbnQ7XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIENvbW1lbnRUb1BhcmVudENvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRUb1BhcmVudENvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogQ29tbWVudCBhdXRob3IgZW1haWwgYWRkcmVzcy4gKi9cbiAgYXV0aG9yRW1haWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gaW5jbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIGV4Y2x1ZGUgY29tbWVudHMgZm9yLiAqL1xuICBhdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29tbWVudCBhdXRob3IgVVJMLiAqL1xuICBhdXRob3JVcmw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbW1lbnQgSURzIHRvIGluY2x1ZGUuICovXG4gIGNvbW1lbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgSURzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiBzdGF0dXMuICovXG4gIGNvbW1lbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBvZiBhIGdpdmVuIHR5cGUuICovXG4gIGNvbW1lbnRUeXBlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogRXhjbHVkZSBjb21tZW50cyBmcm9tIGEgZ2l2ZW4gYXJyYXkgb2YgY29tbWVudCB0eXBlcy4gKi9cbiAgY29tbWVudFR5cGVOb3RJbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBvYmplY3QgYXV0aG9yIElEIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIGNvbnRlbnRBdXRob3I/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgKm5vdCogdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIExpbWl0IHJlc3VsdHMgdG8gdGhvc2UgYWZmaWxpYXRlZCB3aXRoIGEgZ2l2ZW4gY29udGVudCBvYmplY3QgSUQuICovXG4gIGNvbnRlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBJRHMgdG8gaW5jbHVkZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudElkSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBleGNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgbmFtZSAoaS5lLiBzbHVnICkgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnROYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IE9iamVjdCBwYXJlbnQgSUQgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRQYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IHN0YXR1c2VzIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiBQYXNzICdhbnknIHRvIG1hdGNoIGFueSB2YWx1ZS4gKi9cbiAgY29udGVudFN0YXR1cz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IHR5cGUgb3IgYXJyYXkgb2YgdHlwZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50VHlwZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb3IgZW1haWwgYWRkcmVzc2VzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiAkc3RhdHVzLiBEZWZhdWx0IGVtcHR5ICovXG4gIGluY2x1ZGVVbmFwcHJvdmVkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBLYXJtYSBzY29yZSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIGthcm1hPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY2FyZGluYWxpdHkgb2YgdGhlIG9yZGVyIG9mIHRoZSBjb25uZWN0aW9uICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQgdG8gb3JkZXIgdGhlIGNvbW1lbnRzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxDb21tZW50c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bT47XG4gIC8qKiBQYXJlbnQgSUQgb2YgY29tbWVudCB0byByZXRyaWV2ZSBjaGlsZHJlbiBvZi4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBwYXJlbnQgSURzIG9mIGNvbW1lbnRzIHRvIHJldHJpZXZlIGNoaWxkcmVuIGZvci4gKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgKm5vdCogdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2VhcmNoIHRlcm0ocykgdG8gcmV0cmlldmUgbWF0Y2hpbmcgY29tbWVudHMgZm9yLiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbW1lbnQgc3RhdHVzIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBmb3IgYSBzcGVjaWZpYyB1c2VyIElELiAqL1xuICB1c2VySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIFRoZSBhdXRob3Igb2YgYSBjb21tZW50ICovXG5leHBvcnQgdHlwZSBDb21tZW50ZXIgPSB7XG4gIC8qKiBBdmF0YXIgb2JqZWN0IGZvciB1c2VyLiBUaGUgYXZhdGFyIG9iamVjdCBjYW4gYmUgcmV0cmlldmVkIGluIGRpZmZlcmVudCBzaXplcyBieSBzcGVjaWZ5aW5nIHRoZSBzaXplIGFyZ3VtZW50LiAqL1xuICBhdmF0YXI/OiBNYXliZTxBdmF0YXI+O1xuICAvKiogSWRlbnRpZmllcyB0aGUgcHJpbWFyeSBrZXkgZnJvbSB0aGUgZGF0YWJhc2UuICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSBhdXRob3Igb2YgYSBjb21tZW50LiAqL1xuICBlbWFpbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBjb21tZW50IGF1dGhvci4gKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgYXV0aG9yIGluZm9ybWF0aW9uIGlzIGNvbnNpZGVyZWQgcmVzdHJpY3RlZC4gKG5vdCBmdWxseSBwdWJsaWMpICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGF1dGhvciBvZiBhIGNvbW1lbnQuICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVybCBvZiB0aGUgYXV0aG9yIG9mIGEgY29tbWVudC4gKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBDb21tZW50ZXIgKi9cbmV4cG9ydCB0eXBlIENvbW1lbnRlckNvbm5lY3Rpb25FZGdlID0ge1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNvbm5lY3RlZCBDb21tZW50ZXIgTm9kZSAqL1xuICBub2RlOiBDb21tZW50ZXI7XG59O1xuXG4vKiogT3B0aW9ucyBmb3Igb3JkZXJpbmcgdGhlIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCBlbnVtIENvbW1lbnRzQ29ubmVjdGlvbk9yZGVyYnlFbnVtIHtcbiAgLyoqIE9yZGVyIGJ5IGJyb3dzZXIgdXNlciBhZ2VudCBvZiB0aGUgY29tbWVudGVyLiAqL1xuICBDb21tZW50QWdlbnQgPSAnQ09NTUVOVF9BR0VOVCcsXG4gIC8qKiBPcmRlciBieSBhcHByb3ZhbCBzdGF0dXMgb2YgdGhlIGNvbW1lbnQuICovXG4gIENvbW1lbnRBcHByb3ZlZCA9ICdDT01NRU5UX0FQUFJPVkVEJyxcbiAgLyoqIE9yZGVyIGJ5IG5hbWUgb2YgdGhlIGNvbW1lbnQgYXV0aG9yLiAqL1xuICBDb21tZW50QXV0aG9yID0gJ0NPTU1FTlRfQVVUSE9SJyxcbiAgLyoqIE9yZGVyIGJ5IGUtbWFpbCBvZiB0aGUgY29tbWVudCBhdXRob3IuICovXG4gIENvbW1lbnRBdXRob3JFbWFpbCA9ICdDT01NRU5UX0FVVEhPUl9FTUFJTCcsXG4gIC8qKiBPcmRlciBieSBJUCBhZGRyZXNzIG9mIHRoZSBjb21tZW50IGF1dGhvci4gKi9cbiAgQ29tbWVudEF1dGhvcklwID0gJ0NPTU1FTlRfQVVUSE9SX0lQJyxcbiAgLyoqIE9yZGVyIGJ5IFVSTCBhZGRyZXNzIG9mIHRoZSBjb21tZW50IGF1dGhvci4gKi9cbiAgQ29tbWVudEF1dGhvclVybCA9ICdDT01NRU5UX0FVVEhPUl9VUkwnLFxuICAvKiogT3JkZXIgYnkgdGhlIGNvbW1lbnQgY29udGVudHMuICovXG4gIENvbW1lbnRDb250ZW50ID0gJ0NPTU1FTlRfQ09OVEVOVCcsXG4gIC8qKiBPcmRlciBieSBkYXRlL3RpbWUgdGltZXN0YW1wIG9mIHRoZSBjb21tZW50LiAqL1xuICBDb21tZW50RGF0ZSA9ICdDT01NRU5UX0RBVEUnLFxuICAvKiogT3JkZXIgYnkgR01UIHRpbWV6b25lIGRhdGUvdGltZSB0aW1lc3RhbXAgb2YgdGhlIGNvbW1lbnQuICovXG4gIENvbW1lbnREYXRlR210ID0gJ0NPTU1FTlRfREFURV9HTVQnLFxuICAvKiogT3JkZXIgYnkgdGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgY29tbWVudCBvYmplY3QgKi9cbiAgQ29tbWVudElkID0gJ0NPTU1FTlRfSUQnLFxuICAvKiogT3JkZXIgYnkgdGhlIGFycmF5IGxpc3Qgb2YgY29tbWVudCBJRHMgbGlzdGVkIGluIHRoZSB3aGVyZSBjbGF1c2UuICovXG4gIENvbW1lbnRJbiA9ICdDT01NRU5UX0lOJyxcbiAgLyoqIE9yZGVyIGJ5IHRoZSBjb21tZW50IGthcm1hIHNjb3JlLiAqL1xuICBDb21tZW50S2FybWEgPSAnQ09NTUVOVF9LQVJNQScsXG4gIC8qKiBPcmRlciBieSB0aGUgY29tbWVudCBwYXJlbnQgSUQuICovXG4gIENvbW1lbnRQYXJlbnQgPSAnQ09NTUVOVF9QQVJFTlQnLFxuICAvKiogT3JkZXIgYnkgdGhlIHBvc3Qgb2JqZWN0IElELiAqL1xuICBDb21tZW50UG9zdElkID0gJ0NPTU1FTlRfUE9TVF9JRCcsXG4gIC8qKiBPcmRlciBieSB0aGUgdGhlIHR5cGUgb2YgY29tbWVudCwgc3VjaCBhcyAnY29tbWVudCcsICdwaW5nYmFjaycsIG9yICd0cmFja2JhY2snLiAqL1xuICBDb21tZW50VHlwZSA9ICdDT01NRU5UX1RZUEUnLFxuICAvKiogT3JkZXIgYnkgdGhlIHVzZXIgSUQuICovXG4gIFVzZXJJZCA9ICdVU0VSX0lEJ1xufVxuXG4vKiogR3JhcGhRTCByZXByZXNlbnRhdGlvbiBvZiBXb3JkUHJlc3MgQ29uZGl0aW9uYWwgVGFncy4gKi9cbmV4cG9ydCB0eXBlIENvbmRpdGlvbmFsVGFncyA9IHtcbiAgX190eXBlbmFtZT86ICdDb25kaXRpb25hbFRhZ3MnO1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgYW4gZXhpc3RpbmcgYXJjaGl2ZSBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzQXJjaGl2ZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgYW4gZXhpc3RpbmcgYXR0YWNobWVudCBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzQXR0YWNobWVudD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgYW4gZXhpc3RpbmcgYXV0aG9yIGFyY2hpdmUgcGFnZS5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzXG4gICAqL1xuICBpc0F1dGhvcj86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgYW4gZXhpc3RpbmcgY2F0ZWdvcnkgYXJjaGl2ZSBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzQ2F0ZWdvcnk/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGFuIGV4aXN0aW5nIGRhdGUgYXJjaGl2ZS5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzXG4gICAqL1xuICBpc0RhdGU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGFuIGV4aXN0aW5nIGRheSBhcmNoaXZlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzRGF5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciB0aGUgZnJvbnQgcGFnZSBvZiB0aGUgc2l0ZS5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzXG4gICAqL1xuICBpc0Zyb250UGFnZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgdGhlIGJsb2cgaG9tZXBhZ2UuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlc1xuICAgKi9cbiAgaXNIb21lPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciBhbiBleGlzdGluZyBtb250aCBhcmNoaXZlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzTW9udGg/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGlzIHNpdGUgaGFzIG1vcmUgdGhhbiBvbmUgYXV0aG9yLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzTXVsdGlBdXRob3I/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGFuIGV4aXN0aW5nIHNpbmdsZSBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzUGFnZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIGN1cnJlbnRseSBpbiBhIHBhZ2UgdGVtcGxhdGUuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlc1xuICAgKi9cbiAgaXNQYWdlVGVtcGxhdGU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGFuIGV4aXN0aW5nIHBvc3QgdHlwZSBhcmNoaXZlIHBhZ2UuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlc1xuICAgKi9cbiAgaXNQb3N0VHlwZUFyY2hpdmU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGEgcG9zdCBvciBwYWdlIHByZXZpZXcuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlc1xuICAgKi9cbiAgaXNQcmV2aWV3PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciB0aGUgUHJpdmFjeSBQb2xpY3kgcGFnZS5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzXG4gICAqL1xuICBpc1ByaXZhY3lQb2xpY3k/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcXVlcnkgaXMgZm9yIGEgc2VhcmNoLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzU2VhcmNoPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciBhbiBleGlzdGluZyBzaW5nbGUgcG9zdC5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzXG4gICAqL1xuICBpc1NpbmdsZT86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBxdWVyeSBpcyBmb3IgYW4gZXhpc3Rpbmcgc2luZ2xlIHBvc3Qgb2YgYW55IHBvc3QgdHlwZSAocG9zdCwgYXR0YWNobWVudCwgcGFnZSwgY3VzdG9tIHBvc3QgdHlwZXMpLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzU2luZ3VsYXI/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIERldGVybWluZXMgd2hldGhlciBhIHBvc3QgaXMgc3RpY2t5LlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzU3RpY2t5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciBhbiBleGlzdGluZyB0YWcgYXJjaGl2ZSBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzVGFnPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciBhbiBleGlzdGluZyBjdXN0b20gdGF4b25vbXkgYXJjaGl2ZSBwYWdlLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXNcbiAgICovXG4gIGlzVGF4PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHF1ZXJ5IGlzIGZvciBhbiBleGlzdGluZyB5ZWFyIGFyY2hpdmUuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlc1xuICAgKi9cbiAgaXNZZWFyPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlICZxdW90O0NvbmZpZyZxdW90OyBGaWVsZCBHcm91cC4gQWRkZWQgdG8gdGhlIFNjaGVtYSBieSAmcXVvdDtXUEdyYXBoUUwgZm9yIEFDRiZxdW90Oy4gKi9cbmV4cG9ydCB0eXBlIENvbmZpZyA9IEFjZkZpZWxkR3JvdXAgJiBBY2ZGaWVsZEdyb3VwRmllbGRzICYgQ29uZmlnX0ZpZWxkcyAmIHtcbiAgX190eXBlbmFtZT86ICdDb25maWcnO1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O2ltYWdlJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtDb25maWcmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgYnJhbmRMb2dvPzogTWF5YmU8QWNmTWVkaWFJdGVtQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O3VybCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7Q29uZmlnJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YUxpbms/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O3RleHQmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0NvbmZpZyZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBjdGFUZXh0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBmaWVsZCBncm91cFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgX190eXBlbmFtZSBpbnN0ZWFkXG4gICAqL1xuICBmaWVsZEdyb3VwTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogSW50ZXJmYWNlIHJlcHJlc2VudGluZyBmaWVsZHMgb2YgdGhlIEFDRiAmcXVvdDtDb25maWcmcXVvdDsgRmllbGQgR3JvdXAgKi9cbmV4cG9ydCB0eXBlIENvbmZpZ19GaWVsZHMgPSB7XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7aW1hZ2UmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0NvbmZpZyZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBicmFuZExvZ28/OiBNYXliZTxBY2ZNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dXJsJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtDb25maWcmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgY3RhTGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7Q29uZmlnJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YVRleHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIHBsdXJhbCBjb25uZWN0aW9uIGZyb20gb25lIE5vZGUgVHlwZSBpbiB0aGUgR3JhcGggdG8gYW5vdGhlciBOb2RlIFR5cGUsIHdpdGggc3VwcG9ydCBmb3IgcmVsYXRpb25hbCBkYXRhIHZpYSAmcXVvdDtlZGdlcyZxdW90Oy4gKi9cbmV4cG9ydCB0eXBlIENvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBjb25uZWN0ZWQgbm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PEVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBub2RlcyAqL1xuICBub2RlczogQXJyYXk8Tm9kZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFBhZ2VJbmZvO1xufTtcblxuLyoqIE5vZGVzIHVzZWQgdG8gbWFuYWdlIGNvbnRlbnQgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlID0ge1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBDb250ZW50VHlwZSB0eXBlICovXG4gIGNvbnRlbnRUeXBlPzogTWF5YmU8Q29udGVudE5vZGVUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIENvbnRlbnQgVHlwZSB0aGUgbm9kZSBiZWxvbmdzIHRvICovXG4gIGNvbnRlbnRUeXBlTmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlIElEIG9mIHRoZSBub2RlIGluIHRoZSBkYXRhYmFzZS4gKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogUG9zdCBwdWJsaXNoaW5nIGRhdGUuICovXG4gIGRhdGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHB1Ymxpc2hpbmcgZGF0ZSBzZXQgaW4gR01ULiAqL1xuICBkYXRlR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBkZXNpcmVkIHNsdWcgb2YgdGhlIHBvc3QgKi9cbiAgZGVzaXJlZFNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogSWYgYSB1c2VyIGhhcyBlZGl0ZWQgdGhlIG5vZGUgd2l0aGluIHRoZSBwYXN0IDE1IHNlY29uZHMsIHRoaXMgd2lsbCByZXR1cm4gdGhlIHVzZXIgdGhhdCBsYXN0IGVkaXRlZC4gTnVsbCBpZiB0aGUgZWRpdCBsb2NrIGRvZXNuJiMwMzk7dCBleGlzdCBvciBpcyBncmVhdGVyIHRoYW4gMTUgc2Vjb25kcyAqL1xuICBlZGl0aW5nTG9ja2VkQnk/OiBNYXliZTxDb250ZW50Tm9kZVRvRWRpdExvY2tDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgUlNTIGVuY2xvc3VyZSBmb3IgdGhlIG9iamVjdCAqL1xuICBlbmNsb3N1cmU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxDb250ZW50Tm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU3R5bGVzaGVldCB0eXBlICovXG4gIGVucXVldWVkU3R5bGVzaGVldHM/OiBNYXliZTxDb250ZW50Tm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgZ2xvYmFsIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIHBvc3QuIFRoaXMgY3VycmVudGx5IG1hdGNoZXMgdGhlIHZhbHVlIHN0b3JlZCBpbiBXUF9Qb3N0LSZndDtndWlkIGFuZCB0aGUgZ3VpZCBjb2x1bW4gaW4gdGhlICZxdW90O3Bvc3Rfb2JqZWN0cyZxdW90OyBkYXRhYmFzZSB0YWJsZS4gKi9cbiAgZ3VpZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgbm9kZSBpbiB0aGUgcHJldmlldyBzdGF0ZSAqL1xuICBpc1ByZXZpZXc/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIFRlcm0gKi9cbiAgaXNUZXJtTm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSB1c2VyIHRoYXQgbW9zdCByZWNlbnRseSBlZGl0ZWQgdGhlIG5vZGUgKi9cbiAgbGFzdEVkaXRlZEJ5PzogTWF5YmU8Q29udGVudE5vZGVUb0VkaXRMYXN0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIHBlcm1hbGluayBvZiB0aGUgcG9zdCAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBsb2NhbCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZS4gKi9cbiAgbW9kaWZpZWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEdNVCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZSBpbiBHTVQuICovXG4gIG1vZGlmaWVkR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBpZCBvZiB0aGUgcHJldmlldyBub2RlICovXG4gIHByZXZpZXdSZXZpc2lvbkRhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgbm9kZSBpbiB0aGUgcHJldmlldyBzdGF0ZSAqL1xuICBwcmV2aWV3UmV2aXNpb25JZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1cmkgc2x1ZyBmb3IgdGhlIHBvc3QuIFRoaXMgaXMgZXF1aXZhbGVudCB0byB0aGUgV1BfUG9zdC0mZ3Q7cG9zdF9uYW1lIGZpZWxkIGFuZCB0aGUgcG9zdF9uYW1lIGNvbHVtbiBpbiB0aGUgZGF0YWJhc2UgZm9yIHRoZSAmcXVvdDtwb3N0X29iamVjdHMmcXVvdDsgdGFibGUuICovXG4gIHNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSBvYmplY3QgKi9cbiAgc3RhdHVzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB0ZW1wbGF0ZSBhc3NpZ25lZCB0byBhIG5vZGUgb2YgY29udGVudCAqL1xuICB0ZW1wbGF0ZT86IE1heWJlPENvbnRlbnRUZW1wbGF0ZT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSB1bmlxdWUgcmVzb3VyY2UgaWRlbnRpZmllciBwYXRoICovXG4gIHVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBOb2RlcyB1c2VkIHRvIG1hbmFnZSBjb250ZW50ICovXG5leHBvcnQgdHlwZSBDb250ZW50Tm9kZUVucXVldWVkU2NyaXB0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBOb2RlcyB1c2VkIHRvIG1hbmFnZSBjb250ZW50ICovXG5leHBvcnQgdHlwZSBDb250ZW50Tm9kZUVucXVldWVkU3R5bGVzaGVldHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gQ29udGVudE5vZGUgTm9kZXMgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlQ29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIENvbnRlbnRUeXBlIGFuZCBjb25uZWN0ZWQgQ29udGVudE5vZGUgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBDb250ZW50Tm9kZSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudE5vZGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDb250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBDb250ZW50Tm9kZSAqL1xuZXhwb3J0IHR5cGUgQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgQ29udGVudE5vZGUgTm9kZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBDb250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgVHlwZSBvZiBJZGVudGlmaWVyIHVzZWQgdG8gZmV0Y2ggYSBzaW5nbGUgcmVzb3VyY2UuIERlZmF1bHQgaXMgSUQuICovXG5leHBvcnQgZW51bSBDb250ZW50Tm9kZUlkVHlwZUVudW0ge1xuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgRGF0YWJhc2UgSUQuICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgKGhhc2hlZCkgR2xvYmFsIElELiAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSBVUkkuICovXG4gIFVyaSA9ICdVUkknXG59XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBDb250ZW50VHlwZSB0eXBlICovXG5leHBvcnQgdHlwZSBDb250ZW50Tm9kZVRvQ29udGVudFR5cGVDb25uZWN0aW9uRWRnZSA9IENvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2UgJiBFZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbnRlbnROb2RlVG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBDb250ZW50VHlwZTtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBVc2VyIHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FZGl0TGFzdENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIFVzZXJDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdDb250ZW50Tm9kZVRvRWRpdExhc3RDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogVXNlcjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBVc2VyIHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FZGl0TG9ja0Nvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIFVzZXJDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdDb250ZW50Tm9kZVRvRWRpdExvY2tDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdGltZXN0YW1wIGZvciB3aGVuIHRoZSBub2RlIHdhcyBsYXN0IGVkaXRlZCAqL1xuICBsb2NrVGltZXN0YW1wPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBVc2VyO1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU2NyaXB0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBDb250ZW50Tm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PENvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PEVucXVldWVkU2NyaXB0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogQ29udGVudE5vZGVUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBDb250ZW50Tm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBFbnF1ZXVlZFNjcmlwdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O0NvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyA9IEVucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBDb250ZW50Tm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxDb250ZW50Tm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8RW5xdWV1ZWRTdHlsZXNoZWV0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogQ29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgQ29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ0NvbnRlbnROb2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogRW5xdWV1ZWRTdHlsZXNoZWV0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Q29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIENvbnRlbnROb2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gPSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlIHRlbXBsYXRlIGFzc2lnbmVkIHRvIGEgbm9kZSBvZiBjb250ZW50ICovXG5leHBvcnQgdHlwZSBDb250ZW50VGVtcGxhdGUgPSB7XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGVtcGxhdGUgKi9cbiAgdGVtcGxhdGVOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBbiBQb3N0IFR5cGUgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZSA9IE5vZGUgJiBVbmlmb3JtUmVzb3VyY2VJZGVudGlmaWFibGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudFR5cGUnO1xuICAvKiogV2hldGhlciB0aGlzIGNvbnRlbnQgdHlwZSBzaG91bGQgY2FuIGJlIGV4cG9ydGVkLiAqL1xuICBjYW5FeHBvcnQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlcyAqL1xuICBjb25kaXRpb25hbFRhZ3M/OiBNYXliZTxDb25kaXRpb25hbFRhZ3M+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50VHlwZSB0eXBlIGFuZCB0aGUgVGF4b25vbXkgdHlwZSAqL1xuICBjb25uZWN0ZWRUYXhvbm9taWVzPzogTWF5YmU8Q29udGVudFR5cGVUb1RheG9ub215Q29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnRUeXBlIHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG4gIGNvbnRlbnROb2Rlcz86IE1heWJlPENvbnRlbnRUeXBlVG9Db250ZW50Tm9kZUNvbm5lY3Rpb24+O1xuICAvKiogV2hldGhlciBjb250ZW50IG9mIHRoaXMgdHlwZSBzaG91bGQgYmUgZGVsZXRlZCB3aGVuIHRoZSBhdXRob3Igb2YgaXQgaXMgZGVsZXRlZCBmcm9tIHRoZSBzeXN0ZW0uICovXG4gIGRlbGV0ZVdpdGhVc2VyPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBEZXNjcmlwdGlvbiBvZiB0aGUgY29udGVudCB0eXBlLiAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIGV4Y2x1ZGUgbm9kZXMgb2YgdGhpcyBjb250ZW50IHR5cGUgZnJvbSBmcm9udCBlbmQgc2VhcmNoIHJlc3VsdHMuICovXG4gIGV4Y2x1ZGVGcm9tU2VhcmNoPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGx1cmFsIG5hbWUgb2YgdGhlIGNvbnRlbnQgdHlwZSB3aXRoaW4gdGhlIEdyYXBoUUwgU2NoZW1hLiAqL1xuICBncmFwaHFsUGx1cmFsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgc2luZ3VsYXIgbmFtZSBvZiB0aGUgY29udGVudCB0eXBlIHdpdGhpbiB0aGUgR3JhcGhRTCBTY2hlbWEuICovXG4gIGdyYXBocWxTaW5nbGVOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhpcyBjb250ZW50IHR5cGUgc2hvdWxkIGhhdmUgYXJjaGl2ZXMuIENvbnRlbnQgYXJjaGl2ZXMgYXJlIGdlbmVyYXRlZCBieSB0eXBlIGFuZCBieSBkYXRlLiAqL1xuICBoYXNBcmNoaXZlPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBjb250ZW50IHR5cGUgaXMgaGllcmFyY2hpY2FsLCBmb3IgZXhhbXBsZSBwYWdlcy4gKi9cbiAgaGllcmFyY2hpY2FsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIHBvc3QtdHlwZSBvYmplY3QuICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhpcyBwYWdlIGlzIHNldCB0byB0aGUgc3RhdGljIGZyb250IHBhZ2UuICovXG4gIGlzRnJvbnRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGlzIHBhZ2UgaXMgc2V0IHRvIHRoZSBibG9nIHBvc3RzIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgVGVybSAqL1xuICBpc1Rlcm1Ob2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogRGlzcGxheSBuYW1lIG9mIHRoZSBjb250ZW50IHR5cGUuICovXG4gIGxhYmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIERldGFpbHMgYWJvdXQgdGhlIGNvbnRlbnQgdHlwZSBsYWJlbHMuICovXG4gIGxhYmVscz86IE1heWJlPFBvc3RUeXBlTGFiZWxEZXRhaWxzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBpY29uIGZpbGUgdG8gZGlzcGxheSBhcyBhIG1lbnUgaWNvbi4gKi9cbiAgbWVudUljb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBvc2l0aW9uIG9mIHRoaXMgcG9zdCB0eXBlIGluIHRoZSBtZW51LiBPbmx5IGFwcGxpZXMgaWYgc2hvd19pbl9tZW51IGlzIHRydWUuICovXG4gIG1lbnVQb3NpdGlvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaW50ZXJuYWwgbmFtZSBvZiB0aGUgcG9zdCB0eXBlLiBUaGlzIHNob3VsZCBub3QgYmUgdXNlZCBmb3IgZGlzcGxheSBwdXJwb3Nlcy4gKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIGEgY29udGVudCB0eXBlIGlzIGludGVuZGVkIGZvciB1c2UgcHVibGljbHkgZWl0aGVyIHZpYSB0aGUgYWRtaW4gaW50ZXJmYWNlIG9yIGJ5IGZyb250LWVuZCB1c2Vycy4gV2hpbGUgdGhlIGRlZmF1bHQgc2V0dGluZ3Mgb2YgZXhjbHVkZV9mcm9tX3NlYXJjaCwgcHVibGljbHlfcXVlcnlhYmxlLCBzaG93X3VpLCBhbmQgc2hvd19pbl9uYXZfbWVudXMgYXJlIGluaGVyaXRlZCBmcm9tIHB1YmxpYywgZWFjaCBkb2VzIG5vdCByZWx5IG9uIHRoaXMgcmVsYXRpb25zaGlwIGFuZCBjb250cm9scyBhIHZlcnkgc3BlY2lmaWMgaW50ZW50aW9uLiAqL1xuICBwdWJsaWM/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgcXVlcmllcyBjYW4gYmUgcGVyZm9ybWVkIG9uIHRoZSBmcm9udCBlbmQgZm9yIHRoZSBjb250ZW50IHR5cGUgYXMgcGFydCBvZiBwYXJzZV9yZXF1ZXN0KCkuICovXG4gIHB1YmxpY2x5UXVlcnlhYmxlPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBOYW1lIG9mIGNvbnRlbnQgdHlwZSB0byBkaXNwbGF5IGluIFJFU1QgQVBJICZxdW90O3dwL3YyJnF1b3Q7IG5hbWVzcGFjZS4gKi9cbiAgcmVzdEJhc2U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIFJFU1QgQ29udHJvbGxlciBjbGFzcyBhc3NpZ25lZCB0byBoYW5kbGluZyB0aGlzIGNvbnRlbnQgdHlwZS4gKi9cbiAgcmVzdENvbnRyb2xsZXJDbGFzcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBNYWtlcyB0aGlzIGNvbnRlbnQgdHlwZSBhdmFpbGFibGUgdmlhIHRoZSBhZG1pbiBiYXIuICovXG4gIHNob3dJbkFkbWluQmFyPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIGFkZCB0aGUgY29udGVudCB0eXBlIHRvIHRoZSBHcmFwaFFMIFNjaGVtYS4gKi9cbiAgc2hvd0luR3JhcGhxbD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hlcmUgdG8gc2hvdyB0aGUgY29udGVudCB0eXBlIGluIHRoZSBhZG1pbiBtZW51LiBUbyB3b3JrLCAkc2hvd191aSBtdXN0IGJlIHRydWUuIElmIHRydWUsIHRoZSBwb3N0IHR5cGUgaXMgc2hvd24gaW4gaXRzIG93biB0b3AgbGV2ZWwgbWVudS4gSWYgZmFsc2UsIG5vIG1lbnUgaXMgc2hvd24uIElmIGEgc3RyaW5nIG9mIGFuIGV4aXN0aW5nIHRvcCBsZXZlbCBtZW51IChlZy4gJnF1b3Q7dG9vbHMucGhwJnF1b3Q7IG9yICZxdW90O2VkaXQucGhwP3Bvc3RfdHlwZT1wYWdlJnF1b3Q7KSwgdGhlIHBvc3QgdHlwZSB3aWxsIGJlIHBsYWNlZCBhcyBhIHN1Yi1tZW51IG9mIHRoYXQuICovXG4gIHNob3dJbk1lbnU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIE1ha2VzIHRoaXMgY29udGVudCB0eXBlIGF2YWlsYWJsZSBmb3Igc2VsZWN0aW9uIGluIG5hdmlnYXRpb24gbWVudXMuICovXG4gIHNob3dJbk5hdk1lbnVzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBjb250ZW50IHR5cGUgaXMgYXNzb2NpYXRlZCB3aXRoIGEgcm91dGUgdW5kZXIgdGhlIHRoZSBSRVNUIEFQSSAmcXVvdDt3cC92MiZxdW90OyBuYW1lc3BhY2UuICovXG4gIHNob3dJblJlc3Q/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gZ2VuZXJhdGUgYW5kIGFsbG93IGEgVUkgZm9yIG1hbmFnaW5nIHRoaXMgY29udGVudCB0eXBlIGluIHRoZSBhZG1pbi4gKi9cbiAgc2hvd1VpPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSB1bmlxdWUgcmVzb3VyY2UgaWRlbnRpZmllciBwYXRoICovXG4gIHVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBBbiBQb3N0IFR5cGUgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZUNvbm5lY3RlZFRheG9ub21pZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogQW4gUG9zdCBUeXBlIG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVDb250ZW50Tm9kZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Q29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBDb250ZW50VHlwZSBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgQ29udGVudFR5cGUgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PENvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBDb250ZW50VHlwZSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudFR5cGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDb250ZW50VHlwZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBDb250ZW50VHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgQ29udGVudFR5cGUgTm9kZSAqL1xuICBub2RlOiBDb250ZW50VHlwZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBDb250ZW50VHlwZUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBbGxvd2VkIENvbnRlbnQgVHlwZXMgKi9cbmV4cG9ydCBlbnVtIENvbnRlbnRUeXBlRW51bSB7XG4gIC8qKiBUaGUgVHlwZSBvZiBDb250ZW50IG9iamVjdCAqL1xuICBBdHRhY2htZW50ID0gJ0FUVEFDSE1FTlQnLFxuICAvKiogVGhlIFR5cGUgb2YgQ29udGVudCBvYmplY3QgKi9cbiAgUGFnZSA9ICdQQUdFJyxcbiAgLyoqIFRoZSBUeXBlIG9mIENvbnRlbnQgb2JqZWN0ICovXG4gIFBvc3QgPSAnUE9TVCdcbn1cblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSBDb250ZW50IFR5cGUgbm9kZS4gVG8gYmUgdXNlZCBhbG9uZyB3aXRoIHRoZSBcImlkXCIgZmllbGQuIERlZmF1bHQgaXMgXCJJRFwiLiAqL1xuZXhwb3J0IGVudW0gQ29udGVudFR5cGVJZFR5cGVFbnVtIHtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgKi9cbiAgSWQgPSAnSUQnLFxuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNvbnRlbnQgdHlwZS4gKi9cbiAgTmFtZSA9ICdOQU1FJ1xufVxuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50VHlwZSB0eXBlIGFuZCB0aGUgQ29udGVudE5vZGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBDb250ZW50Tm9kZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIENvbnRlbnRUeXBlVG9Db250ZW50Tm9kZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Q29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudE5vZGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBDb250ZW50VHlwZVRvQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIENvbnRlbnRUeXBlVG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbnRlbnROb2RlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Q29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvID0gQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgQ29udGVudFR5cGVUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZVRvQ29udGVudE5vZGVDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIFR5cGVzIG9mIGNvbnRlbnQgdG8gZmlsdGVyICovXG4gIGNvbnRlbnRUeXBlcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnRUeXBlIHR5cGUgYW5kIHRoZSBUYXhvbm9teSB0eXBlICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFRheG9ub215Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgQ29udGVudFR5cGVUb1RheG9ub215Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxUYXhvbm9teT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IENvbnRlbnRUeXBlVG9UYXhvbm9teUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgQ29udGVudFR5cGVUb1RheG9ub215Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVGF4b25vbXlDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogVGF4b25vbXk7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFRheG9ub215Q29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdDb250ZW50VHlwZVRvVGF4b25vbXlDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFsbG93ZWQgQ29udGVudCBUeXBlcyBvZiB0aGUgQ2F0ZWdvcnkgdGF4b25vbXkuICovXG5leHBvcnQgZW51bSBDb250ZW50VHlwZXNPZkNhdGVnb3J5RW51bSB7XG4gIC8qKiBUaGUgVHlwZSBvZiBDb250ZW50IG9iamVjdCAqL1xuICBQb3N0ID0gJ1BPU1QnXG59XG5cbi8qKiBBbGxvd2VkIENvbnRlbnQgVHlwZXMgb2YgdGhlIFBvc3RGb3JtYXQgdGF4b25vbXkuICovXG5leHBvcnQgZW51bSBDb250ZW50VHlwZXNPZlBvc3RGb3JtYXRFbnVtIHtcbiAgLyoqIFRoZSBUeXBlIG9mIENvbnRlbnQgb2JqZWN0ICovXG4gIFBvc3QgPSAnUE9TVCdcbn1cblxuLyoqIEFsbG93ZWQgQ29udGVudCBUeXBlcyBvZiB0aGUgVGFnIHRheG9ub215LiAqL1xuZXhwb3J0IGVudW0gQ29udGVudFR5cGVzT2ZUYWdFbnVtIHtcbiAgLyoqIFRoZSBUeXBlIG9mIENvbnRlbnQgb2JqZWN0ICovXG4gIFBvc3QgPSAnUE9TVCdcbn1cblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUFyY2hpdmVzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUFyY2hpdmVzJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUFyY2hpdmVzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVBcmNoaXZlc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUFyY2hpdmVzIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVBcmNoaXZlc0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUFyY2hpdmVzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBcmNoaXZlc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXJjaGl2ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtkaXNwbGF5QXNEcm9wZG93biZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUFyY2hpdmVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlBc0Ryb3Bkb3duOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBcmNoaXZlc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUFyY2hpdmVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXJjaGl2ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBcmNoaXZlc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c2hvd0xhYmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXJjaGl2ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd0xhYmVsOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dQb3N0Q291bnRzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXJjaGl2ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd1Bvc3RDb3VudHM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBcmNoaXZlc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dHlwZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUFyY2hpdmVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVBdWRpbyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUF1ZGlvJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUF1ZGlvIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVBdWRpb0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUF1ZGlvIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVBdWRpb0F0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQXVkaW9BdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthdXRvcGxheSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGF1dG9wbGF5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2FwdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNhcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aWQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBdWRpb0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXVkaW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9vcCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvb3A/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtwcmVsb2FkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXVkaW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcHJlbG9hZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3JjJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXVkaW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3JjPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF1ZGlvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVBdmF0YXIgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQXZhdGFyJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUF2YXRhciBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQXZhdGFyQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQXZhdGFyIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVBdmF0YXJBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVBdmF0YXJBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVBdmF0YXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lzTGluayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc0xpbms6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGlua1RhcmdldCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaXplOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUF2YXRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dXNlcklkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQXZhdGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVzZXJJZD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVCbG9jayA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVCbG9jayc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVCbG9jayBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQmxvY2tBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVCbG9jayBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQmxvY2tBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVCbG9ja0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCbG9ja0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50OiBTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJsb2NrQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQmxvY2tBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JlZiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJsb2NrQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHJlZj86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVCdXR0b24gPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVCdXR0b24nO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQnV0dG9uIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVCdXR0b25BdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVCdXR0b24gQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUJ1dHRvbkF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQnV0dG9uQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Nzc0NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjc3NDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rQ2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxpbmtDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGlua1RhcmdldD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cGxhY2Vob2xkZXImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcGxhY2Vob2xkZXI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0YWdOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRhZ05hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0QWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RpdGxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0eXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHR5cGU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt1cmwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVCdXR0b25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVCdXR0b25zID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQnV0dG9ucyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVCdXR0b25zIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVCdXR0b25zQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQnV0dG9ucyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQnV0dG9uc0F0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQnV0dG9uc0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Nzc0NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY3NzQ2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUJ1dHRvbnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQnV0dG9uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ2FsZW5kYXIgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ2FsZW5kYXInO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ2FsZW5kYXIgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUNhbGVuZGFyQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ2FsZW5kYXIgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNhbGVuZGFyQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ2FsZW5kYXJBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYWxlbmRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ2FsZW5kYXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYWxlbmRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttb250aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1vbnRoPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhbGVuZGFyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYWxlbmRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3llYXImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYWxlbmRhckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB5ZWFyPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDYXRlZ29yaWVzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNhdGVnb3JpZXMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ2F0ZWdvcmllcyBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ2F0ZWdvcmllc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNhdGVnb3JpZXMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNhdGVnb3JpZXNBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheUFzRHJvcGRvd24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlBc0Ryb3Bkb3duOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ2F0ZWdvcmllc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNhdGVnb3JpZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzaG93RW1wdHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dFbXB0eTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzaG93SGllcmFyY2h5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ2F0ZWdvcmllc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93SGllcmFyY2h5OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dPbmx5VG9wTGV2ZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dPbmx5VG9wTGV2ZWw6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c2hvd1Bvc3RDb3VudHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDYXRlZ29yaWVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dQb3N0Q291bnRzOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ2F0ZWdvcmllc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ29kZSA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvZGUnO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29kZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29kZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvZGUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvZGVBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvZGVBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtib3JkZXJDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29kZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjc3NDbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNzc0NsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvZGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29kZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ29sdW1uID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29sdW1uJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbHVtbiBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29sdW1uQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29sdW1uIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb2x1bW5BdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbHVtbkF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsbG93ZWRCbG9ja3MmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxsb3dlZEJsb2Nrcz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc0FycmF5J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtib3JkZXJDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBib3JkZXJDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y3NzQ2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNzc0NsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYXlvdXQ/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt2ZXJ0aWNhbEFsaWdubWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB2ZXJ0aWNhbEFsaWdubWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7d2lkdGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgd2lkdGg/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbHVtbnMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb2x1bW5zJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbHVtbnMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUNvbHVtbnNBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb2x1bW5zIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb2x1bW5zQXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb2x1bW5zQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y3NzQ2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjc3NDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc1N0YWNrZWRPbk1vYmlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbHVtbnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNTdGFja2VkT25Nb2JpbGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYXlvdXQ/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dmVydGljYWxBbGlnbm1lbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHZlcnRpY2FsQWxpZ25tZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50QXV0aG9yTmFtZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50QXV0aG9yTmFtZSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50QXV0aG9yTmFtZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50QXV0aG9yTmFtZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50QXV0aG9yTmFtZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNMaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNMaW5rOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50Q29udGVudCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50Q29udGVudCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50Q29udGVudCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50Q29udGVudCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50Q29udGVudEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50Q29udGVudEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50Q29udGVudEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50RGF0ZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50RGF0ZSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50RGF0ZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50RGF0ZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50RGF0ZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnREYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9ybWF0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9ybWF0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnREYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc0xpbmsmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc0xpbms6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnREYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnREYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudEVkaXRMaW5rID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRFZGl0TGluayc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50RWRpdExpbmsgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUNvbW1lbnRFZGl0TGlua0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRFZGl0TGluayBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudEVkaXRMaW5rQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudEVkaXRMaW5rQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEVkaXRMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEVkaXRMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRFZGl0TGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRFZGl0TGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RWRpdExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RWRpdExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGlua1RhcmdldDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RWRpdExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RWRpdExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudEVkaXRMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50RWRpdExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50UmVwbHlMaW5rID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRSZXBseUxpbmsnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudFJlcGx5TGluayBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudFJlcGx5TGlua0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRSZXBseUxpbmsgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50UmVwbHlMaW5rQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudFJlcGx5TGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudFJlcGx5TGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudFJlcGx5TGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50UmVwbHlMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRSZXBseUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50VGVtcGxhdGUgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudFRlbXBsYXRlJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRUZW1wbGF0ZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudFRlbXBsYXRlQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudFRlbXBsYXRlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50VGVtcGxhdGVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50VGVtcGxhdGVBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudFRlbXBsYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50VGVtcGxhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbW1lbnRzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRzJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVDb21tZW50c0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRzIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50c0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsZWdhY3kmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsZWdhY3k6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RhZ05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0YWdOYW1lOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50c1BhZ2luYXRpb24gPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRzUGFnaW5hdGlvbiBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudHNQYWdpbmF0aW9uQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50c1BhZ2luYXRpb25BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1BhZ2luYXRpb25BdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYXlvdXQ/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3BhZ2luYXRpb25BcnJvdyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBwYWdpbmF0aW9uQXJyb3c6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uTmV4dCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0JztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHQgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0QXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xhYmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYWJlbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbW1lbnRzUGFnaW5hdGlvbk51bWJlcnMgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVycyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVycyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRzUGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXMgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xhYmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1BhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzUGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVDb21tZW50c1RpdGxlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRzVGl0bGUnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlQ29tbWVudHNUaXRsZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ29tbWVudHNUaXRsZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUNvbW1lbnRzVGl0bGUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xldmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ29tbWVudHNUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsZXZlbDogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzaG93Q29tbWVudHNDb3VudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd0NvbW1lbnRzQ291bnQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c2hvd1Bvc3RUaXRsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd1Bvc3RUaXRsZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvbW1lbnRzVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb21tZW50c1RpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlQ292ZXIgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVDb3Zlcic7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb3ZlciBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlQ292ZXJBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVDb3ZlciBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlQ292ZXJBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUNvdmVyQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YWxsb3dlZEJsb2NrcyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsbG93ZWRCbG9ja3M/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNBcnJheSddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YWx0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWx0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZFR5cGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kVHlwZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2JvcmRlckNvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29udGVudFBvc2l0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY29udGVudFBvc2l0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjdXN0b21HcmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGN1c3RvbUdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjdXN0b21PdmVybGF5Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjdXN0b21PdmVybGF5Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2RpbVJhdGlvJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGltUmF0aW86IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2ZvY2FsUG9pbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb2NhbFBvaW50PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aGFzUGFyYWxsYXgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBoYXNQYXJhbGxheDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlkPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lzRGFyayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzRGFyazogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpc1JlcGVhdGVkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlQ292ZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNSZXBlYXRlZDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpc1VzZXJPdmVybGF5Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc1VzZXJPdmVybGF5Q29sb3I/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYXlvdXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYXlvdXQ/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttaW5IZWlnaHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtaW5IZWlnaHQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWluSGVpZ2h0VW5pdCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1pbkhlaWdodFVuaXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O292ZXJsYXlDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG92ZXJsYXlDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGFnTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRhZ05hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVDb3ZlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3VybCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dXNlRmVhdHVyZWRJbWFnZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUNvdmVyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVzZUZlYXR1cmVkSW1hZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlRGV0YWlscyA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVEZXRhaWxzJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZURldGFpbHMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZURldGFpbHNBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVEZXRhaWxzIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVEZXRhaWxzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlRGV0YWlsc0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JvcmRlckNvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBib3JkZXJDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYXlvdXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxheW91dD86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZURldGFpbHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzaG93Q29udGVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZURldGFpbHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd0NvbnRlbnQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdW1tYXJ5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRGV0YWlsc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdW1tYXJ5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVEZXRhaWxzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlRW1iZWQgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlRW1iZWQnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlRW1iZWQgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUVtYmVkQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlRW1iZWQgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUVtYmVkQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlRW1iZWRBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUVtYmVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthbGxvd1Jlc3BvbnNpdmUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVFbWJlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGxvd1Jlc3BvbnNpdmU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7Y2FwdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUVtYmVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNhcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUVtYmVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUVtYmVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRW1iZWRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3ByZXZpZXdhYmxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRW1iZWRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcHJldmlld2FibGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7cHJvdmlkZXJOYW1lU2x1ZyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUVtYmVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHByb3ZpZGVyTmFtZVNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Jlc3BvbnNpdmUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVFbWJlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZXNwb25zaXZlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRW1iZWRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3R5cGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVFbWJlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt1cmwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVFbWJlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB1cmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUZpbGUgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVGaWxlJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUZpbGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUZpbGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVGaWxlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVGaWxlQXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVGaWxlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Rpc3BsYXlQcmV2aWV3JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaXNwbGF5UHJldmlldz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Rvd25sb2FkQnV0dG9uVGV4dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUZpbGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZG93bmxvYWRCdXR0b25UZXh0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmaWxlSWQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZpbGVJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZmlsZU5hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZpbGVOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUZpbGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2hyZWYmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhyZWY/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUZpbGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3ByZXZpZXdIZWlnaHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGaWxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHByZXZpZXdIZWlnaHQ6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dEb3dubG9hZEJ1dHRvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUZpbGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd0Rvd25sb2FkQnV0dG9uOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dExpbmtIcmVmJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0TGlua0hyZWY/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRMaW5rVGFyZ2V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRmlsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0TGlua1RhcmdldD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlRm9vdG5vdGVzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUZvb3Rub3Rlcyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVGb290bm90ZXMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUZvb3Rub3Rlc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUZvb3Rub3RlcyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlRm9vdG5vdGVzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlRm9vdG5vdGVzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRm9vdG5vdGVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUZvb3Rub3Rlc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRm9vdG5vdGVzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGb290bm90ZXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVGcmVlZm9ybSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVGcmVlZm9ybSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVGcmVlZm9ybSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlRnJlZWZvcm1BdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVGcmVlZm9ybSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlRnJlZWZvcm1BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVGcmVlZm9ybUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGcmVlZm9ybUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlRnJlZWZvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVGcmVlZm9ybUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlR2FsbGVyeSA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUdhbGxlcnknO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlR2FsbGVyeSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlR2FsbGVyeUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUdhbGxlcnkgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUdhbGxlcnlBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUdhbGxlcnlBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2FsbG93UmVzaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGxvd1Jlc2l6ZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2FwdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2FwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbHVtbnMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNvbHVtbnM/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zml4ZWRIZWlnaHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZpeGVkSGVpZ2h0OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aWRzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZHM6IEFycmF5PE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPj47XG4gIC8qKiBUaGUgJnF1b3Q7aW1hZ2VDcm9wJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZUNyb3A6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7aW1hZ2VzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZXM6IEFycmF5PE1heWJlPENvcmVHYWxsZXJ5QXR0cmlidXRlc0ltYWdlcz4+O1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rVGFyZ2V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rVG8mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxpbmtUbz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtyYW5kb21PcmRlciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmFuZG9tT3JkZXI6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c2hvcnRDb2RlVHJhbnNmb3JtcyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvcnRDb2RlVHJhbnNmb3JtczogQXJyYXk8TWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPj47XG4gIC8qKiBUaGUgJnF1b3Q7c2l6ZVNsdWcmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNpemVTbHVnOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzSW1hZ2VzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG5leHBvcnQgdHlwZSBDb3JlR2FsbGVyeUF0dHJpYnV0ZXNJbWFnZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUdhbGxlcnlBdHRyaWJ1dGVzSW1hZ2VzJztcbiAgLyoqIFRoZSAmcXVvdDthbHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHYWxsZXJ5QXR0cmlidXRlc0ltYWdlcyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgYWx0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7Y2FwdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzSW1hZ2VzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBjYXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmdWxsVXJsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXNJbWFnZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGZ1bGxVcmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXNJbWFnZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGlkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR2FsbGVyeUF0dHJpYnV0ZXNJbWFnZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGxpbms/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3VybCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdhbGxlcnlBdHRyaWJ1dGVzSW1hZ2VzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICB1cmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUdyb3VwID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlR3JvdXAnO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlR3JvdXAgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUdyb3VwQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlR3JvdXAgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUdyb3VwQXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVHcm91cEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2FsbG93ZWRCbG9ja3MmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGxvd2VkQmxvY2tzPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzQXJyYXknXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdyb3VwQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBib3JkZXJDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlR3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGFnTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUdyb3VwQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRhZ05hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVHcm91cEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUhlYWRpbmcgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVIZWFkaW5nJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUhlYWRpbmcgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUhlYWRpbmdBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVIZWFkaW5nIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVIZWFkaW5nQXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVIZWFkaW5nQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNvbnRlbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Nzc0NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUhlYWRpbmdBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY3NzQ2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUhlYWRpbmdBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGV2ZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxldmVsOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUhlYWRpbmdBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3BsYWNlaG9sZGVyJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBwbGFjZWhvbGRlcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIZWFkaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSGVhZGluZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUhvbWVMaW5rID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUhvbWVMaW5rJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUhvbWVMaW5rIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVIb21lTGlua0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUhvbWVMaW5rIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVIb21lTGlua0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUhvbWVMaW5rQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSG9tZUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSG9tZUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIb21lTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGFiZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVIb21lTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYWJlbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUhvbWVMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSG9tZUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSG9tZUxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUh0bWwgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlSHRtbCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVIdG1sIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVIdG1sQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlSHRtbCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlSHRtbEF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUh0bWxBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSHRtbEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSHRtbEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUh0bWxBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUltYWdlID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlSW1hZ2UnO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlSW1hZ2UgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUltYWdlQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIE1lZGlhIERldGFpbHMgb2YgdGhlIENvcmVJbWFnZSBCbG9jayBUeXBlICovXG4gIG1lZGlhRGV0YWlscz86IE1heWJlPE1lZGlhRGV0YWlscz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUltYWdlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVJbWFnZUF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlSW1hZ2VBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthbHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbHQ6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthc3BlY3RSYXRpbyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFzcGVjdFJhdGlvPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtib3JkZXJDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjYXB0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2FwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjc3NDbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjc3NDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2hlaWdodCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhlaWdodD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aHJlZiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhyZWY/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGlnaHRib3gmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaWdodGJveD86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGlua0NsYXNzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGlua0NsYXNzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rRGVzdGluYXRpb24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rRGVzdGluYXRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzY2FsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNjYWxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzaXplU2x1ZyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNpemVTbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzcmMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzcmM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RpdGxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3VybCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7d2lkdGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlTGF0ZXN0Q29tbWVudHMgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlTGF0ZXN0Q29tbWVudHMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTGF0ZXN0Q29tbWVudHMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUxhdGVzdENvbW1lbnRzQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTGF0ZXN0Q29tbWVudHMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUxhdGVzdENvbW1lbnRzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdENvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbW1lbnRzVG9TaG93JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY29tbWVudHNUb1Nob3c6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2Rpc3BsYXlBdmF0YXImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaXNwbGF5QXZhdGFyOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2Rpc3BsYXlEYXRlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheURhdGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheUV4Y2VycHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaXNwbGF5RXhjZXJwdDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdENvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUxhdGVzdFBvc3RzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUxhdGVzdFBvc3RzJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxhdGVzdFBvc3RzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxhdGVzdFBvc3RzIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWRkTGlua1RvRmVhdHVyZWRJbWFnZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFkZExpbmtUb0ZlYXR1cmVkSW1hZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjYXRlZ29yaWVzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2F0ZWdvcmllcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbHVtbnMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb2x1bW5zOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtkaXNwbGF5QXV0aG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheUF1dGhvcjogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtkaXNwbGF5RmVhdHVyZWRJbWFnZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlGZWF0dXJlZEltYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2Rpc3BsYXlQb3N0Q29udGVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlQb3N0Q29udGVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtkaXNwbGF5UG9zdENvbnRlbnRSYWRpbyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlQb3N0Q29udGVudFJhZGlvOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheVBvc3REYXRlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheVBvc3REYXRlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2V4Y2VycHRMZW5ndGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBleGNlcnB0TGVuZ3RoOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtmZWF0dXJlZEltYWdlQWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmZWF0dXJlZEltYWdlQWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZlYXR1cmVkSW1hZ2VTaXplSGVpZ2h0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZmVhdHVyZWRJbWFnZVNpemVIZWlnaHQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZmVhdHVyZWRJbWFnZVNpemVTbHVnJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZmVhdHVyZWRJbWFnZVNpemVTbHVnOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZmVhdHVyZWRJbWFnZVNpemVXaWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZlYXR1cmVkSW1hZ2VTaXplV2lkdGg/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtvcmRlciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9yZGVyOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7b3JkZXJCeSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxhdGVzdFBvc3RzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9yZGVyQnk6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtwb3N0TGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcG9zdExheW91dDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Bvc3RzVG9TaG93JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcG9zdHNUb1Nob3c6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3NlbGVjdGVkQXV0aG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2VsZWN0ZWRBdXRob3I/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMYXRlc3RQb3N0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGF0ZXN0UG9zdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMZWdhY3lXaWRnZXQgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlTGVnYWN5V2lkZ2V0JztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxlZ2FjeVdpZGdldCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlTGVnYWN5V2lkZ2V0QXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTGVnYWN5V2lkZ2V0IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMZWdhY3lXaWRnZXRBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVMZWdhY3lXaWRnZXRBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtpZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxlZ2FjeVdpZGdldEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aWRCYXNlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGVnYWN5V2lkZ2V0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlkQmFzZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aW5zdGFuY2UmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMZWdhY3lXaWRnZXRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaW5zdGFuY2U/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMZWdhY3lXaWRnZXRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMZWdhY3lXaWRnZXRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUxpc3QgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVMaXN0JztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxpc3QgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZUxpc3RBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVMaXN0IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMaXN0QXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVMaXN0QXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjc3NDbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMaXN0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNzc0NsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMaXN0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMaXN0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7b3JkZXJlZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgb3JkZXJlZDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtwbGFjZWhvbGRlciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcGxhY2Vob2xkZXI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JldmVyc2VkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZXZlcnNlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0YXJ0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdGFydD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0eXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt2YWx1ZXMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMaXN0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHZhbHVlczogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZUxpc3RJdGVtID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUxpc3RJdGVtJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxpc3RJdGVtIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVMaXN0SXRlbUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZUxpc3RJdGVtIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMaXN0SXRlbUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZUxpc3RJdGVtQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEl0ZW1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEl0ZW1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY29udGVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTGlzdEl0ZW1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMaXN0SXRlbUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtwbGFjZWhvbGRlciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHBsYWNlaG9sZGVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVMb2dpbm91dCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVMb2dpbm91dCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVMb2dpbm91dCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlTG9naW5vdXRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVMb2dpbm91dCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlTG9naW5vdXRBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVMb2dpbm91dEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxvZ2lub3V0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheUxvZ2luQXNGb3JtJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTG9naW5vdXRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheUxvZ2luQXNGb3JtOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMb2dpbm91dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxvZ2lub3V0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTG9naW5vdXRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMb2dpbm91dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cmVkaXJlY3RUb0N1cnJlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVMb2dpbm91dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZWRpcmVjdFRvQ3VycmVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZUxvZ2lub3V0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVNZWRpYVRleHQgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVNZWRpYVRleHQnO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTWVkaWFUZXh0IEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVNZWRpYVRleHRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVNZWRpYVRleHQgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ246IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDthbGxvd2VkQmxvY2tzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsbG93ZWRCbG9ja3M/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNBcnJheSddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9jYWxQb2ludCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb2NhbFBvaW50PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aHJlZiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBocmVmPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpbWFnZUZpbGwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaW1hZ2VGaWxsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNTdGFja2VkT25Nb2JpbGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNTdGFja2VkT25Nb2JpbGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGlua0NsYXNzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxpbmtDbGFzcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGlua0Rlc3RpbmF0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxpbmtEZXN0aW5hdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGlua1RhcmdldCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21lZGlhQWx0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1lZGlhQWx0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bWVkaWFJZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZWRpYUlkPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21lZGlhTGluayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZWRpYUxpbms/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21lZGlhUG9zaXRpb24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWVkaWFQb3NpdGlvbjogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O21lZGlhU2l6ZVNsdWcmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWVkaWFTaXplU2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWVkaWFUeXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1lZGlhVHlwZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWVkaWFVcmwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWVkaWFVcmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21lZGlhV2lkdGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWVkaWFXaWR0aDogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1lZGlhVGV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt1c2VGZWF0dXJlZEltYWdlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWVkaWFUZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVzZUZlYXR1cmVkSW1hZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7dmVydGljYWxBbGlnbm1lbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNZWRpYVRleHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdmVydGljYWxBbGlnbm1lbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZU1pc3NpbmcgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlTWlzc2luZyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVNaXNzaW5nIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVNaXNzaW5nQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTWlzc2luZyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlTWlzc2luZ0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZU1pc3NpbmdBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTWlzc2luZ0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1pc3NpbmdBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O29yaWdpbmFsQ29udGVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1pc3NpbmdBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgb3JpZ2luYWxDb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtvcmlnaW5hbE5hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNaXNzaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9yaWdpbmFsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7b3JpZ2luYWxVbmRlbGltaXRlZENvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNaXNzaW5nQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9yaWdpbmFsVW5kZWxpbWl0ZWRDb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVNb3JlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZU1vcmUnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTW9yZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlTW9yZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZU1vcmUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZU1vcmVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVNb3JlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y3VzdG9tVGV4dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY3VzdG9tVGV4dDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTW9yZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bm9UZWFzZXImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG5vVGVhc2VyOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZU5hdmlnYXRpb24gPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlTmF2aWdhdGlvbic7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVOYXZpZ2F0aW9uIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlTmF2aWdhdGlvbiBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y3VzdG9tQmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjdXN0b21CYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2N1c3RvbU92ZXJsYXlCYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGN1c3RvbU92ZXJsYXlCYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2N1c3RvbU92ZXJsYXlUZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGN1c3RvbU92ZXJsYXlUZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2N1c3RvbVRleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY3VzdG9tVGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2hhc0ljb24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhhc0ljb246IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7aWNvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaWNvbjogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttYXhOZXN0aW5nTGV2ZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1heE5lc3RpbmdMZXZlbDogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtvcGVuU3VibWVudXNPbkNsaWNrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBvcGVuU3VibWVudXNPbkNsaWNrOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O292ZXJsYXlCYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG92ZXJsYXlCYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O292ZXJsYXlNZW51JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBvdmVybGF5TWVudTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O292ZXJsYXlUZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG92ZXJsYXlUZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JlZiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmVmPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JnYkJhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmdiQmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtyZ2JUZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHJnYlRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c2hvd1N1Ym1lbnVJY29uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93U3VibWVudUljb246IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7X191bnN0YWJsZUxvY2F0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB1bnN0YWJsZUxvY2F0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVOYXZpZ2F0aW9uTGluayA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVOYXZpZ2F0aW9uTGluayc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVOYXZpZ2F0aW9uTGluayBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVOYXZpZ2F0aW9uTGluayBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVOYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGVzY3JpcHRpb24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaWQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNUb3BMZXZlbExpbmsmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc1RvcExldmVsTGluaz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2tpbmQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBraW5kPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYWJlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxhYmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7b3BlbnNJbk5ld1RhYiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9wZW5zSW5OZXdUYWI6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7cmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0aXRsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0eXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdHlwZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dXJsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVOYXZpZ2F0aW9uU3VibWVudSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVOYXZpZ2F0aW9uU3VibWVudSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVOYXZpZ2F0aW9uU3VibWVudSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlTmF2aWdhdGlvblN1Ym1lbnVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVOYXZpZ2F0aW9uU3VibWVudSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlTmF2aWdhdGlvblN1Ym1lbnVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25TdWJtZW51QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGVzY3JpcHRpb24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aWQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc1RvcExldmVsSXRlbSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25TdWJtZW51QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzVG9wTGV2ZWxJdGVtPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7a2luZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25TdWJtZW51QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGtpbmQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xhYmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvblN1Ym1lbnVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5hdmlnYXRpb25TdWJtZW51QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtvcGVuc0luTmV3VGFiJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvblN1Ym1lbnVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgb3BlbnNJbk5ld1RhYjogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtyZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICByZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RpdGxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmF2aWdhdGlvblN1Ym1lbnVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3R5cGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt1cmwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVOYXZpZ2F0aW9uU3VibWVudUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB1cmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZU5leHRwYWdlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZU5leHRwYWdlJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZU5leHRwYWdlIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVOZXh0cGFnZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZU5leHRwYWdlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVOZXh0cGFnZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZU5leHRwYWdlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZU5leHRwYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlTmV4dHBhZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBhZ2VMaXN0ID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBhZ2VMaXN0JztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBhZ2VMaXN0IEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQYWdlTGlzdEF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBhZ2VMaXN0IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQYWdlTGlzdEF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBhZ2VMaXN0QXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYWdlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNOZXN0ZWQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYWdlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc05lc3RlZDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYWdlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cGFyZW50UGFnZUlEJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcGFyZW50UGFnZUlEOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYWdlTGlzdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUGFnZUxpc3RJdGVtID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBhZ2VMaXN0SXRlbSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQYWdlTGlzdEl0ZW0gQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBhZ2VMaXN0SXRlbUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBhZ2VMaXN0SXRlbSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUGFnZUxpc3RJdGVtQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUGFnZUxpc3RJdGVtQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aGFzQ2hpbGRyZW4mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYWdlTGlzdEl0ZW1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaGFzQ2hpbGRyZW4/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhZ2VMaXN0SXRlbUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpZD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYWJlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhZ2VMaXN0SXRlbUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsYWJlbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGluayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhZ2VMaXN0SXRlbUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFnZUxpc3RJdGVtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0aXRsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhZ2VMaXN0SXRlbUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0aXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUGFyYWdyYXBoID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUGFyYWdyYXBoJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBhcmFncmFwaCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUGFyYWdyYXBoQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUGFyYWdyYXBoIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBhcmFncmFwaEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFyYWdyYXBoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFyYWdyYXBoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNvbnRlbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Nzc0NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhcmFncmFwaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjc3NDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2RpcmVjdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhcmFncmFwaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaXJlY3Rpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Ryb3BDYXAmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZHJvcENhcDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFyYWdyYXBoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFyYWdyYXBoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhcmFncmFwaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhcmFncmFwaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhcmFncmFwaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cGxhY2Vob2xkZXImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcGxhY2Vob2xkZXI/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGFyYWdyYXBoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXJhZ3JhcGhBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQYXR0ZXJuID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBhdHRlcm4nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUGF0dGVybiBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUGF0dGVybkF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBhdHRlcm4gQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBhdHRlcm5BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQYXR0ZXJuQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGF0dGVybkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQYXR0ZXJuQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUGF0dGVybkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c2x1ZyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBhdHRlcm5BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdEF1dGhvciA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0QXV0aG9yJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RBdXRob3IgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3RBdXRob3JBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0QXV0aG9yIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdEF1dGhvckF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2F2YXRhclNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGF2YXRhclNpemU6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtieWxpbmUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJ5bGluZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc0xpbmsmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzTGluazogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rVGFyZ2V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzaG93QXZhdGFyJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93QXZhdGFyOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dCaW8mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dCaW8/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdEF1dGhvckJpb2dyYXBoeSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5JztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RBdXRob3JCaW9ncmFwaHkgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3RBdXRob3JCaW9ncmFwaHlBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdEF1dGhvckJpb2dyYXBoeUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JCaW9ncmFwaHlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JCaW9ncmFwaHlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JCaW9ncmFwaHlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckJpb2dyYXBoeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yQmlvZ3JhcGh5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvckJpb2dyYXBoeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RBdXRob3JOYW1lID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RBdXRob3JOYW1lJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RBdXRob3JOYW1lIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RBdXRob3JOYW1lIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RBdXRob3JOYW1lQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc0xpbmsmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpc0xpbms6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGlua1RhcmdldCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RBdXRob3JOYW1lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxpbmtUYXJnZXQ6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEF1dGhvck5hbWVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0QXV0aG9yTmFtZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RDb21tZW50cyA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0Q29tbWVudHMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdENvbW1lbnRzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0Q29tbWVudHMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RDb21tZW50c0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RDb21tZW50c0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbW1lbnRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0Q29tbWVudHNGb3JtID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RDb21tZW50c0Zvcm0nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdENvbW1lbnRzRm9ybSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUG9zdENvbW1lbnRzRm9ybUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RDb21tZW50c0Zvcm0gQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0Q29tbWVudHNGb3JtQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbW1lbnRzRm9ybUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbW1lbnRzRm9ybUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNGb3JtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb21tZW50c0Zvcm1BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29tbWVudHNGb3JtQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdENvbnRlbnQgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdENvbnRlbnQnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdENvbnRlbnQgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdENvbnRlbnQgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RDb250ZW50QXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdENvbnRlbnRBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0Q29udGVudEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxheW91dD86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdENvbnRlbnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RDb250ZW50QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdERhdGUgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdERhdGUnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdERhdGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3REYXRlQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdERhdGUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3REYXRlQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdERhdGVBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3REYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheVR5cGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaXNwbGF5VHlwZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3REYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb3JtYXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb3JtYXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2lzTGluayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3REYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzTGluazogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdERhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RFeGNlcnB0ID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RFeGNlcnB0JztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RFeGNlcnB0IEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RFeGNlcnB0IEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RFeGNlcnB0QXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2V4Y2VycHRMZW5ndGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBleGNlcnB0TGVuZ3RoOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RFeGNlcnB0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21vcmVUZXh0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbW9yZVRleHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Nob3dNb3JlT25OZXdMaW5lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd01vcmVPbk5ld0xpbmU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEV4Y2VycHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RXhjZXJwdEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RGZWF0dXJlZEltYWdlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RGZWF0dXJlZEltYWdlJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RGZWF0dXJlZEltYWdlIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RGZWF0dXJlZEltYWdlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YXNwZWN0UmF0aW8mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhc3BlY3RSYXRpbz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBib3JkZXJDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjdXN0b21HcmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGN1c3RvbUdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjdXN0b21PdmVybGF5Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjdXN0b21PdmVybGF5Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2RpbVJhdGlvJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGltUmF0aW86IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2hlaWdodCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhlaWdodD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNMaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNMaW5rOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O292ZXJsYXlDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG92ZXJsYXlDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmVsOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c2NhbGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0RmVhdHVyZWRJbWFnZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzY2FsZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3NpemVTbHVnJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2l6ZVNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdEZlYXR1cmVkSW1hZ2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3VzZUZpcnN0SW1hZ2VGcm9tUG9zdCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVzZUZpcnN0SW1hZ2VGcm9tUG9zdDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RGZWF0dXJlZEltYWdlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHdpZHRoPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0TmF2aWdhdGlvbkxpbmsgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdE5hdmlnYXRpb25MaW5rJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3ROYXZpZ2F0aW9uTGluayBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUG9zdE5hdmlnYXRpb25MaW5rQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdE5hdmlnYXRpb25MaW5rIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthcnJvdyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3ROYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhcnJvdzogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3ROYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3ROYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xhYmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdE5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxhYmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsaW5rTGFiZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGlua0xhYmVsOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Nob3dUaXRsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3ROYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93VGl0bGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0TmF2aWdhdGlvbkxpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RheG9ub215JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdE5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRheG9ub215OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdE5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdE5hdmlnYXRpb25MaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dHlwZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3ROYXZpZ2F0aW9uTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdFRlbXBsYXRlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RUZW1wbGF0ZSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0VGVtcGxhdGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3RUZW1wbGF0ZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RUZW1wbGF0ZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVtcGxhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVtcGxhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVtcGxhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYXlvdXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVtcGxhdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZW1wbGF0ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlbXBsYXRlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdFRlcm1zID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RUZXJtcyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0VGVybXMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVBvc3RUZXJtcyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUG9zdFRlcm1zQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUG9zdFRlcm1zQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlcm1zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlcm1zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVybXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVybXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVybXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3ByZWZpeCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBwcmVmaXg6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzZXBhcmF0b3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVybXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2VwYXJhdG9yOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGVybXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N1ZmZpeCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdWZmaXg6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDt0ZXJtJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRlcm1zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRlcm0/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0QWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUZXJtc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RUaXRsZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0VGl0bGUnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUG9zdFRpdGxlIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQb3N0VGl0bGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQb3N0VGl0bGUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNMaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzTGluazogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsZXZlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsZXZlbDogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGlua1RhcmdldCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVBvc3RUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cmVsJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHJlbDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUG9zdFRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQb3N0VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVQcmVmb3JtYXR0ZWQgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQcmVmb3JtYXR0ZWQnO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUHJlZm9ybWF0dGVkIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVQcmVmb3JtYXR0ZWRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQcmVmb3JtYXR0ZWQgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUHJlZm9ybWF0dGVkQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHJlZm9ybWF0dGVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHJlZm9ybWF0dGVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29udGVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHJlZm9ybWF0dGVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHJlZm9ybWF0dGVkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQcmVmb3JtYXR0ZWRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVByZWZvcm1hdHRlZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVB1bGxxdW90ZSA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVB1bGxxdW90ZSc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVQdWxscXVvdGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVB1bGxxdW90ZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVQdWxscXVvdGVBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQdWxscXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9yZGVyQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NpdGF0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNpdGF0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQdWxscXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVQdWxscXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0QWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVB1bGxxdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3ZhbHVlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUHVsbHF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHZhbHVlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdWVyeSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVRdWVyeSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUXVlcnlBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVRdWVyeSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUXVlcnlBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZW5oYW5jZWRQYWdpbmF0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZW5oYW5jZWRQYWdpbmF0aW9uOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xheW91dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxheW91dD86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O25hbWVzcGFjZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG5hbWVzcGFjZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cXVlcnkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBxdWVyeTogU2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3F1ZXJ5SWQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBxdWVyeUlkPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RhZ05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0YWdOYW1lOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUXVlcnlOb1Jlc3VsdHMgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUXVlcnlOb1Jlc3VsdHMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUXVlcnlOb1Jlc3VsdHMgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUXVlcnlOb1Jlc3VsdHMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUXVlcnlOb1Jlc3VsdHNBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeU5vUmVzdWx0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlOb1Jlc3VsdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlOb1Jlc3VsdHNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeU5vUmVzdWx0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5Tm9SZXN1bHRzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeU5vUmVzdWx0c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5UGFnaW5hdGlvbiA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVBhZ2luYXRpb24nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUXVlcnlQYWdpbmF0aW9uIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVRdWVyeVBhZ2luYXRpb25BdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVRdWVyeVBhZ2luYXRpb24gQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxheW91dD86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cGFnaW5hdGlvbkFycm93JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHBhZ2luYXRpb25BcnJvdzogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dMYWJlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93TGFiZWw6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5UGFnaW5hdGlvbk5leHQgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVRdWVyeVBhZ2luYXRpb25OZXh0IEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5UGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYWJlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbk5leHRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTmV4dEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdWVyeVBhZ2luYXRpb25OdW1iZXJzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnMnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVycyBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnMgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVBhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25OdW1iZXJzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttaWRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uTnVtYmVyc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtaWRTaXplOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvbk51bWJlcnNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsYWJlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5UGFnaW5hdGlvblByZXZpb3VzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxhYmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlQYWdpbmF0aW9uUHJldmlvdXNBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91c0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUXVlcnlUaXRsZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVRpdGxlJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1ZXJ5VGl0bGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVF1ZXJ5VGl0bGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVRdWVyeVRpdGxlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdWVyeVRpdGxlQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGV2ZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxldmVsOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Nob3dQcmVmaXgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dQcmVmaXg6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c2hvd1NlYXJjaFRlcm0mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdWVyeVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNob3dTZWFyY2hUZXJtOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0QWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1ZXJ5VGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0eXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVlcnlUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdW90ZSA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVF1b3RlJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1b3RlIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVRdW90ZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVF1b3RlIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVRdW90ZUF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlUXVvdGVBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NpdGF0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2l0YXRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVF1b3RlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y3NzQ2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY3NzQ2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVRdW90ZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3ZhbHVlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUXVvdGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdmFsdWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVSZWFkTW9yZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVSZWFkTW9yZSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVSZWFkTW9yZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVSZWFkTW9yZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVSZWFkTW9yZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJlYWRNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJhY2tncm91bmRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Ym9yZGVyQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVSZWFkTW9yZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBib3JkZXJDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY29udGVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJlYWRNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVSZWFkTW9yZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJlYWRNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUmVhZE1vcmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJlYWRNb3JlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRDb2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlUnNzID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVJzcyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVSc3MgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVJzc0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVJzcyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlUnNzQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlUnNzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVSc3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Jsb2NrTGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUnNzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJsb2NrTGF5b3V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUnNzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29sdW1ucyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJzc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb2x1bW5zOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtkaXNwbGF5QXV0aG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUnNzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpc3BsYXlBdXRob3I6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheURhdGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVSc3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheURhdGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZGlzcGxheUV4Y2VycHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVSc3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZGlzcGxheUV4Y2VycHQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7ZXhjZXJwdExlbmd0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJzc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBleGNlcnB0TGVuZ3RoOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtmZWVkVVJMJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlUnNzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZlZWRVUkw6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpdGVtc1RvU2hvdyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJzc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpdGVtc1RvU2hvdzogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJzc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVJzc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlU2VhcmNoID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNlYXJjaCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTZWFyY2ggQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVNlYXJjaEF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVNlYXJjaCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlU2VhcmNoQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlU2VhcmNoQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlYXJjaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JvcmRlckNvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VhcmNoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtidXR0b25Qb3NpdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlYXJjaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBidXR0b25Qb3NpdGlvbjogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2J1dHRvblRleHQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYnV0dG9uVGV4dD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YnV0dG9uVXNlSWNvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlYXJjaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBidXR0b25Vc2VJY29uOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlYXJjaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VhcmNoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpc1NlYXJjaEZpZWxkSGlkZGVuJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VhcmNoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzU2VhcmNoRmllbGRIaWRkZW46IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGFiZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3BsYWNlaG9sZGVyJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VhcmNoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHBsYWNlaG9sZGVyOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7cXVlcnkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcXVlcnk6IFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzaG93TGFiZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvd0xhYmVsOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VhcmNoQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlYXJjaEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aFVuaXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZWFyY2hBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgd2lkdGhVbml0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVTZXBhcmF0b3IgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTZXBhcmF0b3InO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlU2VwYXJhdG9yIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVTZXBhcmF0b3JBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTZXBhcmF0b3IgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNlcGFyYXRvckF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlU2VwYXJhdG9yQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTZXBhcmF0b3JBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlcGFyYXRvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlcGFyYXRvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2Nzc0NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlcGFyYXRvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjc3NDbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VwYXJhdG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VwYXJhdG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VwYXJhdG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtvcGFjaXR5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2VwYXJhdG9yQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG9wYWNpdHk6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNlcGFyYXRvckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlU2hvcnRjb2RlID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNob3J0Y29kZSc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTaG9ydGNvZGUgQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVNob3J0Y29kZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVNob3J0Y29kZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlU2hvcnRjb2RlQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlU2hvcnRjb2RlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNob3J0Y29kZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNob3J0Y29kZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNob3J0Y29kZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVTaXRlTG9nbyA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTaXRlTG9nbyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTaXRlTG9nbyBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTaXRlTG9nbyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTaXRlTG9nb0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVMb2dvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNMaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaXNMaW5rOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xpbmtUYXJnZXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlTG9nb0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVMb2dvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Nob3VsZFN5bmNJY29uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZUxvZ29BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2hvdWxkU3luY0ljb24/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVMb2dvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVMb2dvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHdpZHRoPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNpdGVUYWdsaW5lID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNpdGVUYWdsaW5lJztcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVNpdGVUYWdsaW5lIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVNpdGVUYWdsaW5lIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNpdGVUYWdsaW5lQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRhZ2xpbmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250RmFtaWx5PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUYWdsaW5lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUYWdsaW5lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGdyYWRpZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsZXZlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUYWdsaW5lQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxldmVsOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRhZ2xpbmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dEFsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRhZ2xpbmVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGFnbGluZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNpdGVUaXRsZSA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTaXRlVGl0bGUnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlU2l0ZVRpdGxlIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVTaXRlVGl0bGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTaXRlVGl0bGUgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtiYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRTaXplJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRTaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtncmFkaWVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aXNMaW5rJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU2l0ZVRpdGxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlzTGluazogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtsZXZlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsZXZlbDogU2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bGlua1RhcmdldCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsaW5rVGFyZ2V0OiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTaXRlVGl0bGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0QWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNpdGVUaXRsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0ZXh0Q29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNvY2lhbExpbmsgPSBFZGl0b3JCbG9jayAmIFBhZ2VFZGl0b3JCbG9jayAmIFBvc3RFZGl0b3JCbG9jayAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlU29jaWFsTGluayc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTb2NpYWxMaW5rIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVTb2NpYWxMaW5rQXR0cmlidXRlcz47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBibG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlU29jaWFsTGluayBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlU29jaWFsTGlua0F0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNvY2lhbExpbmtBdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGFiZWwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxhYmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNvY2lhbExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3JlbCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNvY2lhbExpbmtBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcmVsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzZXJ2aWNlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzZXJ2aWNlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt1cmwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlU29jaWFsTGlua3MgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTb2NpYWxMaW5rcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTb2NpYWxMaW5rcyBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTb2NpYWxMaW5rcyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVNvY2lhbExpbmtzQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2N1c3RvbUljb25CYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjdXN0b21JY29uQmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjdXN0b21JY29uQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjdXN0b21JY29uQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2dyYWRpZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZ3JhZGllbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ljb25CYWNrZ3JvdW5kQ29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpY29uQmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpY29uQmFja2dyb3VuZENvbG9yVmFsdWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpY29uQmFja2dyb3VuZENvbG9yVmFsdWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ljb25Db2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNvY2lhbExpbmtzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGljb25Db2xvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aWNvbkNvbG9yVmFsdWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpY29uQ29sb3JWYWx1ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bGF5b3V0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbGF5b3V0PzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7b3BlbkluTmV3VGFiJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU29jaWFsTGlua3NBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgb3BlbkluTmV3VGFiOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dMYWJlbHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93TGFiZWxzOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3NpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTb2NpYWxMaW5rc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaXplPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdHlsZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNvY2lhbExpbmtzQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVTcGFjZXIgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVTcGFjZXInO1xuICAvKiogVGhlIGFuY2hvciBmaWVsZCBmb3IgdGhlIGJsb2NrLiAqL1xuICBhbmNob3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlU3BhY2VyIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVTcGFjZXJBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVTcGFjZXIgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVNwYWNlckF0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlU3BhY2VyQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU3BhY2VyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aGVpZ2h0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU3BhY2VyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGhlaWdodDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTcGFjZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVTcGFjZXJBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlU3BhY2VyQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVNwYWNlckF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlVGFibGUgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUYWJsZSc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUYWJsZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlVGFibGVBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUYWJsZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlVGFibGVBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVRhYmxlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtib2R5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYm9keTogQXJyYXk8TWF5YmU8Q29yZVRhYmxlQXR0cmlidXRlc0JvZHk+PjtcbiAgLyoqIFRoZSAmcXVvdDtib3JkZXJDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjYXB0aW9uJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2FwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2xhc3NOYW1lJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgY2xhc3NOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9vdCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvb3Q6IEFycmF5PE1heWJlPENvcmVUYWJsZUF0dHJpYnV0ZXNGb290Pj47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7aGFzRml4ZWRMYXlvdXQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBoYXNGaXhlZExheW91dDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtoZWFkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgaGVhZDogQXJyYXk8TWF5YmU8Q29yZVRhYmxlQXR0cmlidXRlc0hlYWQ+PjtcbiAgLyoqIFRoZSAmcXVvdDtsb2NrJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0JvZHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG5leHBvcnQgdHlwZSBDb3JlVGFibGVBdHRyaWJ1dGVzQm9keSA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlVGFibGVBdHRyaWJ1dGVzQm9keSc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2VsbHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNCb2R5JnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBjZWxsczogQXJyYXk8TWF5YmU8Q29yZVRhYmxlQXR0cmlidXRlc0JvZHlDZWxscz4+O1xufTtcblxuLyoqIFRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzQm9keUNlbGxzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzQm9keSZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbmV4cG9ydCB0eXBlIENvcmVUYWJsZUF0dHJpYnV0ZXNCb2R5Q2VsbHMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVRhYmxlQXR0cmlidXRlc0JvZHlDZWxscyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNCb2R5Q2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb2xzcGFuJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzQm9keUNlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBjb2xzcGFuPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjb250ZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzQm9keUNlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtyb3dzcGFuJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzQm9keUNlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICByb3dzcGFuPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzY29wZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0JvZHlDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgc2NvcGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RhZyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0JvZHlDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgdGFnOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG59O1xuXG4vKiogVGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNGb290JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgQ29yZVRhYmxlQXR0cmlidXRlc0Zvb3QgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVRhYmxlQXR0cmlidXRlc0Zvb3QnO1xuICAvKiogVGhlICZxdW90O2NlbGxzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzRm9vdCZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgY2VsbHM6IEFycmF5PE1heWJlPENvcmVUYWJsZUF0dHJpYnV0ZXNGb290Q2VsbHM+Pjtcbn07XG5cbi8qKiBUaGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0Zvb3RDZWxscyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0Zvb3QmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG5leHBvcnQgdHlwZSBDb3JlVGFibGVBdHRyaWJ1dGVzRm9vdENlbGxzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUYWJsZUF0dHJpYnV0ZXNGb290Q2VsbHMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzRm9vdENlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBhbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29sc3BhbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0Zvb3RDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgY29sc3Bhbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29udGVudCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0Zvb3RDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgY29udGVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cm93c3BhbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0Zvb3RDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgcm93c3Bhbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c2NvcGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNGb290Q2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIHNjb3BlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0YWcmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNGb290Q2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIHRhZzogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xufTtcblxuLyoqIFRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzSGVhZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlcyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbmV4cG9ydCB0eXBlIENvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkJztcbiAgLyoqIFRoZSAmcXVvdDtjZWxscyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0hlYWQmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGNlbGxzOiBBcnJheTxNYXliZTxDb3JlVGFibGVBdHRyaWJ1dGVzSGVhZENlbGxzPj47XG59O1xuXG4vKiogVGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkQ2VsbHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgQ29yZVRhYmxlQXR0cmlidXRlc0hlYWRDZWxscyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlVGFibGVBdHRyaWJ1dGVzSGVhZENlbGxzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhYmxlQXR0cmlidXRlc0hlYWRDZWxscyZxdW90OyBibG9jayBhdHRyaWJ1dGUgZmllbGQgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbHNwYW4mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkQ2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGNvbHNwYW4/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkQ2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIGNvbnRlbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Jvd3NwYW4mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWJsZUF0dHJpYnV0ZXNIZWFkQ2VsbHMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG4gIHJvd3NwYW4/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3Njb3BlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzSGVhZENlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBzY29wZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGFnJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFibGVBdHRyaWJ1dGVzSGVhZENlbGxzJnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICB0YWc6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVUYWdDbG91ZCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUYWdDbG91ZCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUYWdDbG91ZCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlVGFnQ2xvdWRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUYWdDbG91ZCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlVGFnQ2xvdWRBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGFnQ2xvdWRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhZ0Nsb3VkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udEZhbWlseSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhZ0Nsb3VkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGZvbnRGYW1pbHk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xhcmdlc3RGb250U2l6ZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhZ0Nsb3VkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxhcmdlc3RGb250U2l6ZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRhZ0Nsb3VkQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtudW1iZXJPZlRhZ3MmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBudW1iZXJPZlRhZ3M6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3Nob3dUYWdDb3VudHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzaG93VGFnQ291bnRzOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3NtYWxsZXN0Rm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzbWFsbGVzdEZvbnRTaXplOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGF4b25vbXkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUYWdDbG91ZEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0YXhvbm9teTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xufTtcblxuLyoqIEEgYmxvY2sgdXNlZCBmb3IgZWRpdGluZyB0aGUgc2l0ZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVRlbXBsYXRlUGFydCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUZW1wbGF0ZVBhcnQnO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBDb3JlVGVtcGxhdGVQYXJ0IEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVUZW1wbGF0ZVBhcnRBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUZW1wbGF0ZVBhcnQgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgQ29yZVRlbXBsYXRlUGFydEF0dHJpYnV0ZXMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVRlbXBsYXRlUGFydEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2FsaWduJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGVtcGxhdGVQYXJ0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthcmVhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGVtcGxhdGVQYXJ0QXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFyZWE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRlbXBsYXRlUGFydEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZW1wbGF0ZVBhcnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZW1wbGF0ZVBhcnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3NsdWcmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZW1wbGF0ZVBhcnRBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGFnTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRlbXBsYXRlUGFydEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0YWdOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0aGVtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRlbXBsYXRlUGFydEF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0aGVtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlVGVybURlc2NyaXB0aW9uID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVRlcm1EZXNjcmlwdGlvbic7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUZXJtRGVzY3JpcHRpb24gQmxvY2sgVHlwZSAqL1xuICBhdHRyaWJ1dGVzPzogTWF5YmU8Q29yZVRlcm1EZXNjcmlwdGlvbkF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVRlcm1EZXNjcmlwdGlvbiBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlVGVybURlc2NyaXB0aW9uQXR0cmlidXRlcyA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlVGVybURlc2NyaXB0aW9uQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYWxpZ24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRlcm1EZXNjcmlwdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRlcm1EZXNjcmlwdGlvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ZvbnRGYW1pbHkmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udFNpemU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9jaz86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bWV0YWRhdGEmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVGVybURlc2NyaXB0aW9uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0QWxpZ24mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dEFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0ZXh0Q29sb3ImcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXJtRGVzY3JpcHRpb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVUZXh0Q29sdW1ucyA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUZXh0Q29sdW1ucyc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUZXh0Q29sdW1ucyBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlVGV4dENvbHVtbnNBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVUZXh0Q29sdW1ucyBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlVGV4dENvbHVtbnNBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVUZXh0Q29sdW1uc0F0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRleHRDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29sdW1ucyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRleHRDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNvbHVtbnM6IFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXh0Q29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50OiBBcnJheTxNYXliZTxDb3JlVGV4dENvbHVtbnNBdHRyaWJ1dGVzQ29udGVudD4+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXh0Q29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDttZXRhZGF0YSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRleHRDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIG1ldGFkYXRhPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt3aWR0aCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVRleHRDb2x1bW5zQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHdpZHRoPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgJnF1b3Q7Q29yZVRleHRDb2x1bW5zQXR0cmlidXRlc0NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXh0Q29sdW1uc0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgYXR0cmlidXRlIGZpZWxkICovXG5leHBvcnQgdHlwZSBDb3JlVGV4dENvbHVtbnNBdHRyaWJ1dGVzQ29udGVudCA9IHtcbiAgX190eXBlbmFtZT86ICdDb3JlVGV4dENvbHVtbnNBdHRyaWJ1dGVzQ29udGVudCc7XG4gIC8qKiBUaGUgJnF1b3Q7Y2hpbGRyZW4mcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVUZXh0Q29sdW1uc0F0dHJpYnV0ZXNDb250ZW50JnF1b3Q7IGJsb2NrIGF0dHJpYnV0ZSBmaWVsZCAqL1xuICBjaGlsZHJlbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQSBibG9jayB1c2VkIGZvciBlZGl0aW5nIHRoZSBzaXRlICovXG5leHBvcnQgdHlwZSBDb3JlVmVyc2UgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVWZXJzZSc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVWZXJzZSBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlVmVyc2VBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVWZXJzZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlVmVyc2VBdHRyaWJ1dGVzID0gQmxvY2tXaXRoU3VwcG9ydHNBbmNob3IgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVZlcnNlQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgYW5jaG9yIGZpZWxkIGZvciB0aGUgYmxvY2suICovXG4gIGFuY2hvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7YmFja2dyb3VuZENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmVyc2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtib3JkZXJDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZlcnNlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGJvcmRlckNvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWZXJzZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjbGFzc05hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NvbnRlbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWZXJzZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtmb250RmFtaWx5JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmVyc2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgZm9udEZhbWlseT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Zm9udFNpemUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWZXJzZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBmb250U2l6ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Z3JhZGllbnQmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWZXJzZUF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBncmFkaWVudD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZlcnNlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmVyc2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3N0eWxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmVyc2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgc3R5bGU/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RleHRBbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZlcnNlQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHRleHRBbGlnbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dGV4dENvbG9yJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmVyc2VBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVWaWRlbyA9IEJsb2NrV2l0aFN1cHBvcnRzQW5jaG9yICYgRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnQ29yZVZpZGVvJztcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVZpZGVvIEJsb2NrIFR5cGUgKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPENvcmVWaWRlb0F0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgQ29yZVZpZGVvIEJsb2NrIFR5cGUgKi9cbmV4cG9ydCB0eXBlIENvcmVWaWRlb0F0dHJpYnV0ZXMgPSBCbG9ja1dpdGhTdXBwb3J0c0FuY2hvciAmIHtcbiAgX190eXBlbmFtZT86ICdDb3JlVmlkZW9BdHRyaWJ1dGVzJztcbiAgLyoqIFRoZSAmcXVvdDthbGlnbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGFsaWduPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBhbmNob3IgZmllbGQgZm9yIHRoZSBibG9jay4gKi9cbiAgYW5jaG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDthdXRvcGxheSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGF1dG9wbGF5PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y2FwdGlvbiZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNhcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7Y29udHJvbHMmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWaWRlb0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBjb250cm9sczogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpZCZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGlkPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWaWRlb0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBsb2NrPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtsb29wJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbG9vcD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O211dGVkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbXV0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtwbGF5c0lubGluZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHBsYXlzSW5saW5lPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7cG9zdGVyJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcG9zdGVyPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtwcmVsb2FkJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgcHJlbG9hZDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3NyYyZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVZpZGVvQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHNyYz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O0NvcmVWaWRlb0F0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBzdHlsZT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7dHJhY2tzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlVmlkZW9BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdHJhY2tzOiBBcnJheTxNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+Pjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIENvcmVXaWRnZXRHcm91cCA9IEVkaXRvckJsb2NrICYgUGFnZUVkaXRvckJsb2NrICYgUG9zdEVkaXRvckJsb2NrICYge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVXaWRnZXRHcm91cCc7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVXaWRnZXRHcm91cCBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxDb3JlV2lkZ2V0R3JvdXBBdHRyaWJ1dGVzPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEF0dHJpYnV0ZXMgb2YgdGhlIENvcmVXaWRnZXRHcm91cCBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBDb3JlV2lkZ2V0R3JvdXBBdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ0NvcmVXaWRnZXRHcm91cEF0dHJpYnV0ZXMnO1xuICAvKiogVGhlICZxdW90O2NsYXNzTmFtZSZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVdpZGdldEdyb3VwQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7bG9jayZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7Q29yZVdpZGdldEdyb3VwQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlV2lkZ2V0R3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgbWV0YWRhdGE/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O3RpdGxlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtDb3JlV2lkZ2V0R3JvdXBBdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgY3JlYXRlQ2F0ZWdvcnkgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVDYXRlZ29yeUlucHV0ID0ge1xuICAvKiogVGhlIHNsdWcgdGhhdCB0aGUgY2F0ZWdvcnkgd2lsbCBiZSBhbiBhbGlhcyBvZiAqL1xuICBhbGlhc09mPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIGNhdGVnb3J5IG9iamVjdCAqL1xuICBkZXNjcmlwdGlvbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IG9iamVjdCB0byBtdXRhdGUgKi9cbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J107XG4gIC8qKiBUaGUgSUQgb2YgdGhlIGNhdGVnb3J5IHRoYXQgc2hvdWxkIGJlIHNldCBhcyB0aGUgcGFyZW50ICovXG4gIHBhcmVudElkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIElmIHRoaXMgYXJndW1lbnQgZXhpc3RzIHRoZW4gdGhlIHNsdWcgd2lsbCBiZSBjaGVja2VkIHRvIHNlZSBpZiBpdCBpcyBub3QgYW4gZXhpc3RpbmcgdmFsaWQgdGVybS4gSWYgdGhhdCBjaGVjayBzdWNjZWVkcyAoaXQgaXMgbm90IGEgdmFsaWQgdGVybSksIHRoZW4gaXQgaXMgYWRkZWQgYW5kIHRoZSB0ZXJtIGlkIGlzIGdpdmVuLiBJZiBpdCBmYWlscywgdGhlbiBhIGNoZWNrIGlzIG1hZGUgdG8gd2hldGhlciB0aGUgdGF4b25vbXkgaXMgaGllcmFyY2hpY2FsIGFuZCB0aGUgcGFyZW50IGFyZ3VtZW50IGlzIG5vdCBlbXB0eS4gSWYgdGhlIHNlY29uZCBjaGVjayBzdWNjZWVkcywgdGhlIHRlcm0gd2lsbCBiZSBpbnNlcnRlZCBhbmQgdGhlIHRlcm0gaWQgd2lsbCBiZSBnaXZlbi4gSWYgdGhlIHNsdWcgYXJndW1lbnQgaXMgZW1wdHksIHRoZW4gaXQgd2lsbCBiZSBjYWxjdWxhdGVkIGZyb20gdGhlIHRlcm0gbmFtZS4gKi9cbiAgc2x1Zz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIFRoZSBwYXlsb2FkIGZvciB0aGUgY3JlYXRlQ2F0ZWdvcnkgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVDYXRlZ29yeVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlQ2F0ZWdvcnlQYXlsb2FkJztcbiAgLyoqIFRoZSBjcmVhdGVkIGNhdGVnb3J5ICovXG4gIGNhdGVnb3J5PzogTWF5YmU8Q2F0ZWdvcnk+O1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIGNyZWF0ZUNvbW1lbnQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVDb21tZW50SW5wdXQgPSB7XG4gIC8qKiBUaGUgYXBwcm92YWwgc3RhdHVzIG9mIHRoZSBjb21tZW50LiAqL1xuICBhcHByb3ZlZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNvbW1lbnQncyBhdXRob3IuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGVtYWlsIG9mIHRoZSBjb21tZW50J3MgYXV0aG9yLiAqL1xuICBhdXRob3JFbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHVybCBvZiB0aGUgY29tbWVudCdzIGF1dGhvci4gKi9cbiAgYXV0aG9yVXJsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgSUQgb2YgdGhlIHBvc3Qgb2JqZWN0IHRoZSBjb21tZW50IGJlbG9uZ3MgdG8uICovXG4gIGNvbW1lbnRPbj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBvZiB0aGUgY29tbWVudC4gKi9cbiAgY29udGVudD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgb2YgdGhlIG9iamVjdC4gUHJlZmVyYWJsZSB0byBlbnRlciBhcyB5ZWFyL21vbnRoL2RheSAoIGUuZy4gMDEvMzEvMjAxNyApIGFzIGl0IHdpbGwgcmVhcnJhbmdlIGRhdGUgYXMgZml0IGlmIGl0IGlzIG5vdCBzcGVjaWZpZWQuIEluY29tcGxldGUgZGF0ZXMgbWF5IGhhdmUgdW5pbnRlbmRlZCByZXN1bHRzIGZvciBleGFtcGxlLCBcIjIwMTdcIiBhcyB0aGUgaW5wdXQgd2lsbCB1c2UgY3VycmVudCBkYXRlIHdpdGggdGltZXN0YW1wIDIwOjE3ICAqL1xuICBkYXRlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBQYXJlbnQgY29tbWVudCBJRCBvZiBjdXJyZW50IGNvbW1lbnQuICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgYXBwcm92YWwgc3RhdHVzIG9mIHRoZSBjb21tZW50ICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8Q29tbWVudFN0YXR1c0VudW0+O1xuICAvKiogVHlwZSBvZiBjb21tZW50LiAqL1xuICB0eXBlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVDb21tZW50IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlQ29tbWVudFBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlQ29tbWVudFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb21tZW50IHRoYXQgd2FzIGNyZWF0ZWQgKi9cbiAgY29tbWVudD86IE1heWJlPENvbW1lbnQ+O1xuICAvKiogV2hldGhlciB0aGUgbXV0YXRpb24gc3VjY2VlZGVkLiBJZiB0aGUgY29tbWVudCBpcyBub3QgYXBwcm92ZWQsIHRoZSBzZXJ2ZXIgd2lsbCBub3QgcmV0dXJuIHRoZSBjb21tZW50IHRvIGEgbm9uIGF1dGhlbnRpY2F0ZWQgdXNlciwgYnV0IGEgc3VjY2VzcyBtZXNzYWdlIGNhbiBiZSByZXR1cm5lZCBpZiB0aGUgY3JlYXRlIHN1Y2NlZWRlZCwgYW5kIHRoZSBjbGllbnQgY2FuIG9wdGltaXN0aWNhbGx5IGFkZCB0aGUgY29tbWVudCB0byB0aGUgY2xpZW50IGNhY2hlICovXG4gIHN1Y2Nlc3M/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIGNyZWF0ZU1lZGlhSXRlbSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIENyZWF0ZU1lZGlhSXRlbUlucHV0ID0ge1xuICAvKiogQWx0ZXJuYXRpdmUgdGV4dCB0byBkaXNwbGF5IHdoZW4gbWVkaWFJdGVtIGlzIG5vdCBkaXNwbGF5ZWQgKi9cbiAgYWx0VGV4dD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHVzZXJJZCB0byBhc3NpZ24gYXMgdGhlIGF1dGhvciBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGF1dGhvcklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjYXB0aW9uIGZvciB0aGUgbWVkaWFJdGVtICovXG4gIGNhcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjb21tZW50IHN0YXR1cyBmb3IgdGhlIG1lZGlhSXRlbSAqL1xuICBjb21tZW50U3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGF0ZSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGRhdGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRlIChpbiBHTVQgem9uZSkgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBkYXRlR210PzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBEZXNjcmlwdGlvbiBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGRlc2NyaXB0aW9uPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZmlsZSBuYW1lIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgZmlsZVBhdGg/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBmaWxlIHR5cGUgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBmaWxlVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgcGFyZW50IG9iamVjdCAqL1xuICBwYXJlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgcGluZyBzdGF0dXMgZm9yIHRoZSBtZWRpYUl0ZW0gKi9cbiAgcGluZ1N0YXR1cz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHNsdWcgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgc3RhdHVzIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxNZWRpYUl0ZW1TdGF0dXNFbnVtPjtcbiAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVNZWRpYUl0ZW0gbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVNZWRpYUl0ZW1QYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ0NyZWF0ZU1lZGlhSXRlbVBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBNZWRpYUl0ZW0gb2JqZWN0IG11dGF0aW9uIHR5cGUuICovXG4gIG1lZGlhSXRlbT86IE1heWJlPE1lZGlhSXRlbT47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBjcmVhdGVQYWdlIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlUGFnZUlucHV0ID0ge1xuICAvKiogVGhlIHVzZXJJZCB0byBhc3NpZ24gYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0ICovXG4gIGF1dGhvcklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjb21tZW50IHN0YXR1cyBmb3IgdGhlIG9iamVjdCAqL1xuICBjb21tZW50U3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY29udGVudCBvZiB0aGUgb2JqZWN0ICovXG4gIGNvbnRlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRlIG9mIHRoZSBvYmplY3QuIFByZWZlcmFibGUgdG8gZW50ZXIgYXMgeWVhci9tb250aC9kYXkgKGUuZy4gMDEvMzEvMjAxNykgYXMgaXQgd2lsbCByZWFycmFuZ2UgZGF0ZSBhcyBmaXQgaWYgaXQgaXMgbm90IHNwZWNpZmllZC4gSW5jb21wbGV0ZSBkYXRlcyBtYXkgaGF2ZSB1bmludGVuZGVkIHJlc3VsdHMgZm9yIGV4YW1wbGUsIFwiMjAxN1wiIGFzIHRoZSBpbnB1dCB3aWxsIHVzZSBjdXJyZW50IGRhdGUgd2l0aCB0aW1lc3RhbXAgMjA6MTcgICovXG4gIGRhdGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgZmllbGQgdXNlZCBmb3Igb3JkZXJpbmcgcG9zdHMuIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgd2l0aCBuYXYgbWVudSBpdGVtcyBvciBmb3Igc3BlY2lhbCBvcmRlcmluZyBvZiBoaWVyYXJjaGljYWwgY29udGVudCB0eXBlcy4gKi9cbiAgbWVudU9yZGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhcmVudCBvYmplY3QgKi9cbiAgcGFyZW50SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHBhc3N3b3JkIHVzZWQgdG8gcHJvdGVjdCB0aGUgY29udGVudCBvZiB0aGUgb2JqZWN0ICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgc2x1ZyBvZiB0aGUgb2JqZWN0ICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgb2JqZWN0ICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVQYWdlIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlUGFnZVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlUGFnZVBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBQb3N0IG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICBwYWdlPzogTWF5YmU8UGFnZT47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBjcmVhdGVQb3N0Rm9ybWF0IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlUG9zdEZvcm1hdElucHV0ID0ge1xuICAvKiogVGhlIHNsdWcgdGhhdCB0aGUgcG9zdF9mb3JtYXQgd2lsbCBiZSBhbiBhbGlhcyBvZiAqL1xuICBhbGlhc09mPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHBvc3RfZm9ybWF0IG9iamVjdCAqL1xuICBkZXNjcmlwdGlvbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIHBvc3RfZm9ybWF0IG9iamVjdCB0byBtdXRhdGUgKi9cbiAgbmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J107XG4gIC8qKiBJZiB0aGlzIGFyZ3VtZW50IGV4aXN0cyB0aGVuIHRoZSBzbHVnIHdpbGwgYmUgY2hlY2tlZCB0byBzZWUgaWYgaXQgaXMgbm90IGFuIGV4aXN0aW5nIHZhbGlkIHRlcm0uIElmIHRoYXQgY2hlY2sgc3VjY2VlZHMgKGl0IGlzIG5vdCBhIHZhbGlkIHRlcm0pLCB0aGVuIGl0IGlzIGFkZGVkIGFuZCB0aGUgdGVybSBpZCBpcyBnaXZlbi4gSWYgaXQgZmFpbHMsIHRoZW4gYSBjaGVjayBpcyBtYWRlIHRvIHdoZXRoZXIgdGhlIHRheG9ub215IGlzIGhpZXJhcmNoaWNhbCBhbmQgdGhlIHBhcmVudCBhcmd1bWVudCBpcyBub3QgZW1wdHkuIElmIHRoZSBzZWNvbmQgY2hlY2sgc3VjY2VlZHMsIHRoZSB0ZXJtIHdpbGwgYmUgaW5zZXJ0ZWQgYW5kIHRoZSB0ZXJtIGlkIHdpbGwgYmUgZ2l2ZW4uIElmIHRoZSBzbHVnIGFyZ3VtZW50IGlzIGVtcHR5LCB0aGVuIGl0IHdpbGwgYmUgY2FsY3VsYXRlZCBmcm9tIHRoZSB0ZXJtIG5hbWUuICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIGNyZWF0ZVBvc3RGb3JtYXQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVQb3N0Rm9ybWF0UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdDcmVhdGVQb3N0Rm9ybWF0UGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNyZWF0ZWQgcG9zdF9mb3JtYXQgKi9cbiAgcG9zdEZvcm1hdD86IE1heWJlPFBvc3RGb3JtYXQ+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgY3JlYXRlUG9zdCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIENyZWF0ZVBvc3RJbnB1dCA9IHtcbiAgLyoqIFRoZSB1c2VySWQgdG8gYXNzaWduIGFzIHRoZSBhdXRob3Igb2YgdGhlIG9iamVjdCAqL1xuICBhdXRob3JJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTZXQgY29ubmVjdGlvbnMgYmV0d2VlbiB0aGUgcG9zdCBhbmQgY2F0ZWdvcmllcyAqL1xuICBjYXRlZ29yaWVzPzogSW5wdXRNYXliZTxQb3N0Q2F0ZWdvcmllc0lucHV0PjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjb21tZW50IHN0YXR1cyBmb3IgdGhlIG9iamVjdCAqL1xuICBjb21tZW50U3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY29udGVudCBvZiB0aGUgb2JqZWN0ICovXG4gIGNvbnRlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRlIG9mIHRoZSBvYmplY3QuIFByZWZlcmFibGUgdG8gZW50ZXIgYXMgeWVhci9tb250aC9kYXkgKGUuZy4gMDEvMzEvMjAxNykgYXMgaXQgd2lsbCByZWFycmFuZ2UgZGF0ZSBhcyBmaXQgaWYgaXQgaXMgbm90IHNwZWNpZmllZC4gSW5jb21wbGV0ZSBkYXRlcyBtYXkgaGF2ZSB1bmludGVuZGVkIHJlc3VsdHMgZm9yIGV4YW1wbGUsIFwiMjAxN1wiIGFzIHRoZSBpbnB1dCB3aWxsIHVzZSBjdXJyZW50IGRhdGUgd2l0aCB0aW1lc3RhbXAgMjA6MTcgICovXG4gIGRhdGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBleGNlcnB0IG9mIHRoZSBvYmplY3QgKi9cbiAgZXhjZXJwdD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQSBmaWVsZCB1c2VkIGZvciBvcmRlcmluZyBwb3N0cy4gVGhpcyBpcyB0eXBpY2FsbHkgdXNlZCB3aXRoIG5hdiBtZW51IGl0ZW1zIG9yIGZvciBzcGVjaWFsIG9yZGVyaW5nIG9mIGhpZXJhcmNoaWNhbCBjb250ZW50IHR5cGVzLiAqL1xuICBtZW51T3JkZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBwYXNzd29yZCB1c2VkIHRvIHByb3RlY3QgdGhlIGNvbnRlbnQgb2YgdGhlIG9iamVjdCAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHBpbmcgc3RhdHVzIGZvciB0aGUgb2JqZWN0ICovXG4gIHBpbmdTdGF0dXM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFVSTHMgdGhhdCBoYXZlIGJlZW4gcGluZ2VkLiAqL1xuICBwaW5nZWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTZXQgY29ubmVjdGlvbnMgYmV0d2VlbiB0aGUgcG9zdCBhbmQgcG9zdEZvcm1hdHMgKi9cbiAgcG9zdEZvcm1hdHM/OiBJbnB1dE1heWJlPFBvc3RQb3N0Rm9ybWF0c0lucHV0PjtcbiAgLyoqIFRoZSBzbHVnIG9mIHRoZSBvYmplY3QgKi9cbiAgc2x1Zz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHN0YXR1cyBvZiB0aGUgb2JqZWN0ICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+O1xuICAvKiogU2V0IGNvbm5lY3Rpb25zIGJldHdlZW4gdGhlIHBvc3QgYW5kIHRhZ3MgKi9cbiAgdGFncz86IElucHV0TWF5YmU8UG9zdFRhZ3NJbnB1dD47XG4gIC8qKiBUaGUgdGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVVJMcyBxdWV1ZWQgdG8gYmUgcGluZ2VkLiAqL1xuICB0b1Bpbmc/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVQb3N0IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlUG9zdFBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlUG9zdFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBQb3N0IG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICBwb3N0PzogTWF5YmU8UG9zdD47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBjcmVhdGVUYWcgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVUYWdJbnB1dCA9IHtcbiAgLyoqIFRoZSBzbHVnIHRoYXQgdGhlIHBvc3RfdGFnIHdpbGwgYmUgYW4gYWxpYXMgb2YgKi9cbiAgYWxpYXNPZj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhpcyBpcyBhbiBJRCB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBtdXRhdGlvbiBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBwb3N0X3RhZyBvYmplY3QgKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBwb3N0X3RhZyBvYmplY3QgdG8gbXV0YXRlICovXG4gIG5hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddO1xuICAvKiogSWYgdGhpcyBhcmd1bWVudCBleGlzdHMgdGhlbiB0aGUgc2x1ZyB3aWxsIGJlIGNoZWNrZWQgdG8gc2VlIGlmIGl0IGlzIG5vdCBhbiBleGlzdGluZyB2YWxpZCB0ZXJtLiBJZiB0aGF0IGNoZWNrIHN1Y2NlZWRzIChpdCBpcyBub3QgYSB2YWxpZCB0ZXJtKSwgdGhlbiBpdCBpcyBhZGRlZCBhbmQgdGhlIHRlcm0gaWQgaXMgZ2l2ZW4uIElmIGl0IGZhaWxzLCB0aGVuIGEgY2hlY2sgaXMgbWFkZSB0byB3aGV0aGVyIHRoZSB0YXhvbm9teSBpcyBoaWVyYXJjaGljYWwgYW5kIHRoZSBwYXJlbnQgYXJndW1lbnQgaXMgbm90IGVtcHR5LiBJZiB0aGUgc2Vjb25kIGNoZWNrIHN1Y2NlZWRzLCB0aGUgdGVybSB3aWxsIGJlIGluc2VydGVkIGFuZCB0aGUgdGVybSBpZCB3aWxsIGJlIGdpdmVuLiBJZiB0aGUgc2x1ZyBhcmd1bWVudCBpcyBlbXB0eSwgdGhlbiBpdCB3aWxsIGJlIGNhbGN1bGF0ZWQgZnJvbSB0aGUgdGVybSBuYW1lLiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVUYWcgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBDcmVhdGVUYWdQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ0NyZWF0ZVRhZ1BheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjcmVhdGVkIHBvc3RfdGFnICovXG4gIHRhZz86IE1heWJlPFRhZz47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBjcmVhdGVVc2VyIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlVXNlcklucHV0ID0ge1xuICAvKiogVXNlcidzIEFPTCBJTSBhY2NvdW50LiAqL1xuICBhaW0/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgY29udGVudCBhYm91dCB0aGUgdXNlci4gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgd2lsbCBiZSBzaG93biBvbiB0aGUgc2l0ZS4gRGVmYXVsdHMgdG8gdXNlcidzIHVzZXJuYW1lLiBJdCBpcyBsaWtlbHkgdGhhdCB5b3Ugd2lsbCB3YW50IHRvIGNoYW5nZSB0aGlzLCBmb3IgYm90aCBhcHBlYXJhbmNlIGFuZCBzZWN1cml0eSB0aHJvdWdoIG9ic2N1cml0eSAodGhhdCBpcyBpZiB5b3UgZG9udCB1c2UgYW5kIGRlbGV0ZSB0aGUgZGVmYXVsdCBhZG1pbiB1c2VyKS4gKi9cbiAgZGlzcGxheU5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLiAqL1xuICBlbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogXHRUaGUgdXNlcidzIGZpcnN0IG5hbWUuICovXG4gIGZpcnN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIEphYmJlciBhY2NvdW50LiAqL1xuICBqYWJiZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSB1c2VyJ3MgbGFzdCBuYW1lLiAqL1xuICBsYXN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIGxvY2FsZS4gKi9cbiAgbG9jYWxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyB0aGF0IGNvbnRhaW5zIGEgVVJMLWZyaWVuZGx5IG5hbWUgZm9yIHRoZSB1c2VyLiBUaGUgZGVmYXVsdCBpcyB0aGUgdXNlcidzIHVzZXJuYW1lLiAqL1xuICBuaWNlbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHVzZXIncyBuaWNrbmFtZSwgZGVmYXVsdHMgdG8gdGhlIHVzZXIncyB1c2VybmFtZS4gKi9cbiAgbmlja25hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHBsYWluIHRleHQgcGFzc3dvcmQgZm9yIHRoZSB1c2VyLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgdGhlIHVzZXIgcmVnaXN0ZXJlZC4gRm9ybWF0IGlzIFktbS1kIEg6aTpzLiAqL1xuICByZWdpc3RlcmVkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyBmb3Igd2hldGhlciB0byBlbmFibGUgdGhlIHJpY2ggZWRpdG9yIG9yIG5vdC4gRmFsc2UgaWYgbm90IGVtcHR5LiAqL1xuICByaWNoRWRpdGluZz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQW4gYXJyYXkgb2Ygcm9sZXMgdG8gYmUgYXNzaWduZWQgdG8gdGhlIHVzZXIuICovXG4gIHJvbGVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQSBzdHJpbmcgdGhhdCBjb250YWlucyB0aGUgdXNlcidzIHVzZXJuYW1lIGZvciBsb2dnaW5nIGluLiAqL1xuICB1c2VybmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J107XG4gIC8qKiBBIHN0cmluZyBjb250YWluaW5nIHRoZSB1c2VyJ3MgVVJMIGZvciB0aGUgdXNlcidzIHdlYiBzaXRlLiAqL1xuICB3ZWJzaXRlVXJsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBVc2VyJ3MgWWFob28gSU0gYWNjb3VudC4gKi9cbiAgeWltPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBjcmVhdGVVc2VyIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRlVXNlclBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnQ3JlYXRlVXNlclBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBVc2VyIG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICB1c2VyPzogTWF5YmU8VXNlcj47XG59O1xuXG4vKiogT2JqZWN0IHRoYXQgY2FuIGJlIGlkZW50aWZpZWQgd2l0aCBhIERhdGFiYXNlIElEICovXG5leHBvcnQgdHlwZSBEYXRhYmFzZUlkZW50aWZpZXIgPSB7XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgc3RvcmVkIGluIHRoZSBkYXRhYmFzZSAqL1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG59O1xuXG4vKiogRGF0ZSB2YWx1ZXMgKi9cbmV4cG9ydCB0eXBlIERhdGVJbnB1dCA9IHtcbiAgLyoqIERheSBvZiB0aGUgbW9udGggKGZyb20gMSB0byAzMSkgKi9cbiAgZGF5PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBNb250aCBudW1iZXIgKGZyb20gMSB0byAxMikgKi9cbiAgbW9udGg/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIDQgZGlnaXQgeWVhciAoZS5nLiAyMDE3KSAqL1xuICB5ZWFyPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGlucHV0ICovXG5leHBvcnQgdHlwZSBEYXRlUXVlcnlJbnB1dCA9IHtcbiAgLyoqIE5vZGVzIHNob3VsZCBiZSByZXR1cm5lZCBhZnRlciB0aGlzIGRhdGUgKi9cbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPERhdGVJbnB1dD47XG4gIC8qKiBOb2RlcyBzaG91bGQgYmUgcmV0dXJuZWQgYmVmb3JlIHRoaXMgZGF0ZSAqL1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPERhdGVJbnB1dD47XG4gIC8qKiBDb2x1bW4gdG8gcXVlcnkgYWdhaW5zdCAqL1xuICBjb2x1bW4/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbkRhdGVDb2x1bW5FbnVtPjtcbiAgLyoqIEZvciBhZnRlci9iZWZvcmUsIHdoZXRoZXIgZXhhY3QgdmFsdWUgc2hvdWxkIGJlIG1hdGNoZWQgb3Igbm90ICovXG4gIGNvbXBhcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIERheSBvZiB0aGUgbW9udGggKGZyb20gMSB0byAzMSkgKi9cbiAgZGF5PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBIb3VyIChmcm9tIDAgdG8gMjMpICovXG4gIGhvdXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEZvciBhZnRlci9iZWZvcmUsIHdoZXRoZXIgZXhhY3QgdmFsdWUgc2hvdWxkIGJlIG1hdGNoZWQgb3Igbm90ICovXG4gIGluY2x1c2l2ZT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIE1pbnV0ZSAoZnJvbSAwIHRvIDU5KSAqL1xuICBtaW51dGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIE1vbnRoIG51bWJlciAoZnJvbSAxIHRvIDEyKSAqL1xuICBtb250aD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogT1Igb3IgQU5ELCBob3cgdGhlIHN1Yi1hcnJheXMgc2hvdWxkIGJlIGNvbXBhcmVkICovXG4gIHJlbGF0aW9uPzogSW5wdXRNYXliZTxSZWxhdGlvbkVudW0+O1xuICAvKiogU2Vjb25kICgwIHRvIDU5KSAqL1xuICBzZWNvbmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFdlZWsgb2YgdGhlIHllYXIgKGZyb20gMCB0byA1MykgKi9cbiAgd2Vlaz86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogNCBkaWdpdCB5ZWFyIChlLmcuIDIwMTcpICovXG4gIHllYXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgdGVtcGxhdGUgYXNzaWduZWQgdG8gdGhlIG5vZGUgKi9cbmV4cG9ydCB0eXBlIERlZmF1bHRUZW1wbGF0ZSA9IENvbnRlbnRUZW1wbGF0ZSAmIHtcbiAgX190eXBlbmFtZT86ICdEZWZhdWx0VGVtcGxhdGUnO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIHRlbXBsYXRlICovXG4gIHRlbXBsYXRlTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBkZWxldGVDYXRlZ29yeSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERlbGV0ZUNhdGVnb3J5SW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIGNhdGVnb3J5IHRvIGRlbGV0ZSAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIGRlbGV0ZUNhdGVnb3J5IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgRGVsZXRlQ2F0ZWdvcnlQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ0RlbGV0ZUNhdGVnb3J5UGF5bG9hZCc7XG4gIC8qKiBUaGUgZGVsZXRlZCB0ZXJtIG9iamVjdCAqL1xuICBjYXRlZ29yeT86IE1heWJlPENhdGVnb3J5PjtcbiAgLyoqIElmIGEgJiMwMzk7Y2xpZW50TXV0YXRpb25JZCYjMDM5OyBpbnB1dCBpcyBwcm92aWRlZCB0byB0aGUgbXV0YXRpb24sIGl0IHdpbGwgYmUgcmV0dXJuZWQgYXMgb3V0cHV0IG9uIHRoZSBtdXRhdGlvbi4gVGhpcyBJRCBjYW4gYmUgdXNlZCBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIGRlbGV0ZWQgb2JqZWN0ICovXG4gIGRlbGV0ZWRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIGRlbGV0ZUNvbW1lbnQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVDb21tZW50SW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBjb21tZW50IHNob3VsZCBiZSBmb3JjZSBkZWxldGVkIGluc3RlYWQgb2YgYmVpbmcgbW92ZWQgdG8gdGhlIHRyYXNoICovXG4gIGZvcmNlRGVsZXRlPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRlbGV0ZWQgY29tbWVudCBJRCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIGRlbGV0ZUNvbW1lbnQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVDb21tZW50UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdEZWxldGVDb21tZW50UGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRlbGV0ZWQgY29tbWVudCBvYmplY3QgKi9cbiAgY29tbWVudD86IE1heWJlPENvbW1lbnQ+O1xuICAvKiogVGhlIGRlbGV0ZWQgY29tbWVudCBJRCAqL1xuICBkZWxldGVkSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSBkZWxldGVNZWRpYUl0ZW0gbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVNZWRpYUl0ZW1JbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG1lZGlhSXRlbSBzaG91bGQgYmUgZm9yY2UgZGVsZXRlZCBpbnN0ZWFkIG9mIGJlaW5nIG1vdmVkIHRvIHRoZSB0cmFzaCAqL1xuICBmb3JjZURlbGV0ZT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgbWVkaWFJdGVtIHRvIGRlbGV0ZSAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIGRlbGV0ZU1lZGlhSXRlbSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERlbGV0ZU1lZGlhSXRlbVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGVsZXRlTWVkaWFJdGVtUGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBkZWxldGVkIG1lZGlhSXRlbSAqL1xuICBkZWxldGVkSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbWVkaWFJdGVtIGJlZm9yZSBpdCB3YXMgZGVsZXRlZCAqL1xuICBtZWRpYUl0ZW0/OiBNYXliZTxNZWRpYUl0ZW0+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgZGVsZXRlUGFnZSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERlbGV0ZVBhZ2VJbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBzaG91bGQgYmUgZm9yY2UgZGVsZXRlZCBpbnN0ZWFkIG9mIGJlaW5nIG1vdmVkIHRvIHRoZSB0cmFzaCAqL1xuICBmb3JjZURlbGV0ZT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgcGFnZSB0byBkZWxldGUgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIC8qKiBPdmVycmlkZSB0aGUgZWRpdCBsb2NrIHdoZW4gYW5vdGhlciB1c2VyIGlzIGVkaXRpbmcgdGhlIHBvc3QgKi9cbiAgaWdub3JlRWRpdExvY2s/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBkZWxldGVQYWdlIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgRGVsZXRlUGFnZVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGVsZXRlUGFnZVBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgZGVsZXRlZCBvYmplY3QgKi9cbiAgZGVsZXRlZElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG9iamVjdCBiZWZvcmUgaXQgd2FzIGRlbGV0ZWQgKi9cbiAgcGFnZT86IE1heWJlPFBhZ2U+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgZGVsZXRlUG9zdEZvcm1hdCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERlbGV0ZVBvc3RGb3JtYXRJbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgcG9zdEZvcm1hdCB0byBkZWxldGUgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBkZWxldGVQb3N0Rm9ybWF0IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgRGVsZXRlUG9zdEZvcm1hdFBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGVsZXRlUG9zdEZvcm1hdFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgZGVsZXRlZCBvYmplY3QgKi9cbiAgZGVsZXRlZElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRlbGV0ZWQgdGVybSBvYmplY3QgKi9cbiAgcG9zdEZvcm1hdD86IE1heWJlPFBvc3RGb3JtYXQ+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgZGVsZXRlUG9zdCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIERlbGV0ZVBvc3RJbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBzaG91bGQgYmUgZm9yY2UgZGVsZXRlZCBpbnN0ZWFkIG9mIGJlaW5nIG1vdmVkIHRvIHRoZSB0cmFzaCAqL1xuICBmb3JjZURlbGV0ZT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgcG9zdCB0byBkZWxldGUgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIC8qKiBPdmVycmlkZSB0aGUgZWRpdCBsb2NrIHdoZW4gYW5vdGhlciB1c2VyIGlzIGVkaXRpbmcgdGhlIHBvc3QgKi9cbiAgaWdub3JlRWRpdExvY2s/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBkZWxldGVQb3N0IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgRGVsZXRlUG9zdFBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGVsZXRlUG9zdFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgZGVsZXRlZCBvYmplY3QgKi9cbiAgZGVsZXRlZElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG9iamVjdCBiZWZvcmUgaXQgd2FzIGRlbGV0ZWQgKi9cbiAgcG9zdD86IE1heWJlPFBvc3Q+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgZGVsZXRlVGFnIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgRGVsZXRlVGFnSW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHRhZyB0byBkZWxldGUgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBkZWxldGVUYWcgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVUYWdQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ0RlbGV0ZVRhZ1BheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgZGVsZXRlZCBvYmplY3QgKi9cbiAgZGVsZXRlZElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRlbGV0ZWQgdGVybSBvYmplY3QgKi9cbiAgdGFnPzogTWF5YmU8VGFnPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIGRlbGV0ZVVzZXIgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVVc2VySW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHVzZXIgeW91IHdhbnQgdG8gZGVsZXRlICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICAvKiogUmVhc3NpZ24gcG9zdHMgYW5kIGxpbmtzIHRvIG5ldyBVc2VyIElELiAqL1xuICByZWFzc2lnbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIGRlbGV0ZVVzZXIgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBEZWxldGVVc2VyUGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdEZWxldGVVc2VyUGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSB1c2VyIHRoYXQgeW91IGp1c3QgZGVsZXRlZCAqL1xuICBkZWxldGVkSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZGVsZXRlZCB1c2VyIG9iamVjdCAqL1xuICB1c2VyPzogTWF5YmU8VXNlcj47XG59O1xuXG4vKiogVGhlIGRpc2N1c3Npb24gc2V0dGluZyB0eXBlICovXG5leHBvcnQgdHlwZSBEaXNjdXNzaW9uU2V0dGluZ3MgPSB7XG4gIF9fdHlwZW5hbWU/OiAnRGlzY3Vzc2lvblNldHRpbmdzJztcbiAgLyoqIEFsbG93IHBlb3BsZSB0byBzdWJtaXQgY29tbWVudHMgb24gbmV3IHBvc3RzLiAqL1xuICBkZWZhdWx0Q29tbWVudFN0YXR1cz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBBbGxvdyBsaW5rIG5vdGlmaWNhdGlvbnMgZnJvbSBvdGhlciBibG9ncyAocGluZ2JhY2tzIGFuZCB0cmFja2JhY2tzKSBvbiBuZXcgYXJ0aWNsZXMuICovXG4gIGRlZmF1bHRQaW5nU3RhdHVzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBSZWxhdGlvbmFsIGNvbnRleHQgYmV0d2VlbiBjb25uZWN0ZWQgbm9kZXMgKi9cbmV4cG9ydCB0eXBlIEVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIG5vZGUgKi9cbiAgbm9kZTogTm9kZTtcbn07XG5cbi8qKiBCbG9ja3MgdGhhdCBjYW4gYmUgZWRpdGVkIHRvIGNyZWF0ZSBjb250ZW50IGFuZCBsYXlvdXRzICovXG5leHBvcnQgdHlwZSBFZGl0b3JCbG9jayA9IHtcbiAgLyoqIFRoZSBBUEkgdmVyc2lvbiBvZiB0aGUgR3V0ZW5iZXJnIEJsb2NrICovXG4gIGFwaVZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgQmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXNzZXQgZW5xdWV1ZWQgYnkgdGhlIENNUyAqL1xuZXhwb3J0IHR5cGUgRW5xdWV1ZWRBc3NldCA9IHtcbiAgLyoqIFRoZSBpbmxpbmUgY29kZSB0byBiZSBydW4gYWZ0ZXIgdGhlIGFzc2V0IGlzIGxvYWRlZC4gKi9cbiAgYWZ0ZXI/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKlxuICAgKiBEZXByZWNhdGVkXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgRW5xdWV1ZWRBc3NldC5tZWRpYWAgaW5zdGVhZC5cbiAgICovXG4gIGFyZ3M/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpbmxpbmUgY29kZSB0byBiZSBydW4gYmVmb3JlIHRoZSBhc3NldCBpcyBsb2FkZWQuICovXG4gIGJlZm9yZT86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBIVE1MIGNvbmRpdGlvbmFsIGNvbW1lbnQgZm9yIHRoZSBlbnF1ZXVlZCBhc3NldC4gRS5nLiBJRSA2LCBsdGUgSUUgNywgZXRjICovXG4gIGNvbmRpdGlvbmFsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIERlcGVuZGVuY2llcyBuZWVkZWQgdG8gdXNlIHRoaXMgYXNzZXQgKi9cbiAgZGVwZW5kZW5jaWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8RW5xdWV1ZWRBc3NldD4+PjtcbiAgLyoqXG4gICAqIEV4dHJhIGluZm9ybWF0aW9uIG5lZWRlZCBmb3IgdGhlIHNjcmlwdFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYEVucXVldWVkU2NyaXB0LmV4dHJhRGF0YWAgaW5zdGVhZC5cbiAgICovXG4gIGV4dHJhPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBoYW5kbGUgb2YgdGhlIGVucXVldWVkIGFzc2V0ICovXG4gIGhhbmRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIGVucXVldWVkIGFzc2V0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBzb3VyY2Ugb2YgdGhlIGFzc2V0ICovXG4gIHNyYz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdmVyc2lvbiBvZiB0aGUgZW5xdWV1ZWQgYXNzZXQgKi9cbiAgdmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogU2NyaXB0IGVucXVldWVkIGJ5IHRoZSBDTVMgKi9cbmV4cG9ydCB0eXBlIEVucXVldWVkU2NyaXB0ID0gRW5xdWV1ZWRBc3NldCAmIE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnRW5xdWV1ZWRTY3JpcHQnO1xuICAvKiogVGhlIGlubGluZSBjb2RlIHRvIGJlIHJ1biBhZnRlciB0aGUgYXNzZXQgaXMgbG9hZGVkLiAqL1xuICBhZnRlcj86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqXG4gICAqIERlcHJlY2F0ZWRcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBFbnF1ZXVlZEFzc2V0Lm1lZGlhYCBpbnN0ZWFkLlxuICAgKi9cbiAgYXJncz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlubGluZSBjb2RlIHRvIGJlIHJ1biBiZWZvcmUgdGhlIGFzc2V0IGlzIGxvYWRlZC4gKi9cbiAgYmVmb3JlPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIEhUTUwgY29uZGl0aW9uYWwgY29tbWVudCBmb3IgdGhlIGVucXVldWVkIGFzc2V0LiBFLmcuIElFIDYsIGx0ZSBJRSA3LCBldGMgKi9cbiAgY29uZGl0aW9uYWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRGVwZW5kZW5jaWVzIG5lZWRlZCB0byB1c2UgdGhpcyBhc3NldCAqL1xuICBkZXBlbmRlbmNpZXM/OiBNYXliZTxBcnJheTxNYXliZTxFbnF1ZXVlZFNjcmlwdD4+PjtcbiAgLyoqXG4gICAqIEV4dHJhIGluZm9ybWF0aW9uIG5lZWRlZCBmb3IgdGhlIHNjcmlwdFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYEVucXVldWVkU2NyaXB0LmV4dHJhRGF0YWAgaW5zdGVhZC5cbiAgICovXG4gIGV4dHJhPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEV4dHJhIGRhdGEgc3VwcGxpZWQgdG8gdGhlIGVucXVldWVkIHNjcmlwdCAqL1xuICBleHRyYURhdGE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGhhbmRsZSBvZiB0aGUgZW5xdWV1ZWQgYXNzZXQgKi9cbiAgaGFuZGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWwgSUQgb2YgdGhlIGVucXVldWVkIHNjcmlwdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgc291cmNlIG9mIHRoZSBhc3NldCAqL1xuICBzcmM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGxvYWRpbmcgc3RyYXRlZ3kgdG8gdXNlIG9uIHRoZSBzY3JpcHQgdGFnICovXG4gIHN0cmF0ZWd5PzogTWF5YmU8U2NyaXB0TG9hZGluZ1N0cmF0ZWd5RW51bT47XG4gIC8qKiBUaGUgdmVyc2lvbiBvZiB0aGUgZW5xdWV1ZWQgc2NyaXB0ICovXG4gIHZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gRW5xdWV1ZWRTY3JpcHQgTm9kZXMgKi9cbmV4cG9ydCB0eXBlIEVucXVldWVkU2NyaXB0Q29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIENvbnRlbnROb2RlIGFuZCBjb25uZWN0ZWQgRW5xdWV1ZWRTY3JpcHQgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PEVucXVldWVkU2NyaXB0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBFbnF1ZXVlZFNjcmlwdCBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8RW5xdWV1ZWRTY3JpcHQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBFbnF1ZXVlZFNjcmlwdCAqL1xuZXhwb3J0IHR5cGUgRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgRW5xdWV1ZWRTY3JpcHQgTm9kZSAqL1xuICBub2RlOiBFbnF1ZXVlZFNjcmlwdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBTdHlsZXNoZWV0IGVucXVldWVkIGJ5IHRoZSBDTVMgKi9cbmV4cG9ydCB0eXBlIEVucXVldWVkU3R5bGVzaGVldCA9IEVucXVldWVkQXNzZXQgJiBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ0VucXVldWVkU3R5bGVzaGVldCc7XG4gIC8qKiBUaGUgaW5saW5lIGNvZGUgdG8gYmUgcnVuIGFmdGVyIHRoZSBhc3NldCBpcyBsb2FkZWQuICovXG4gIGFmdGVyPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKipcbiAgICogRGVwcmVjYXRlZFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYEVucXVldWVkQXNzZXQubWVkaWFgIGluc3RlYWQuXG4gICAqL1xuICBhcmdzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaW5saW5lIGNvZGUgdG8gYmUgcnVuIGJlZm9yZSB0aGUgYXNzZXQgaXMgbG9hZGVkLiAqL1xuICBiZWZvcmU/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgSFRNTCBjb25kaXRpb25hbCBjb21tZW50IGZvciB0aGUgZW5xdWV1ZWQgYXNzZXQuIEUuZy4gSUUgNiwgbHRlIElFIDcsIGV0YyAqL1xuICBjb25kaXRpb25hbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBEZXBlbmRlbmNpZXMgbmVlZGVkIHRvIHVzZSB0aGlzIGFzc2V0ICovXG4gIGRlcGVuZGVuY2llcz86IE1heWJlPEFycmF5PE1heWJlPEVucXVldWVkU3R5bGVzaGVldD4+PjtcbiAgLyoqXG4gICAqIEV4dHJhIGluZm9ybWF0aW9uIG5lZWRlZCBmb3IgdGhlIHNjcmlwdFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgYEVucXVldWVkU2NyaXB0LmV4dHJhRGF0YWAgaW5zdGVhZC5cbiAgICovXG4gIGV4dHJhPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBoYW5kbGUgb2YgdGhlIGVucXVldWVkIGFzc2V0ICovXG4gIGhhbmRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsIElEIG9mIHRoZSBlbnF1ZXVlZCBzdHlsZXNoZWV0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIGVucXVldWVkIHN0eWxlIGlzIFJUTCBvciBub3QgKi9cbiAgaXNSdGw/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBtZWRpYSBhdHRyaWJ1dGUgdG8gdXNlIGZvciB0aGUgbGluayAqL1xuICBtZWRpYT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgYWJzb2x1dGUgcGF0aCB0byB0aGUgZW5xdWV1ZWQgc3R5bGUuIFNldCB3aGVuIHRoZSBzdHlsZXNoZWV0IGlzIG1lYW50IHRvIGxvYWQgaW5saW5lLiAqL1xuICBwYXRoPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBgcmVsYCBhdHRyaWJ1dGUgdG8gdXNlIGZvciB0aGUgbGluayAqL1xuICByZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHNvdXJjZSBvZiB0aGUgYXNzZXQgKi9cbiAgc3JjPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIE9wdGlvbmFsIHN1ZmZpeCwgdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRoIFJUTCAqL1xuICBzdWZmaXg/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBlbnF1ZXVlZCBzdHlsZS4gVXNlZCBmb3IgcHJlZmVycmVkL2FsdGVybmF0ZSBzdHlsZXNoZWV0cy4gKi9cbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHZlcnNpb24gb2YgdGhlIGVucXVldWVkIHN0eWxlICovXG4gIHZlcnNpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gRW5xdWV1ZWRTdHlsZXNoZWV0IE5vZGVzICovXG5leHBvcnQgdHlwZSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gQ29udGVudE5vZGUgYW5kIGNvbm5lY3RlZCBFbnF1ZXVlZFN0eWxlc2hlZXQgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIEEgbGlzdCBvZiBjb25uZWN0ZWQgRW5xdWV1ZWRTdHlsZXNoZWV0IE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxFbnF1ZXVlZFN0eWxlc2hlZXQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogRWRnZSBiZXR3ZWVuIGEgTm9kZSBhbmQgYSBjb25uZWN0ZWQgRW5xdWV1ZWRTdHlsZXNoZWV0ICovXG5leHBvcnQgdHlwZSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgRW5xdWV1ZWRTdHlsZXNoZWV0IE5vZGUgKi9cbiAgbm9kZTogRW5xdWV1ZWRTdHlsZXNoZWV0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gPSB7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlIGdlbmVyYWwgc2V0dGluZyB0eXBlICovXG5leHBvcnQgdHlwZSBHZW5lcmFsU2V0dGluZ3MgPSB7XG4gIF9fdHlwZW5hbWU/OiAnR2VuZXJhbFNldHRpbmdzJztcbiAgLyoqIEEgZGF0ZSBmb3JtYXQgZm9yIGFsbCBkYXRlIHN0cmluZ3MuICovXG4gIGRhdGVGb3JtYXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogU2l0ZSB0YWdsaW5lLiAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGlzIGFkZHJlc3MgaXMgdXNlZCBmb3IgYWRtaW4gcHVycG9zZXMsIGxpa2UgbmV3IHVzZXIgbm90aWZpY2F0aW9uLiAqL1xuICBlbWFpbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXb3JkUHJlc3MgbG9jYWxlIGNvZGUuICovXG4gIGxhbmd1YWdlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEEgZGF5IG51bWJlciBvZiB0aGUgd2VlayB0aGF0IHRoZSB3ZWVrIHNob3VsZCBzdGFydCBvbi4gKi9cbiAgc3RhcnRPZldlZWs/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogQSB0aW1lIGZvcm1hdCBmb3IgYWxsIHRpbWUgc3RyaW5ncy4gKi9cbiAgdGltZUZvcm1hdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBBIGNpdHkgaW4gdGhlIHNhbWUgdGltZXpvbmUgYXMgeW91LiAqL1xuICB0aW1lem9uZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTaXRlIHRpdGxlLiAqL1xuICB0aXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTaXRlIFVSTC4gKi9cbiAgdXJsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIGdlbmVyYXRlQXV0aG9yaXphdGlvbkNvZGUgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBHZW5lcmF0ZUF1dGhvcml6YXRpb25Db2RlSW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBFbWFpbCBmb3IgV29yZFByZXNzIHVzZXIgKi9cbiAgZW1haWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFBhc3N3b3JkIGZvciBXb3JkUHJlc3MgdXNlciAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcm5hbWUgZm9yIFdvcmRQcmVzcyB1c2VyICovXG4gIHVzZXJuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBnZW5lcmF0ZUF1dGhvcml6YXRpb25Db2RlIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgR2VuZXJhdGVBdXRob3JpemF0aW9uQ29kZVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnR2VuZXJhdGVBdXRob3JpemF0aW9uQ29kZVBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEF1dGhvcml6YXRpb24gY29kZSB1c2VkIGZvciByZXF1ZXN0aW5nIHJlZnJlc2gvYWNjZXNzIHRva2VucyAqL1xuICBjb2RlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEVycm9yIGVuY291bnRlcmVkIGR1cmluZyB1c2VyIGF1dGhlbnRpY2F0aW9uLCBpZiBhbnkgKi9cbiAgZXJyb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFR5cGVzIG9mIHN0eWxlcyB0byBsb2FkICovXG5leHBvcnQgZW51bSBHbG9iYWxTdHlsZXNoZWV0VHlwZXNFbnVtIHtcbiAgQmFzZUxheW91dFN0eWxlcyA9ICdCQVNFX0xBWU9VVF9TVFlMRVMnLFxuICBQcmVzZXRzID0gJ1BSRVNFVFMnLFxuICBTdHlsZXMgPSAnU1RZTEVTJyxcbiAgVmFyaWFibGVzID0gJ1ZBUklBQkxFUydcbn1cblxuLyoqIFRoZSAmcXVvdDtIZXJvU2VjdGlvbkJsb2NrcyZxdW90OyBGaWVsZCBHcm91cC4gQWRkZWQgdG8gdGhlIFNjaGVtYSBieSAmcXVvdDtXUEdyYXBoUUwgZm9yIEFDRiZxdW90Oy4gKi9cbmV4cG9ydCB0eXBlIEhlcm9TZWN0aW9uQmxvY2tzID0gQWNmRmllbGRHcm91cCAmIEFjZkZpZWxkR3JvdXBGaWVsZHMgJiBIZXJvU2VjdGlvbkJsb2Nrc19GaWVsZHMgJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGVyb1NlY3Rpb25CbG9ja3MnO1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDtncm91cCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3MmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgaGVyb0N0YT86IE1heWJlPEhlcm9TZWN0aW9uQmxvY2tzSGVyb0N0YT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dGFyZWEmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0hlcm9TZWN0aW9uQmxvY2tzJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGhlcm9EZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3MmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgaGVyb1RpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhJnF1b3Q7IEZpZWxkIEdyb3VwLiBBZGRlZCB0byB0aGUgU2NoZW1hIGJ5ICZxdW90O1dQR3JhcGhRTCBmb3IgQUNGJnF1b3Q7LiAqL1xuZXhwb3J0IHR5cGUgSGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhID0gQWNmRmllbGRHcm91cCAmIEFjZkZpZWxkR3JvdXBGaWVsZHMgJiBIZXJvU2VjdGlvbkJsb2Nrc0hlcm9DdGFfRmllbGRzICYge1xuICBfX3R5cGVuYW1lPzogJ0hlcm9TZWN0aW9uQmxvY2tzSGVyb0N0YSc7XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7bGluayZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YUxpbms/OiBNYXliZTxBY2ZMaW5rPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0JnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtIZXJvU2VjdGlvbkJsb2Nrc0hlcm9DdGEmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgY3RhVGV4dD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZmllbGQgZ3JvdXBcbiAgICogQGRlcHJlY2F0ZWQgVXNlIF9fdHlwZW5hbWUgaW5zdGVhZFxuICAgKi9cbiAgZmllbGRHcm91cE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEludGVyZmFjZSByZXByZXNlbnRpbmcgZmllbGRzIG9mIHRoZSBBQ0YgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhJnF1b3Q7IEZpZWxkIEdyb3VwICovXG5leHBvcnQgdHlwZSBIZXJvU2VjdGlvbkJsb2Nrc0hlcm9DdGFfRmllbGRzID0ge1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O2xpbmsmcXVvdDsgRmllbGQgVHlwZSBhZGRlZCB0byB0aGUgc2NoZW1hIGFzIHBhcnQgb2YgdGhlICZxdW90O0hlcm9TZWN0aW9uQmxvY2tzSGVyb0N0YSZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBjdGFMaW5rPzogTWF5YmU8QWNmTGluaz47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dGV4dCZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhJnF1b3Q7IEZpZWxkIEdyb3VwICovXG4gIGN0YVRleHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIGdyb3VwXG4gICAqIEBkZXByZWNhdGVkIFVzZSBfX3R5cGVuYW1lIGluc3RlYWRcbiAgICovXG4gIGZpZWxkR3JvdXBOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnRlcmZhY2UgcmVwcmVzZW50aW5nIGZpZWxkcyBvZiB0aGUgQUNGICZxdW90O0hlcm9TZWN0aW9uQmxvY2tzJnF1b3Q7IEZpZWxkIEdyb3VwICovXG5leHBvcnQgdHlwZSBIZXJvU2VjdGlvbkJsb2Nrc19GaWVsZHMgPSB7XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZmllbGQgZ3JvdXBcbiAgICogQGRlcHJlY2F0ZWQgVXNlIF9fdHlwZW5hbWUgaW5zdGVhZFxuICAgKi9cbiAgZmllbGRHcm91cE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRmllbGQgb2YgdGhlICZxdW90O2dyb3VwJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtIZXJvU2VjdGlvbkJsb2NrcyZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBoZXJvQ3RhPzogTWF5YmU8SGVyb1NlY3Rpb25CbG9ja3NIZXJvQ3RhPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0YXJlYSZxdW90OyBGaWVsZCBUeXBlIGFkZGVkIHRvIHRoZSBzY2hlbWEgYXMgcGFydCBvZiB0aGUgJnF1b3Q7SGVyb1NlY3Rpb25CbG9ja3MmcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgaGVyb0Rlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEZpZWxkIG9mIHRoZSAmcXVvdDt0ZXh0JnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtIZXJvU2VjdGlvbkJsb2NrcyZxdW90OyBGaWVsZCBHcm91cCAqL1xuICBoZXJvVGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSAmcXVvdDtIZXJvVmlkZW8mcXVvdDsgRmllbGQgR3JvdXAuIEFkZGVkIHRvIHRoZSBTY2hlbWEgYnkgJnF1b3Q7V1BHcmFwaFFMIGZvciBBQ0YmcXVvdDsuICovXG5leHBvcnQgdHlwZSBIZXJvVmlkZW8gPSBBY2ZGaWVsZEdyb3VwICYgQWNmRmllbGRHcm91cEZpZWxkcyAmIEhlcm9WaWRlb19GaWVsZHMgJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGVyb1ZpZGVvJztcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBmaWVsZCBncm91cFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgX190eXBlbmFtZSBpbnN0ZWFkXG4gICAqL1xuICBmaWVsZEdyb3VwTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dXJsJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtIZXJvVmlkZW8mcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgaGVyb1ZpZGVvVXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnRlcmZhY2UgcmVwcmVzZW50aW5nIGZpZWxkcyBvZiB0aGUgQUNGICZxdW90O0hlcm9WaWRlbyZxdW90OyBGaWVsZCBHcm91cCAqL1xuZXhwb3J0IHR5cGUgSGVyb1ZpZGVvX0ZpZWxkcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBmaWVsZCBncm91cFxuICAgKiBAZGVwcmVjYXRlZCBVc2UgX190eXBlbmFtZSBpbnN0ZWFkXG4gICAqL1xuICBmaWVsZEdyb3VwTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBGaWVsZCBvZiB0aGUgJnF1b3Q7dXJsJnF1b3Q7IEZpZWxkIFR5cGUgYWRkZWQgdG8gdGhlIHNjaGVtYSBhcyBwYXJ0IG9mIHRoZSAmcXVvdDtIZXJvVmlkZW8mcXVvdDsgRmllbGQgR3JvdXAgKi9cbiAgaGVyb1ZpZGVvVXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb250ZW50IG5vZGUgd2l0aCBoaWVyYXJjaGljYWwgKHBhcmVudC9jaGlsZCkgcmVsYXRpb25zaGlwcyAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgPSB7XG4gIC8qKiBSZXR1cm5zIGFuY2VzdG9ycyBvZiB0aGUgbm9kZS4gRGVmYXVsdCBvcmRlcmVkIGFzIGxvd2VzdCAoY2xvc2VzdCB0byB0aGUgY2hpbGQpIHRvIGhpZ2hlc3QgKGNsb3Nlc3QgdG8gdGhlIHJvb3QpLiAqL1xuICBhbmNlc3RvcnM/OiBNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVBbmNlc3RvcnNDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbiAgY2hpbGRyZW4/OiBNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb24+O1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBDb250ZW50VHlwZSB0eXBlICovXG4gIGNvbnRlbnRUeXBlPzogTWF5YmU8Q29udGVudE5vZGVUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIENvbnRlbnQgVHlwZSB0aGUgbm9kZSBiZWxvbmdzIHRvICovXG4gIGNvbnRlbnRUeXBlTmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UgKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogUG9zdCBwdWJsaXNoaW5nIGRhdGUuICovXG4gIGRhdGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHB1Ymxpc2hpbmcgZGF0ZSBzZXQgaW4gR01ULiAqL1xuICBkYXRlR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBkZXNpcmVkIHNsdWcgb2YgdGhlIHBvc3QgKi9cbiAgZGVzaXJlZFNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogSWYgYSB1c2VyIGhhcyBlZGl0ZWQgdGhlIG5vZGUgd2l0aGluIHRoZSBwYXN0IDE1IHNlY29uZHMsIHRoaXMgd2lsbCByZXR1cm4gdGhlIHVzZXIgdGhhdCBsYXN0IGVkaXRlZC4gTnVsbCBpZiB0aGUgZWRpdCBsb2NrIGRvZXNuJiMwMzk7dCBleGlzdCBvciBpcyBncmVhdGVyIHRoYW4gMTUgc2Vjb25kcyAqL1xuICBlZGl0aW5nTG9ja2VkQnk/OiBNYXliZTxDb250ZW50Tm9kZVRvRWRpdExvY2tDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgUlNTIGVuY2xvc3VyZSBmb3IgdGhlIG9iamVjdCAqL1xuICBlbmNsb3N1cmU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxDb250ZW50Tm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU3R5bGVzaGVldCB0eXBlICovXG4gIGVucXVldWVkU3R5bGVzaGVldHM/OiBNYXliZTxDb250ZW50Tm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgZ2xvYmFsIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGlzIHBvc3QuIFRoaXMgY3VycmVudGx5IG1hdGNoZXMgdGhlIHZhbHVlIHN0b3JlZCBpbiBXUF9Qb3N0LSZndDtndWlkIGFuZCB0aGUgZ3VpZCBjb2x1bW4gaW4gdGhlICZxdW90O3Bvc3Rfb2JqZWN0cyZxdW90OyBkYXRhYmFzZSB0YWJsZS4gKi9cbiAgZ3VpZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgbm9kZSBpbiB0aGUgcHJldmlldyBzdGF0ZSAqL1xuICBpc1ByZXZpZXc/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIFRlcm0gKi9cbiAgaXNUZXJtTm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSB1c2VyIHRoYXQgbW9zdCByZWNlbnRseSBlZGl0ZWQgdGhlIG5vZGUgKi9cbiAgbGFzdEVkaXRlZEJ5PzogTWF5YmU8Q29udGVudE5vZGVUb0VkaXRMYXN0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIHBlcm1hbGluayBvZiB0aGUgcG9zdCAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBsb2NhbCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZS4gKi9cbiAgbW9kaWZpZWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEdNVCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZSBpbiBHTVQuICovXG4gIG1vZGlmaWVkR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgb2YgdGhlIG5vZGUuIFRoZSBwYXJlbnQgb2JqZWN0IGNhbiBiZSBvZiB2YXJpb3VzIHR5cGVzICovXG4gIHBhcmVudD86IE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9QYXJlbnRDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIERhdGFiYXNlIGlkIG9mIHRoZSBwYXJlbnQgbm9kZSAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGFyZW50IG5vZGUuICovXG4gIHBhcmVudElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRhdGFiYXNlIGlkIG9mIHRoZSBwcmV2aWV3IG5vZGUgKi9cbiAgcHJldmlld1JldmlzaW9uRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgYSBub2RlIGluIHRoZSBwcmV2aWV3IHN0YXRlICovXG4gIHByZXZpZXdSZXZpc2lvbklkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVyaSBzbHVnIGZvciB0aGUgcG9zdC4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBXUF9Qb3N0LSZndDtwb3N0X25hbWUgZmllbGQgYW5kIHRoZSBwb3N0X25hbWUgY29sdW1uIGluIHRoZSBkYXRhYmFzZSBmb3IgdGhlICZxdW90O3Bvc3Rfb2JqZWN0cyZxdW90OyB0YWJsZS4gKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY3VycmVudCBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRlbXBsYXRlIGFzc2lnbmVkIHRvIGEgbm9kZSBvZiBjb250ZW50ICovXG4gIHRlbXBsYXRlPzogTWF5YmU8Q29udGVudFRlbXBsYXRlPjtcbiAgdGVtcGxhdGVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIENvbnRlbnQgbm9kZSB3aXRoIGhpZXJhcmNoaWNhbCAocGFyZW50L2NoaWxkKSByZWxhdGlvbnNoaXBzICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZUFuY2VzdG9yc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVBbmNlc3RvcnNDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIENvbnRlbnQgbm9kZSB3aXRoIGhpZXJhcmNoaWNhbCAocGFyZW50L2NoaWxkKSByZWxhdGlvbnNoaXBzICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZUNoaWxkcmVuQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBDb250ZW50IG5vZGUgd2l0aCBoaWVyYXJjaGljYWwgKHBhcmVudC9jaGlsZCkgcmVsYXRpb25zaGlwcyAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGVFbnF1ZXVlZFNjcmlwdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogQ29udGVudCBub2RlIHdpdGggaGllcmFyY2hpY2FsIChwYXJlbnQvY2hpbGQpIHJlbGF0aW9uc2hpcHMgKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlRW5xdWV1ZWRTdHlsZXNoZWV0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgQ29udGVudE5vZGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBDb250ZW50Tm9kZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUFuY2VzdG9yc0Nvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8SGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudE5vZGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVBbmNlc3RvcnNDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUFuY2VzdG9yc0Nvbm5lY3Rpb25FZGdlID0gQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbnRlbnROb2RlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7SGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvblBhZ2VJbmZvID0gQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVBbmNlc3RvcnNDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIFR5cGVzIG9mIGNvbnRlbnQgdG8gZmlsdGVyICovXG4gIGNvbnRlbnRUeXBlcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudE5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ0hpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnROb2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQ2hpbGRyZW5Db25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbkVkZ2UgPSBDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O0hpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQ2hpbGRyZW5Db25uZWN0aW9uUGFnZUluZm8gPSBDb250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBUaGUgVHlwZXMgb2YgY29udGVudCB0byBmaWx0ZXIgKi9cbiAgY29udGVudFR5cGVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPENvbnRlbnRUeXBlRW51bT4+PjtcbiAgLyoqIEZpbHRlciB0aGUgY29ubmVjdGlvbiBiYXNlZCBvbiBkYXRlcyAqL1xuICBkYXRlUXVlcnk/OiBJbnB1dE1heWJlPERhdGVRdWVyeUlucHV0PjtcbiAgLyoqIFRydWUgZm9yIG9iamVjdHMgd2l0aCBwYXNzd29yZHM7IEZhbHNlIGZvciBvYmplY3RzIHdpdGhvdXQgcGFzc3dvcmRzOyBudWxsIGZvciBhbGwgb2JqZWN0cyB3aXRoIG9yIHdpdGhvdXQgcGFzc3dvcmRzICovXG4gIGhhc1Bhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmaWMgZGF0YWJhc2UgSUQgb2YgdGhlIG9iamVjdCAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgSURzIGZvciB0aGUgb2JqZWN0cyB0byByZXRyaWV2ZSAqL1xuICBpbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogR2V0IG9iamVjdHMgd2l0aCBhIHNwZWNpZmljIG1pbWVUeXBlIHByb3BlcnR5ICovXG4gIG1pbWVUeXBlPzogSW5wdXRNYXliZTxNaW1lVHlwZUVudW0+O1xuICAvKiogU2x1ZyAvIHBvc3RfbmFtZSBvZiB0aGUgb2JqZWN0ICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB0byByZXRyaWV2ZS4gVXNlIHNsdWdzICovXG4gIG5hbWVJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgSURzIE5PVCB0byByZXRyaWV2ZS4gSWYgdGhpcyBpcyB1c2VkIGluIHRoZSBzYW1lIHF1ZXJ5IGFzIFwiaW5cIiwgaXQgd2lsbCBiZSBpZ25vcmVkICovXG4gIG5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGF0IHBhcmFtZXRlciB0byB1c2UgdG8gb3JkZXIgdGhlIG9iamVjdHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdE9iamVjdHNDb25uZWN0aW9uT3JkZXJieUlucHV0Pj4+O1xuICAvKiogVXNlIElEIHRvIHJldHVybiBvbmx5IGNoaWxkcmVuLiBVc2UgMCB0byByZXR1cm4gb25seSB0b3AtbGV2ZWwgaXRlbXMgKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB3aG9zZSBwYXJlbnQgaXMgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgcG9zdHMgd2hvc2UgcGFyZW50IGlzIG5vdCBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgcGFzc3dvcmQuICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaG93IFBvc3RzIGJhc2VkIG9uIGEga2V5d29yZCBzZWFyY2ggKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSBwb3N0cyB3aGVyZSBwb3N0IHN0YXR1cyBpcyBpbiBhbiBhcnJheS4gKi9cbiAgc3RhdGk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBzdGF0dXMuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+O1xuICAvKiogVGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9QYXJlbnRDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiBPbmVUb09uZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnSGllcmFyY2hpY2FsQ29udGVudE5vZGVUb1BhcmVudENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IENvbnRlbnROb2RlO1xufTtcblxuLyoqIE5vZGUgd2l0aCBoaWVyYXJjaGljYWwgKHBhcmVudC9jaGlsZCkgcmVsYXRpb25zaGlwcyAqL1xuZXhwb3J0IHR5cGUgSGllcmFyY2hpY2FsTm9kZSA9IHtcbiAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBzdG9yZWQgaW4gdGhlIGRhdGFiYXNlICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogRGF0YWJhc2UgaWQgb2YgdGhlIHBhcmVudCBub2RlICovXG4gIHBhcmVudERhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgbm9kZS4gKi9cbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGVybSBub2RlIHdpdGggaGllcmFyY2hpY2FsIChwYXJlbnQvY2hpbGQpIHJlbGF0aW9uc2hpcHMgKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbFRlcm1Ob2RlID0ge1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBUaGUgbnVtYmVyIG9mIG9iamVjdHMgY29ubmVjdGVkIHRvIHRoZSBvYmplY3QgKi9cbiAgY291bnQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UgKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBvYmplY3QgKi9cbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVGVybU5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU3R5bGVzaGVldCB0eXBlICovXG4gIGVucXVldWVkU3R5bGVzaGVldHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgVGVybSAqL1xuICBpc1Rlcm1Ob2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIGxpbmsgdG8gdGhlIHRlcm0gKi9cbiAgbGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaHVtYW4gZnJpZW5kbHkgbmFtZSBvZiB0aGUgb2JqZWN0LiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIERhdGFiYXNlIGlkIG9mIHRoZSBwYXJlbnQgbm9kZSAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGFyZW50IG5vZGUuICovXG4gIHBhcmVudElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogQW4gYWxwaGFudW1lcmljIGlkZW50aWZpZXIgZm9yIHRoZSBvYmplY3QgdW5pcXVlIHRvIGl0cyB0eXBlLiAqL1xuICBzbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSB0YXhvbm9teSB0aGF0IHRoZSBvYmplY3QgaXMgYXNzb2NpYXRlZCB3aXRoICovXG4gIHRheG9ub215TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgdGVybSBncm91cCB0aGF0IHRoaXMgdGVybSBvYmplY3QgYmVsb25ncyB0byAqL1xuICB0ZXJtR3JvdXBJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdGF4b25vbXkgSUQgdGhhdCB0aGUgb2JqZWN0IGlzIGFzc29jaWF0ZWQgd2l0aCAqL1xuICB0ZXJtVGF4b25vbXlJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdW5pcXVlIHJlc291cmNlIGlkZW50aWZpZXIgcGF0aCAqL1xuICB1cmk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuXG4vKiogVGVybSBub2RlIHdpdGggaGllcmFyY2hpY2FsIChwYXJlbnQvY2hpbGQpIHJlbGF0aW9uc2hpcHMgKi9cbmV4cG9ydCB0eXBlIEhpZXJhcmNoaWNhbFRlcm1Ob2RlRW5xdWV1ZWRTY3JpcHRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRlcm0gbm9kZSB3aXRoIGhpZXJhcmNoaWNhbCAocGFyZW50L2NoaWxkKSByZWxhdGlvbnNoaXBzICovXG5leHBvcnQgdHlwZSBIaWVyYXJjaGljYWxUZXJtTm9kZUVucXVldWVkU3R5bGVzaGVldHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuLyoqIEZpbGUgZGV0YWlscyBmb3IgYSBNZWRpYSBJdGVtICovXG5leHBvcnQgdHlwZSBNZWRpYURldGFpbHMgPSB7XG4gIF9fdHlwZW5hbWU/OiAnTWVkaWFEZXRhaWxzJztcbiAgLyoqIFRoZSBmaWxlbmFtZSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGZpbGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGhlaWdodCBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGhlaWdodD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBNZXRhIGluZm9ybWF0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGUgbWVkaWFJdGVtICovXG4gIG1ldGE/OiBNYXliZTxNZWRpYUl0ZW1NZXRhPjtcbiAgLyoqIFRoZSBhdmFpbGFibGUgc2l6ZXMgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBzaXplcz86IE1heWJlPEFycmF5PE1heWJlPE1lZGlhU2l6ZT4+PjtcbiAgLyoqIFRoZSB3aWR0aCBvZiB0aGUgbWVkaWFJdGVtICovXG4gIHdpZHRoPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIEZpbGUgZGV0YWlscyBmb3IgYSBNZWRpYSBJdGVtICovXG5leHBvcnQgdHlwZSBNZWRpYURldGFpbHNTaXplc0FyZ3MgPSB7XG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8TWVkaWFJdGVtU2l6ZUVudW0+Pj47XG4gIGluY2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8TWVkaWFJdGVtU2l6ZUVudW0+Pj47XG59O1xuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW0gPSBDb250ZW50Tm9kZSAmIERhdGFiYXNlSWRlbnRpZmllciAmIEhpZXJhcmNoaWNhbENvbnRlbnROb2RlICYgSGllcmFyY2hpY2FsTm9kZSAmIE5vZGUgJiBOb2RlV2l0aEF1dGhvciAmIE5vZGVXaXRoQ29tbWVudHMgJiBOb2RlV2l0aFRlbXBsYXRlICYgTm9kZVdpdGhUaXRsZSAmIFVuaWZvcm1SZXNvdXJjZUlkZW50aWZpYWJsZSAmIHtcbiAgX190eXBlbmFtZT86ICdNZWRpYUl0ZW0nO1xuICAvKiogQWx0ZXJuYXRpdmUgdGV4dCB0byBkaXNwbGF5IHdoZW4gcmVzb3VyY2UgaXMgbm90IGRpc3BsYXllZCAqL1xuICBhbHRUZXh0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFJldHVybnMgYW5jZXN0b3JzIG9mIHRoZSBub2RlLiBEZWZhdWx0IG9yZGVyZWQgYXMgbG93ZXN0IChjbG9zZXN0IHRvIHRoZSBjaGlsZCkgdG8gaGlnaGVzdCAoY2xvc2VzdCB0byB0aGUgcm9vdCkuICovXG4gIGFuY2VzdG9ycz86IE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUFuY2VzdG9yc0Nvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBOb2RlV2l0aEF1dGhvciB0eXBlIGFuZCB0aGUgVXNlciB0eXBlICovXG4gIGF1dGhvcj86IE1heWJlPE5vZGVXaXRoQXV0aG9yVG9Vc2VyQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIGRhdGFiYXNlIGlkZW50aWZpZXIgb2YgdGhlIGF1dGhvciBvZiB0aGUgbm9kZSAqL1xuICBhdXRob3JEYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgYXV0aG9yIG9mIHRoZSBub2RlICovXG4gIGF1dGhvcklkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNhcHRpb24gZm9yIHRoZSByZXNvdXJjZSAqL1xuICBjYXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbiAgY2hpbGRyZW4/OiBNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb24+O1xuICAvKiogVGhlIG51bWJlciBvZiBjb21tZW50cy4gRXZlbiB0aG91Z2ggV1BHcmFwaFFMIGRlbm90ZXMgdGhpcyBmaWVsZCBhcyBhbiBpbnRlZ2VyLCBpbiBXb3JkUHJlc3MgdGhpcyBmaWVsZCBzaG91bGQgYmUgc2F2ZWQgYXMgYSBudW1lcmljIHN0cmluZyBmb3IgY29tcGF0aWJpbGl0eS4gKi9cbiAgY29tbWVudENvdW50PzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIGNvbW1lbnRzIGFyZSBvcGVuIG9yIGNsb3NlZCBmb3IgdGhpcyBwYXJ0aWN1bGFyIHBvc3QuICovXG4gIGNvbW1lbnRTdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBNZWRpYUl0ZW0gdHlwZSBhbmQgdGhlIENvbW1lbnQgdHlwZSAqL1xuICBjb21tZW50cz86IE1heWJlPE1lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb24+O1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBDb250ZW50VHlwZSB0eXBlICovXG4gIGNvbnRlbnRUeXBlPzogTWF5YmU8Q29udGVudE5vZGVUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIENvbnRlbnQgVHlwZSB0aGUgbm9kZSBiZWxvbmdzIHRvICovXG4gIGNvbnRlbnRUeXBlTmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UgKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogUG9zdCBwdWJsaXNoaW5nIGRhdGUuICovXG4gIGRhdGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHB1Ymxpc2hpbmcgZGF0ZSBzZXQgaW4gR01ULiAqL1xuICBkYXRlR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSBpbWFnZSAoc3RvcmVkIGFzIHBvc3RfY29udGVudCkgKi9cbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRlc2lyZWQgc2x1ZyBvZiB0aGUgcG9zdCAqL1xuICBkZXNpcmVkU2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBJZiBhIHVzZXIgaGFzIGVkaXRlZCB0aGUgbm9kZSB3aXRoaW4gdGhlIHBhc3QgMTUgc2Vjb25kcywgdGhpcyB3aWxsIHJldHVybiB0aGUgdXNlciB0aGF0IGxhc3QgZWRpdGVkLiBOdWxsIGlmIHRoZSBlZGl0IGxvY2sgZG9lc24mIzAzOTt0IGV4aXN0IG9yIGlzIGdyZWF0ZXIgdGhhbiAxNSBzZWNvbmRzICovXG4gIGVkaXRpbmdMb2NrZWRCeT86IE1heWJlPENvbnRlbnROb2RlVG9FZGl0TG9ja0Nvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBSU1MgZW5jbG9zdXJlIGZvciB0aGUgb2JqZWN0ICovXG4gIGVuY2xvc3VyZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFNjcmlwdCB0eXBlICovXG4gIGVucXVldWVkU2NyaXB0cz86IE1heWJlPENvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbiAgZW5xdWV1ZWRTdHlsZXNoZWV0cz86IE1heWJlPENvbnRlbnROb2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uPjtcbiAgLyoqIFRoZSBmaWxlc2l6ZSBpbiBieXRlcyBvZiB0aGUgcmVzb3VyY2UgKi9cbiAgZmlsZVNpemU/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbCB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBwb3N0LiBUaGlzIGN1cnJlbnRseSBtYXRjaGVzIHRoZSB2YWx1ZSBzdG9yZWQgaW4gV1BfUG9zdC0mZ3Q7Z3VpZCBhbmQgdGhlIGd1aWQgY29sdW1uIGluIHRoZSAmcXVvdDtwb3N0X29iamVjdHMmcXVvdDsgZGF0YWJhc2UgdGFibGUuICovXG4gIGd1aWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgYXR0YWNobWVudCBvYmplY3QgaXMgcGFzc3dvcmQgcHJvdGVjdGVkLiAqL1xuICBoYXNQYXNzd29yZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBhdHRhY2htZW50IG9iamVjdC4gKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbW1lbnQgKi9cbiAgaXNDb21tZW50OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbnRlbnQgTm9kZSAqL1xuICBpc0NvbnRlbnROb2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBmcm9udCBwYWdlLiAqL1xuICBpc0Zyb250UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGJsb2cgcGFnZS4gKi9cbiAgaXNQb3N0c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgYSBub2RlIGluIHRoZSBwcmV2aWV3IHN0YXRlICovXG4gIGlzUHJldmlldz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgVGVybSAqL1xuICBpc1Rlcm1Ob2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIHVzZXIgdGhhdCBtb3N0IHJlY2VudGx5IGVkaXRlZCB0aGUgbm9kZSAqL1xuICBsYXN0RWRpdGVkQnk/OiBNYXliZTxDb250ZW50Tm9kZVRvRWRpdExhc3RDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgcGVybWFsaW5rIG9mIHRoZSBwb3N0ICovXG4gIGxpbms/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogRGV0YWlscyBhYm91dCB0aGUgbWVkaWFJdGVtICovXG4gIG1lZGlhRGV0YWlscz86IE1heWJlPE1lZGlhRGV0YWlscz47XG4gIC8qKlxuICAgKiBUaGUgaWQgZmllbGQgbWF0Y2hlcyB0aGUgV1BfUG9zdC0mZ3Q7SUQgZmllbGQuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGRhdGFiYXNlSWQgZmllbGRcbiAgICovXG4gIG1lZGlhSXRlbUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBVcmwgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBtZWRpYUl0ZW1Vcmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVHlwZSBvZiByZXNvdXJjZSAqL1xuICBtZWRpYVR5cGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG1pbWUgdHlwZSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIG1pbWVUeXBlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBsb2NhbCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZS4gKi9cbiAgbW9kaWZpZWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIEdNVCBtb2RpZmllZCB0aW1lIGZvciBhIHBvc3QuIElmIGEgcG9zdCB3YXMgcmVjZW50bHkgdXBkYXRlZCB0aGUgbW9kaWZpZWQgZmllbGQgd2lsbCBjaGFuZ2UgdG8gbWF0Y2ggdGhlIGNvcnJlc3BvbmRpbmcgdGltZSBpbiBHTVQuICovXG4gIG1vZGlmaWVkR210PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgb2YgdGhlIG5vZGUuIFRoZSBwYXJlbnQgb2JqZWN0IGNhbiBiZSBvZiB2YXJpb3VzIHR5cGVzICovXG4gIHBhcmVudD86IE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9QYXJlbnRDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIERhdGFiYXNlIGlkIG9mIHRoZSBwYXJlbnQgbm9kZSAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGFyZW50IG5vZGUuICovXG4gIHBhcmVudElkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhc3N3b3JkIGZvciB0aGUgYXR0YWNobWVudCBvYmplY3QuICovXG4gIHBhc3N3b3JkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBpZCBvZiB0aGUgcHJldmlldyBub2RlICovXG4gIHByZXZpZXdSZXZpc2lvbkRhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgbm9kZSBpbiB0aGUgcHJldmlldyBzdGF0ZSAqL1xuICBwcmV2aWV3UmV2aXNpb25JZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBzaXplcyBhdHRyaWJ1dGUgdmFsdWUgZm9yIGFuIGltYWdlLiAqL1xuICBzaXplcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdXJpIHNsdWcgZm9yIHRoZSBwb3N0LiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gdGhlIFdQX1Bvc3QtJmd0O3Bvc3RfbmFtZSBmaWVsZCBhbmQgdGhlIHBvc3RfbmFtZSBjb2x1bW4gaW4gdGhlIGRhdGFiYXNlIGZvciB0aGUgJnF1b3Q7cG9zdF9vYmplY3RzJnF1b3Q7IHRhYmxlLiAqL1xuICBzbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFVybCBvZiB0aGUgbWVkaWFJdGVtICovXG4gIHNvdXJjZVVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgc3Jjc2V0IGF0dHJpYnV0ZSBzcGVjaWZpZXMgdGhlIFVSTCBvZiB0aGUgaW1hZ2UgdG8gdXNlIGluIGRpZmZlcmVudCBzaXR1YXRpb25zLiBJdCBpcyBhIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmcgb2YgdXJscyBhbmQgdGhlaXIgd2lkdGhzLiAqL1xuICBzcmNTZXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSBvYmplY3QgKi9cbiAgc3RhdHVzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB0ZW1wbGF0ZSBhc3NpZ25lZCB0byBhIG5vZGUgb2YgY29udGVudCAqL1xuICB0ZW1wbGF0ZT86IE1heWJlPENvbnRlbnRUZW1wbGF0ZT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgcG9zdC4gVGhpcyBpcyBjdXJyZW50bHkganVzdCB0aGUgcmF3IHRpdGxlLiBBbiBhbWVuZG1lbnQgdG8gc3VwcG9ydCByZW5kZXJlZCB0aXRsZSBuZWVkcyB0byBiZSBtYWRlLiAqL1xuICB0aXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdW5pcXVlIHJlc291cmNlIGlkZW50aWZpZXIgcGF0aCAqL1xuICB1cmk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1BbmNlc3RvcnNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8SGllcmFyY2hpY2FsQ29udGVudE5vZGVUb0NvbnRlbnROb2RlQW5jZXN0b3JzQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgbWVkaWFJdGVtIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbUNhcHRpb25BcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1DaGlsZHJlbkFyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1Db21tZW50c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBtZWRpYUl0ZW0gdHlwZSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFJdGVtRGVzY3JpcHRpb25BcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1FbnF1ZXVlZFNjcmlwdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1FbnF1ZXVlZFN0eWxlc2hlZXRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBtZWRpYUl0ZW0gdHlwZSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFJdGVtRmlsZVNpemVBcmdzID0ge1xuICBzaXplPzogSW5wdXRNYXliZTxNZWRpYUl0ZW1TaXplRW51bT47XG59O1xuXG5cbi8qKiBUaGUgbWVkaWFJdGVtIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbVNpemVzQXJncyA9IHtcbiAgc2l6ZT86IElucHV0TWF5YmU8TWVkaWFJdGVtU2l6ZUVudW0+O1xufTtcblxuXG4vKiogVGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1Tb3VyY2VVcmxBcmdzID0ge1xuICBzaXplPzogSW5wdXRNYXliZTxNZWRpYUl0ZW1TaXplRW51bT47XG59O1xuXG5cbi8qKiBUaGUgbWVkaWFJdGVtIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbVNyY1NldEFyZ3MgPSB7XG4gIHNpemU/OiBJbnB1dE1heWJlPE1lZGlhSXRlbVNpemVFbnVtPjtcbn07XG5cblxuLyoqIFRoZSBtZWRpYUl0ZW0gdHlwZSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFJdGVtVGl0bGVBcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gbWVkaWFJdGVtIE5vZGVzICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1Db25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgbWVkaWFJdGVtIE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIG1lZGlhSXRlbSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8TWVkaWFJdGVtPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIG1lZGlhSXRlbSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFJdGVtQ29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIG1lZGlhSXRlbSBOb2RlICovXG4gIG5vZGU6IE1lZGlhSXRlbTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSByZXNvdXJjZS4gRGVmYXVsdCBpcyBJRC4gKi9cbmV4cG9ydCBlbnVtIE1lZGlhSXRlbUlkVHlwZSB7XG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSBEYXRhYmFzZSBJRC4gKi9cbiAgRGF0YWJhc2VJZCA9ICdEQVRBQkFTRV9JRCcsXG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSAoaGFzaGVkKSBHbG9iYWwgSUQuICovXG4gIElkID0gJ0lEJyxcbiAgLyoqIElkZW50aWZ5IGEgcmVzb3VyY2UgYnkgdGhlIHNsdWcuIEF2YWlsYWJsZSB0byBub24taGllcmFyY2hjaWFsIFR5cGVzIHdoZXJlIHRoZSBzbHVnIGlzIGEgdW5pcXVlIGlkZW50aWZpZXIuICovXG4gIFNsdWcgPSAnU0xVRycsXG4gIC8qKiBJZGVudGlmeSBhIG1lZGlhIGl0ZW0gYnkgaXRzIHNvdXJjZSB1cmwgKi9cbiAgU291cmNlVXJsID0gJ1NPVVJDRV9VUkwnLFxuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgVVJJLiAqL1xuICBVcmkgPSAnVVJJJ1xufVxuXG4vKiogTWV0YSBjb25uZWN0ZWQgdG8gYSBNZWRpYUl0ZW0gKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbU1ldGEgPSB7XG4gIF9fdHlwZW5hbWU/OiAnTWVkaWFJdGVtTWV0YSc7XG4gIC8qKiBBcGVydHVyZSBtZWFzdXJlbWVudCBvZiB0aGUgbWVkaWEgaXRlbS4gKi9cbiAgYXBlcnR1cmU/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY2FtZXJhIHVzZWQgdG8gY3JlYXRlIHRoZSBtZWRpYSBpdGVtLiAqL1xuICBjYW1lcmE/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRleHQgc3RyaW5nIGRlc2NyaXB0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGUgbWVkaWEgaXRlbS4gKi9cbiAgY2FwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb3B5cmlnaHQgaW5mb3JtYXRpb24gYXNzb2NpYXRlZCB3aXRoIHRoZSBtZWRpYSBpdGVtLiAqL1xuICBjb3B5cmlnaHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRhdGUvdGltZSB3aGVuIHRoZSBtZWRpYSB3YXMgY3JlYXRlZC4gKi9cbiAgY3JlYXRlZFRpbWVzdGFtcD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgb3JpZ2luYWwgY3JlYXRvciBvZiB0aGUgbWVkaWEgaXRlbS4gKi9cbiAgY3JlZGl0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBmb2NhbCBsZW5ndGggdmFsdWUgb2YgdGhlIG1lZGlhIGl0ZW0uICovXG4gIGZvY2FsTGVuZ3RoPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIElTTyAoSW50ZXJuYXRpb25hbCBPcmdhbml6YXRpb24gZm9yIFN0YW5kYXJkaXphdGlvbikgdmFsdWUgb2YgdGhlIG1lZGlhIGl0ZW0uICovXG4gIGlzbz86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBMaXN0IG9mIGtleXdvcmRzIHVzZWQgdG8gZGVzY3JpYmUgb3IgaWRlbnRmeSB0aGUgbWVkaWEgaXRlbS4gKi9cbiAga2V5d29yZHM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgdmVydGljYWwgb3IgaG9yaXpvbnRhbCBhc3BlY3Qgb2YgdGhlIG1lZGlhIGl0ZW0uICovXG4gIG9yaWVudGF0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBzaHV0dGVyIHNwZWVkIGluZm9ybWF0aW9uIG9mIHRoZSBtZWRpYSBpdGVtLiAqL1xuICBzaHV0dGVyU3BlZWQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBBIHVzZWZ1bCB0aXRsZSBmb3IgdGhlIG1lZGlhIGl0ZW0uICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgc2l6ZSBvZiB0aGUgbWVkaWEgaXRlbSBvYmplY3QuICovXG5leHBvcnQgZW51bSBNZWRpYUl0ZW1TaXplRW51bSB7XG4gIC8qKiBNZWRpYUl0ZW0gd2l0aCB0aGUgbGFyZ2Ugc2l6ZSAqL1xuICBMYXJnZSA9ICdMQVJHRScsXG4gIC8qKiBNZWRpYUl0ZW0gd2l0aCB0aGUgbWVkaXVtIHNpemUgKi9cbiAgTWVkaXVtID0gJ01FRElVTScsXG4gIC8qKiBNZWRpYUl0ZW0gd2l0aCB0aGUgbWVkaXVtX2xhcmdlIHNpemUgKi9cbiAgTWVkaXVtTGFyZ2UgPSAnTUVESVVNX0xBUkdFJyxcbiAgLyoqIE1lZGlhSXRlbSB3aXRoIHRoZSB0aHVtYm5haWwgc2l6ZSAqL1xuICBUaHVtYm5haWwgPSAnVEhVTUJOQUlMJyxcbiAgLyoqIE1lZGlhSXRlbSB3aXRoIHRoZSAxNTM2eDE1MzYgc2l6ZSAqL1xuICAnMTUzNlgxNTM2JyA9ICdfMTUzNlgxNTM2JyxcbiAgLyoqIE1lZGlhSXRlbSB3aXRoIHRoZSAyMDQ4eDIwNDggc2l6ZSAqL1xuICAnMjA0OFgyMDQ4JyA9ICdfMjA0OFgyMDQ4J1xufVxuXG4vKiogVGhlIHN0YXR1cyBvZiB0aGUgbWVkaWEgaXRlbSBvYmplY3QuICovXG5leHBvcnQgZW51bSBNZWRpYUl0ZW1TdGF0dXNFbnVtIHtcbiAgLyoqIE9iamVjdHMgd2l0aCB0aGUgYXV0by1kcmFmdCBzdGF0dXMgKi9cbiAgQXV0b0RyYWZ0ID0gJ0FVVE9fRFJBRlQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBpbmhlcml0IHN0YXR1cyAqL1xuICBJbmhlcml0ID0gJ0lOSEVSSVQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBwcml2YXRlIHN0YXR1cyAqL1xuICBQcml2YXRlID0gJ1BSSVZBVEUnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSB0cmFzaCBzdGF0dXMgKi9cbiAgVHJhc2ggPSAnVFJBU0gnXG59XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lZGlhSXRlbSB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uID0gQ29tbWVudENvbm5lY3Rpb24gJiBDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ01lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PE1lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbW1lbnQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb25FZGdlID0gQ29tbWVudENvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ29tbWVudDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O01lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIE1lZGlhSXRlbVRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyA9IENvbW1lbnRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVkaWFJdGVtVG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgTWVkaWFJdGVtVG9Db21tZW50Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBNZWRpYUl0ZW1Ub0NvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogQ29tbWVudCBhdXRob3IgZW1haWwgYWRkcmVzcy4gKi9cbiAgYXV0aG9yRW1haWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gaW5jbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIGV4Y2x1ZGUgY29tbWVudHMgZm9yLiAqL1xuICBhdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29tbWVudCBhdXRob3IgVVJMLiAqL1xuICBhdXRob3JVcmw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbW1lbnQgSURzIHRvIGluY2x1ZGUuICovXG4gIGNvbW1lbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgSURzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiBzdGF0dXMuICovXG4gIGNvbW1lbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBvZiBhIGdpdmVuIHR5cGUuICovXG4gIGNvbW1lbnRUeXBlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogRXhjbHVkZSBjb21tZW50cyBmcm9tIGEgZ2l2ZW4gYXJyYXkgb2YgY29tbWVudCB0eXBlcy4gKi9cbiAgY29tbWVudFR5cGVOb3RJbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBvYmplY3QgYXV0aG9yIElEIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIGNvbnRlbnRBdXRob3I/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgKm5vdCogdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIExpbWl0IHJlc3VsdHMgdG8gdGhvc2UgYWZmaWxpYXRlZCB3aXRoIGEgZ2l2ZW4gY29udGVudCBvYmplY3QgSUQuICovXG4gIGNvbnRlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBJRHMgdG8gaW5jbHVkZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudElkSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBleGNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgbmFtZSAoaS5lLiBzbHVnICkgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnROYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IE9iamVjdCBwYXJlbnQgSUQgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRQYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IHN0YXR1c2VzIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiBQYXNzICdhbnknIHRvIG1hdGNoIGFueSB2YWx1ZS4gKi9cbiAgY29udGVudFN0YXR1cz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IHR5cGUgb3IgYXJyYXkgb2YgdHlwZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50VHlwZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb3IgZW1haWwgYWRkcmVzc2VzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiAkc3RhdHVzLiBEZWZhdWx0IGVtcHR5ICovXG4gIGluY2x1ZGVVbmFwcHJvdmVkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBLYXJtYSBzY29yZSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIGthcm1hPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY2FyZGluYWxpdHkgb2YgdGhlIG9yZGVyIG9mIHRoZSBjb25uZWN0aW9uICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQgdG8gb3JkZXIgdGhlIGNvbW1lbnRzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxDb21tZW50c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bT47XG4gIC8qKiBQYXJlbnQgSUQgb2YgY29tbWVudCB0byByZXRyaWV2ZSBjaGlsZHJlbiBvZi4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBwYXJlbnQgSURzIG9mIGNvbW1lbnRzIHRvIHJldHJpZXZlIGNoaWxkcmVuIGZvci4gKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgKm5vdCogdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2VhcmNoIHRlcm0ocykgdG8gcmV0cmlldmUgbWF0Y2hpbmcgY29tbWVudHMgZm9yLiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbW1lbnQgc3RhdHVzIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBmb3IgYSBzcGVjaWZpYyB1c2VyIElELiAqL1xuICB1c2VySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIERldGFpbHMgb2YgYW4gYXZhaWxhYmxlIHNpemUgZm9yIGEgbWVkaWEgaXRlbSAqL1xuZXhwb3J0IHR5cGUgTWVkaWFTaXplID0ge1xuICBfX3R5cGVuYW1lPzogJ01lZGlhU2l6ZSc7XG4gIC8qKiBUaGUgZmlsZW5hbWUgb2YgdGhlIHJlZmVyZW5jZWQgc2l6ZSAqL1xuICBmaWxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBmaWxlc2l6ZSBvZiB0aGUgcmVzb3VyY2UgKi9cbiAgZmlsZVNpemU/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGhlaWdodCBvZiB0aGUgcmVmZXJlbmNlZCBzaXplICovXG4gIGhlaWdodD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbWltZSB0eXBlIG9mIHRoZSByZWZlcmVuY2VkIHNpemUgKi9cbiAgbWltZVR5cGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlZmVyZW5jZWQgc2l6ZSBuYW1lICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVybCBvZiB0aGUgcmVmZXJlbmNlZCBzaXplICovXG4gIHNvdXJjZVVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgd2lkdGggb2YgdGhlIHJlZmVyZW5jZWQgc2l6ZSAqL1xuICB3aWR0aD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogTWVudXMgYXJlIHRoZSBjb250YWluZXJzIGZvciBuYXZpZ2F0aW9uIGl0ZW1zLiBNZW51cyBjYW4gYmUgYXNzaWduZWQgdG8gbWVudSBsb2NhdGlvbnMsIHdoaWNoIGFyZSB0eXBpY2FsbHkgcmVnaXN0ZXJlZCBieSB0aGUgYWN0aXZlIHRoZW1lLiAqL1xuZXhwb3J0IHR5cGUgTWVudSA9IERhdGFiYXNlSWRlbnRpZmllciAmIE5vZGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVudSc7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIGl0ZW1zIGluIHRoZSBtZW51ICovXG4gIGNvdW50PzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBzdG9yZWQgaW4gdGhlIGRhdGFiYXNlICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgbmF2IG1lbnUgb2JqZWN0LiAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBsb2NhdGlvbnMgYSBtZW51IGlzIGFzc2lnbmVkIHRvICovXG4gIGxvY2F0aW9ucz86IE1heWJlPEFycmF5PE1heWJlPE1lbnVMb2NhdGlvbkVudW0+Pj47XG4gIC8qKlxuICAgKiBXUCBJRCBvZiB0aGUgbmF2IG1lbnUuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGRhdGFiYXNlSWQgZmllbGRcbiAgICovXG4gIG1lbnVJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lbnUgdHlwZSBhbmQgdGhlIE1lbnVJdGVtIHR5cGUgKi9cbiAgbWVudUl0ZW1zPzogTWF5YmU8TWVudVRvTWVudUl0ZW1Db25uZWN0aW9uPjtcbiAgLyoqIERpc3BsYXkgbmFtZSBvZiB0aGUgbWVudS4gRXF1aXZhbGVudCB0byBXUF9UZXJtLSZndDtuYW1lLiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1cmwgZnJpZW5kbHkgbmFtZSBvZiB0aGUgbWVudS4gRXF1aXZhbGVudCB0byBXUF9UZXJtLSZndDtzbHVnICovXG4gIHNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuXG4vKiogTWVudXMgYXJlIHRoZSBjb250YWluZXJzIGZvciBuYXZpZ2F0aW9uIGl0ZW1zLiBNZW51cyBjYW4gYmUgYXNzaWduZWQgdG8gbWVudSBsb2NhdGlvbnMsIHdoaWNoIGFyZSB0eXBpY2FsbHkgcmVnaXN0ZXJlZCBieSB0aGUgYWN0aXZlIHRoZW1lLiAqL1xuZXhwb3J0IHR5cGUgTWVudU1lbnVJdGVtc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxNZW51VG9NZW51SXRlbUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gTWVudSBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgTWVudUNvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBNZW51IE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxNZW51Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBNZW51IE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxNZW51PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogTWVudUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBNZW51ICovXG5leHBvcnQgdHlwZSBNZW51Q29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIE1lbnUgTm9kZSAqL1xuICBub2RlOiBNZW51O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIE1lbnVDb25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgTWVudUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBOYXZpZ2F0aW9uIG1lbnUgaXRlbXMgYXJlIHRoZSBpbmRpdmlkdWFsIGl0ZW1zIGFzc2lnbmVkIHRvIGEgbWVudS4gVGhlc2UgYXJlIHJlbmRlcmVkIGFzIHRoZSBsaW5rcyBpbiBhIG5hdmlnYXRpb24gbWVudS4gKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtID0gRGF0YWJhc2VJZGVudGlmaWVyICYgTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdNZW51SXRlbSc7XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lbnVJdGVtIHR5cGUgYW5kIHRoZSBNZW51SXRlbSB0eXBlICovXG4gIGNoaWxkSXRlbXM/OiBNYXliZTxNZW51SXRlbVRvTWVudUl0ZW1Db25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gZnJvbSBNZW51SXRlbSB0byBpdCYjMDM5O3MgY29ubmVjdGVkIG5vZGUgKi9cbiAgY29ubmVjdGVkTm9kZT86IE1heWJlPE1lbnVJdGVtVG9NZW51SXRlbUxpbmthYmxlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKipcbiAgICogVGhlIG9iamVjdCBjb25uZWN0ZWQgdG8gdGhpcyBtZW51IGl0ZW0uXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGNvbm5lY3RlZE5vZGUgZmllbGRcbiAgICovXG4gIGNvbm5lY3RlZE9iamVjdD86IE1heWJlPE1lbnVJdGVtT2JqZWN0VW5pb24+O1xuICAvKiogQ2xhc3MgYXR0cmlidXRlIGZvciB0aGUgbWVudSBpdGVtIGxpbmsgKi9cbiAgY3NzQ2xhc3Nlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBzdG9yZWQgaW4gdGhlIGRhdGFiYXNlICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSBtZW51IGl0ZW0uICovXG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgbmF2IG1lbnUgaXRlbSBvYmplY3QuICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgb3IgdGl0bGUgb2YgdGhlIG1lbnUgaXRlbS4gKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGluayByZWxhdGlvbnNoaXAgKFhGTikgb2YgdGhlIG1lbnUgaXRlbS4gKi9cbiAgbGlua1JlbGF0aW9uc2hpcD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbG9jYXRpb25zIHRoZSBtZW51IGl0ZW0mIzAzOTtzIE1lbnUgaXMgYXNzaWduZWQgdG8gKi9cbiAgbG9jYXRpb25zPzogTWF5YmU8QXJyYXk8TWF5YmU8TWVudUxvY2F0aW9uRW51bT4+PjtcbiAgLyoqIFRoZSBNZW51IGEgTWVudUl0ZW0gaXMgcGFydCBvZiAqL1xuICBtZW51PzogTWF5YmU8TWVudUl0ZW1Ub01lbnVDb25uZWN0aW9uRWRnZT47XG4gIC8qKlxuICAgKiBXUCBJRCBvZiB0aGUgbWVudSBpdGVtLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBkYXRhYmFzZUlkIGZpZWxkXG4gICAqL1xuICBtZW51SXRlbUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIE1lbnUgaXRlbSBvcmRlciAqL1xuICBvcmRlcj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWQgb2YgdGhlIHBhcmVudCBtZW51IGl0ZW0gb3IgbnVsbCBpZiBpdCBpcyB0aGUgcm9vdCAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGFyZW50IG5hdiBtZW51IGl0ZW0gb2JqZWN0LiAqL1xuICBwYXJlbnRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFBhdGggZm9yIHRoZSByZXNvdXJjZS4gUmVsYXRpdmUgcGF0aCBmb3IgaW50ZXJuYWwgcmVzb3VyY2VzLiBBYnNvbHV0ZSBwYXRoIGZvciBleHRlcm5hbCByZXNvdXJjZXMuICovXG4gIHBhdGg/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGFyZ2V0IGF0dHJpYnV0ZSBmb3IgdGhlIG1lbnUgaXRlbSBsaW5rLiAqL1xuICB0YXJnZXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGl0bGUgYXR0cmlidXRlIGZvciB0aGUgbWVudSBpdGVtIGxpbmsgKi9cbiAgdGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVyaSBvZiB0aGUgcmVzb3VyY2UgdGhlIG1lbnUgaXRlbSBsaW5rcyB0byAqL1xuICB1cmk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVVJMIG9yIGRlc3RpbmF0aW9uIG9mIHRoZSBtZW51IGl0ZW0uICovXG4gIHVybD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBOYXZpZ2F0aW9uIG1lbnUgaXRlbXMgYXJlIHRoZSBpbmRpdmlkdWFsIGl0ZW1zIGFzc2lnbmVkIHRvIGEgbWVudS4gVGhlc2UgYXJlIHJlbmRlcmVkIGFzIHRoZSBsaW5rcyBpbiBhIG5hdmlnYXRpb24gbWVudS4gKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtQ2hpbGRJdGVtc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxNZW51SXRlbVRvTWVudUl0ZW1Db25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIHRvIE1lbnVJdGVtIE5vZGVzICovXG5leHBvcnQgdHlwZSBNZW51SXRlbUNvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBNZW51SXRlbSBOb2RlcyAqL1xuICBlZGdlczogQXJyYXk8TWVudUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIE1lbnVJdGVtIE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxNZW51SXRlbT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IE1lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIE1lbnVJdGVtICovXG5leHBvcnQgdHlwZSBNZW51SXRlbUNvbm5lY3Rpb25FZGdlID0ge1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNvbm5lY3RlZCBNZW51SXRlbSBOb2RlICovXG4gIG5vZGU6IE1lbnVJdGVtO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIE1lbnVJdGVtQ29ubmVjdGlvbkVkZ2UgKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIE5vZGVzIHRoYXQgY2FuIGJlIGxpbmtlZCB0byBhcyBNZW51IEl0ZW1zICovXG5leHBvcnQgdHlwZSBNZW51SXRlbUxpbmthYmxlID0ge1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgc3RvcmVkIGluIHRoZSBkYXRhYmFzZSAqL1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIFRlcm0gKi9cbiAgaXNUZXJtTm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgdGVtcGxhdGVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBNZW51SXRlbUxpbmthYmxlICovXG5leHBvcnQgdHlwZSBNZW51SXRlbUxpbmthYmxlQ29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIE1lbnVJdGVtTGlua2FibGUgTm9kZSAqL1xuICBub2RlOiBNZW51SXRlbUxpbmthYmxlO1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSBub2RlLiBEZWZhdWx0IGlzIFwiSURcIi4gVG8gYmUgdXNlZCBhbG9uZyB3aXRoIHRoZSBcImlkXCIgZmllbGQuICovXG5leHBvcnQgZW51bSBNZW51SXRlbU5vZGVJZFR5cGVFbnVtIHtcbiAgLyoqIElkZW50aWZ5IGEgcmVzb3VyY2UgYnkgdGhlIERhdGFiYXNlIElELiAqL1xuICBEYXRhYmFzZUlkID0gJ0RBVEFCQVNFX0lEJyxcbiAgLyoqIElkZW50aWZ5IGEgcmVzb3VyY2UgYnkgdGhlIChoYXNoZWQpIEdsb2JhbCBJRC4gKi9cbiAgSWQgPSAnSUQnXG59XG5cbi8qKiBEZXByZWNhdGVkIGluIGZhdm9yIG9mIE1lbnVJdGVtTGlua2VhYmxlIEludGVyZmFjZSAqL1xuZXhwb3J0IHR5cGUgTWVudUl0ZW1PYmplY3RVbmlvbiA9IENhdGVnb3J5IHwgUGFnZSB8IFBvc3QgfCBUYWc7XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lbnVJdGVtIHR5cGUgYW5kIHRoZSBNZW51IHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtVG9NZW51Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgTWVudUNvbm5lY3Rpb25FZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ01lbnVJdGVtVG9NZW51Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IE1lbnU7XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBNZW51SXRlbSB0eXBlIGFuZCB0aGUgTWVudUl0ZW0gdHlwZSAqL1xuZXhwb3J0IHR5cGUgTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBNZW51SXRlbUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIE1lbnVJdGVtVG9NZW51SXRlbUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8TWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8TWVudUl0ZW0+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBNZW51SXRlbVRvTWVudUl0ZW1Db25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtVG9NZW51SXRlbUNvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE1lbnVJdGVtQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IE1lbnVJdGVtO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7TWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvID0gTWVudUl0ZW1Db25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgTWVudUl0ZW1Ub01lbnVJdGVtQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBNZW51SXRlbVRvTWVudUl0ZW1Db25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBtZW51IGxvY2F0aW9uIGZvciB0aGUgbWVudSBiZWluZyBxdWVyaWVkICovXG4gIGxvY2F0aW9uPzogSW5wdXRNYXliZTxNZW51TG9jYXRpb25FbnVtPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBJRCBvZiB0aGUgcGFyZW50IG1lbnUgb2JqZWN0ICovXG4gIHBhcmVudERhdGFiYXNlSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgcGFyZW50IG1lbnUgb2JqZWN0ICovXG4gIHBhcmVudElkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lbnVJdGVtIHR5cGUgYW5kIHRoZSBNZW51SXRlbUxpbmthYmxlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lbnVJdGVtVG9NZW51SXRlbUxpbmthYmxlQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgTWVudUl0ZW1MaW5rYWJsZUNvbm5lY3Rpb25FZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ01lbnVJdGVtVG9NZW51SXRlbUxpbmthYmxlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IE1lbnVJdGVtTGlua2FibGU7XG59O1xuXG4vKiogUmVnaXN0ZXJlZCBtZW51IGxvY2F0aW9ucyAqL1xuZXhwb3J0IGVudW0gTWVudUxvY2F0aW9uRW51bSB7XG4gIC8qKiBQdXQgdGhlIG1lbnUgaW4gdGhlIGZvb3RlciBsb2NhdGlvbiAqL1xuICBGb290ZXIgPSAnRk9PVEVSJyxcbiAgLyoqIFB1dCB0aGUgbWVudSBpbiB0aGUgcHJpbWFyeSBsb2NhdGlvbiAqL1xuICBQcmltYXJ5ID0gJ1BSSU1BUlknXG59XG5cbi8qKiBUaGUgVHlwZSBvZiBJZGVudGlmaWVyIHVzZWQgdG8gZmV0Y2ggYSBzaW5nbGUgbm9kZS4gRGVmYXVsdCBpcyBcIklEXCIuIFRvIGJlIHVzZWQgYWxvbmcgd2l0aCB0aGUgXCJpZFwiIGZpZWxkLiAqL1xuZXhwb3J0IGVudW0gTWVudU5vZGVJZFR5cGVFbnVtIHtcbiAgLyoqIElkZW50aWZ5IGEgbWVudSBub2RlIGJ5IHRoZSBEYXRhYmFzZSBJRC4gKi9cbiAgRGF0YWJhc2VJZCA9ICdEQVRBQkFTRV9JRCcsXG4gIC8qKiBJZGVudGlmeSBhIG1lbnUgbm9kZSBieSB0aGUgKGhhc2hlZCkgR2xvYmFsIElELiAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBJZGVudGlmeSBhIG1lbnUgbm9kZSBieSB0aGUgc2x1ZyBvZiBtZW51IGxvY2F0aW9uIHRvIHdoaWNoIGl0IGlzIGFzc2lnbmVkICovXG4gIExvY2F0aW9uID0gJ0xPQ0FUSU9OJyxcbiAgLyoqIElkZW50aWZ5IGEgbWVudSBub2RlIGJ5IGl0cyBuYW1lICovXG4gIE5hbWUgPSAnTkFNRScsXG4gIC8qKiBJZGVudGlmeSBhIG1lbnUgbm9kZSBieSBpdHMgc2x1ZyAqL1xuICBTbHVnID0gJ1NMVUcnXG59XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE1lbnUgdHlwZSBhbmQgdGhlIE1lbnVJdGVtIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE1lbnVUb01lbnVJdGVtQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBNZW51SXRlbUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnTWVudVRvTWVudUl0ZW1Db25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgTWVudVRvTWVudUl0ZW1Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PE1lbnVUb01lbnVJdGVtQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8TWVudUl0ZW0+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBNZW51VG9NZW51SXRlbUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgTWVudVRvTWVudUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZW51SXRlbUNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ01lbnVUb01lbnVJdGVtQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IE1lbnVJdGVtO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7TWVudVRvTWVudUl0ZW1Db25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBNZW51VG9NZW51SXRlbUNvbm5lY3Rpb25QYWdlSW5mbyA9IE1lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ01lbnVUb01lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgTWVudVRvTWVudUl0ZW1Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIE1lbnVUb01lbnVJdGVtQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgbWVudSBsb2NhdGlvbiBmb3IgdGhlIG1lbnUgYmVpbmcgcXVlcmllZCAqL1xuICBsb2NhdGlvbj86IElucHV0TWF5YmU8TWVudUxvY2F0aW9uRW51bT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgSUQgb2YgdGhlIHBhcmVudCBtZW51IG9iamVjdCAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhcmVudCBtZW51IG9iamVjdCAqL1xuICBwYXJlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIE1pbWVUeXBlIG9mIHRoZSBvYmplY3QgKi9cbmV4cG9ydCBlbnVtIE1pbWVUeXBlRW51bSB7XG4gIC8qKiBhcHBsaWNhdGlvbi9qYXZhIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25KYXZhID0gJ0FQUExJQ0FUSU9OX0pBVkEnLFxuICAvKiogYXBwbGljYXRpb24vbXN3b3JkIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25Nc3dvcmQgPSAnQVBQTElDQVRJT05fTVNXT1JEJyxcbiAgLyoqIGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uT2N0ZXRTdHJlYW0gPSAnQVBQTElDQVRJT05fT0NURVRfU1RSRUFNJyxcbiAgLyoqIGFwcGxpY2F0aW9uL29uZW5vdGUgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvbk9uZW5vdGUgPSAnQVBQTElDQVRJT05fT05FTk9URScsXG4gIC8qKiBhcHBsaWNhdGlvbi9veHBzIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25PeHBzID0gJ0FQUExJQ0FUSU9OX09YUFMnLFxuICAvKiogYXBwbGljYXRpb24vcGRmIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25QZGYgPSAnQVBQTElDQVRJT05fUERGJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3JhciBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uUmFyID0gJ0FQUExJQ0FUSU9OX1JBUicsXG4gIC8qKiBhcHBsaWNhdGlvbi9ydGYgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblJ0ZiA9ICdBUFBMSUNBVElPTl9SVEYnLFxuICAvKiogYXBwbGljYXRpb24vdHRhZit4bWwgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblR0YWZYbWwgPSAnQVBQTElDQVRJT05fVFRBRl9YTUwnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLmFwcGxlLmtleW5vdGUgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZEFwcGxlS2V5bm90ZSA9ICdBUFBMSUNBVElPTl9WTkRfQVBQTEVfS0VZTk9URScsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQuYXBwbGUubnVtYmVycyBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kQXBwbGVOdW1iZXJzID0gJ0FQUExJQ0FUSU9OX1ZORF9BUFBMRV9OVU1CRVJTJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5wYWdlcyBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kQXBwbGVQYWdlcyA9ICdBUFBMSUNBVElPTl9WTkRfQVBQTEVfUEFHRVMnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm1zLWFjY2VzcyBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNBY2Nlc3MgPSAnQVBQTElDQVRJT05fVk5EX01TX0FDQ0VTUycsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zRXhjZWwgPSAnQVBQTElDQVRJT05fVk5EX01TX0VYQ0VMJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5hZGRpbi5tYWNyb0VuYWJsZWQuMTIgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zRXhjZWxBZGRpbk1hY3JvZW5hYmxlZF8xMiA9ICdBUFBMSUNBVElPTl9WTkRfTVNfRVhDRUxfQURESU5fTUFDUk9FTkFCTEVEXzEyJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5zaGVldC5iaW5hcnkubWFjcm9FbmFibGVkLjEyIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRNc0V4Y2VsU2hlZXRCaW5hcnlNYWNyb2VuYWJsZWRfMTIgPSAnQVBQTElDQVRJT05fVk5EX01TX0VYQ0VMX1NIRUVUX0JJTkFSWV9NQUNST0VOQUJMRURfMTInLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLnNoZWV0Lm1hY3JvRW5hYmxlZC4xMiBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNFeGNlbFNoZWV0TWFjcm9lbmFibGVkXzEyID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19FWENFTF9TSEVFVF9NQUNST0VOQUJMRURfMTInLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLnRlbXBsYXRlLm1hY3JvRW5hYmxlZC4xMiBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNFeGNlbFRlbXBsYXRlTWFjcm9lbmFibGVkXzEyID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19FWENFTF9URU1QTEFURV9NQUNST0VOQUJMRURfMTInLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnQgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zUG93ZXJwb2ludCA9ICdBUFBMSUNBVElPTl9WTkRfTVNfUE9XRVJQT0lOVCcsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5hZGRpbi5tYWNyb0VuYWJsZWQuMTIgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zUG93ZXJwb2ludEFkZGluTWFjcm9lbmFibGVkXzEyID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19QT1dFUlBPSU5UX0FERElOX01BQ1JPRU5BQkxFRF8xMicsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5wcmVzZW50YXRpb24ubWFjcm9FbmFibGVkLjEyIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRNc1Bvd2VycG9pbnRQcmVzZW50YXRpb25NYWNyb2VuYWJsZWRfMTIgPSAnQVBQTElDQVRJT05fVk5EX01TX1BPV0VSUE9JTlRfUFJFU0VOVEFUSU9OX01BQ1JPRU5BQkxFRF8xMicsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5zbGlkZXNob3cubWFjcm9FbmFibGVkLjEyIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRNc1Bvd2VycG9pbnRTbGlkZXNob3dNYWNyb2VuYWJsZWRfMTIgPSAnQVBQTElDQVRJT05fVk5EX01TX1BPV0VSUE9JTlRfU0xJREVTSE9XX01BQ1JPRU5BQkxFRF8xMicsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5zbGlkZS5tYWNyb0VuYWJsZWQuMTIgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zUG93ZXJwb2ludFNsaWRlTWFjcm9lbmFibGVkXzEyID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19QT1dFUlBPSU5UX1NMSURFX01BQ1JPRU5BQkxFRF8xMicsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC50ZW1wbGF0ZS5tYWNyb0VuYWJsZWQuMTIgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE1zUG93ZXJwb2ludFRlbXBsYXRlTWFjcm9lbmFibGVkXzEyID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19QT1dFUlBPSU5UX1RFTVBMQVRFX01BQ1JPRU5BQkxFRF8xMicsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQubXMtcHJvamVjdCBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNQcm9qZWN0ID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19QUk9KRUNUJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5tcy13b3JkLmRvY3VtZW50Lm1hY3JvRW5hYmxlZC4xMiBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNXb3JkRG9jdW1lbnRNYWNyb2VuYWJsZWRfMTIgPSAnQVBQTElDQVRJT05fVk5EX01TX1dPUkRfRE9DVU1FTlRfTUFDUk9FTkFCTEVEXzEyJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5tcy13b3JkLnRlbXBsYXRlLm1hY3JvRW5hYmxlZC4xMiBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNXb3JkVGVtcGxhdGVNYWNyb2VuYWJsZWRfMTIgPSAnQVBQTElDQVRJT05fVk5EX01TX1dPUkRfVEVNUExBVEVfTUFDUk9FTkFCTEVEXzEyJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5tcy13cml0ZSBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kTXNXcml0ZSA9ICdBUFBMSUNBVElPTl9WTkRfTVNfV1JJVEUnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm1zLXhwc2RvY3VtZW50IG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRNc1hwc2RvY3VtZW50ID0gJ0FQUExJQ0FUSU9OX1ZORF9NU19YUFNET0NVTUVOVCcsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmNoYXJ0IG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRPYXNpc09wZW5kb2N1bWVudENoYXJ0ID0gJ0FQUExJQ0FUSU9OX1ZORF9PQVNJU19PUEVORE9DVU1FTlRfQ0hBUlQnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5kYXRhYmFzZSBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kT2FzaXNPcGVuZG9jdW1lbnREYXRhYmFzZSA9ICdBUFBMSUNBVElPTl9WTkRfT0FTSVNfT1BFTkRPQ1VNRU5UX0RBVEFCQVNFJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuZm9ybXVsYSBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kT2FzaXNPcGVuZG9jdW1lbnRGb3JtdWxhID0gJ0FQUExJQ0FUSU9OX1ZORF9PQVNJU19PUEVORE9DVU1FTlRfRk9STVVMQScsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmdyYXBoaWNzIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRPYXNpc09wZW5kb2N1bWVudEdyYXBoaWNzID0gJ0FQUExJQ0FUSU9OX1ZORF9PQVNJU19PUEVORE9DVU1FTlRfR1JBUEhJQ1MnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5wcmVzZW50YXRpb24gbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9hc2lzT3BlbmRvY3VtZW50UHJlc2VudGF0aW9uID0gJ0FQUExJQ0FUSU9OX1ZORF9PQVNJU19PUEVORE9DVU1FTlRfUFJFU0VOVEFUSU9OJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuc3ByZWFkc2hlZXQgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9hc2lzT3BlbmRvY3VtZW50U3ByZWFkc2hlZXQgPSAnQVBQTElDQVRJT05fVk5EX09BU0lTX09QRU5ET0NVTUVOVF9TUFJFQURTSEVFVCcsXG4gIC8qKiBhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHQgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9hc2lzT3BlbmRvY3VtZW50VGV4dCA9ICdBUFBMSUNBVElPTl9WTkRfT0FTSVNfT1BFTkRPQ1VNRU5UX1RFWFQnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnByZXNlbnRhdGlvbiBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kT3BlbnhtbGZvcm1hdHNPZmZpY2Vkb2N1bWVudFByZXNlbnRhdGlvbm1sUHJlc2VudGF0aW9uID0gJ0FQUExJQ0FUSU9OX1ZORF9PUEVOWE1MRk9STUFUU19PRkZJQ0VET0NVTUVOVF9QUkVTRU5UQVRJT05NTF9QUkVTRU5UQVRJT04nLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnNsaWRlIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRPcGVueG1sZm9ybWF0c09mZmljZWRvY3VtZW50UHJlc2VudGF0aW9ubWxTbGlkZSA9ICdBUFBMSUNBVElPTl9WTkRfT1BFTlhNTEZPUk1BVFNfT0ZGSUNFRE9DVU1FTlRfUFJFU0VOVEFUSU9OTUxfU0xJREUnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnNsaWRlc2hvdyBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uVm5kT3BlbnhtbGZvcm1hdHNPZmZpY2Vkb2N1bWVudFByZXNlbnRhdGlvbm1sU2xpZGVzaG93ID0gJ0FQUExJQ0FUSU9OX1ZORF9PUEVOWE1MRk9STUFUU19PRkZJQ0VET0NVTUVOVF9QUkVTRU5UQVRJT05NTF9TTElERVNIT1cnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnRlbXBsYXRlIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25WbmRPcGVueG1sZm9ybWF0c09mZmljZWRvY3VtZW50UHJlc2VudGF0aW9ubWxUZW1wbGF0ZSA9ICdBUFBMSUNBVElPTl9WTkRfT1BFTlhNTEZPUk1BVFNfT0ZGSUNFRE9DVU1FTlRfUFJFU0VOVEFUSU9OTUxfVEVNUExBVEUnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwuc2hlZXQgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9wZW54bWxmb3JtYXRzT2ZmaWNlZG9jdW1lbnRTcHJlYWRzaGVldG1sU2hlZXQgPSAnQVBQTElDQVRJT05fVk5EX09QRU5YTUxGT1JNQVRTX09GRklDRURPQ1VNRU5UX1NQUkVBRFNIRUVUTUxfU0hFRVQnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwudGVtcGxhdGUgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9wZW54bWxmb3JtYXRzT2ZmaWNlZG9jdW1lbnRTcHJlYWRzaGVldG1sVGVtcGxhdGUgPSAnQVBQTElDQVRJT05fVk5EX09QRU5YTUxGT1JNQVRTX09GRklDRURPQ1VNRU5UX1NQUkVBRFNIRUVUTUxfVEVNUExBVEUnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LndvcmRwcm9jZXNzaW5nbWwuZG9jdW1lbnQgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9wZW54bWxmb3JtYXRzT2ZmaWNlZG9jdW1lbnRXb3JkcHJvY2Vzc2luZ21sRG9jdW1lbnQgPSAnQVBQTElDQVRJT05fVk5EX09QRU5YTUxGT1JNQVRTX09GRklDRURPQ1VNRU5UX1dPUkRQUk9DRVNTSU5HTUxfRE9DVU1FTlQnLFxuICAvKiogYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LndvcmRwcm9jZXNzaW5nbWwudGVtcGxhdGUgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvblZuZE9wZW54bWxmb3JtYXRzT2ZmaWNlZG9jdW1lbnRXb3JkcHJvY2Vzc2luZ21sVGVtcGxhdGUgPSAnQVBQTElDQVRJT05fVk5EX09QRU5YTUxGT1JNQVRTX09GRklDRURPQ1VNRU5UX1dPUkRQUk9DRVNTSU5HTUxfVEVNUExBVEUnLFxuICAvKiogYXBwbGljYXRpb24vd29yZHBlcmZlY3QgbWltZSB0eXBlLiAqL1xuICBBcHBsaWNhdGlvbldvcmRwZXJmZWN0ID0gJ0FQUExJQ0FUSU9OX1dPUkRQRVJGRUNUJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3gtN3otY29tcHJlc3NlZCBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uWF83WkNvbXByZXNzZWQgPSAnQVBQTElDQVRJT05fWF83Wl9DT01QUkVTU0VEJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3gtZ3ppcCBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uWEd6aXAgPSAnQVBQTElDQVRJT05fWF9HWklQJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3gtdGFyIG1pbWUgdHlwZS4gKi9cbiAgQXBwbGljYXRpb25YVGFyID0gJ0FQUExJQ0FUSU9OX1hfVEFSJyxcbiAgLyoqIGFwcGxpY2F0aW9uL3ppcCBtaW1lIHR5cGUuICovXG4gIEFwcGxpY2F0aW9uWmlwID0gJ0FQUExJQ0FUSU9OX1pJUCcsXG4gIC8qKiBhdWRpby9hYWMgbWltZSB0eXBlLiAqL1xuICBBdWRpb0FhYyA9ICdBVURJT19BQUMnLFxuICAvKiogYXVkaW8vZmxhYyBtaW1lIHR5cGUuICovXG4gIEF1ZGlvRmxhYyA9ICdBVURJT19GTEFDJyxcbiAgLyoqIGF1ZGlvL21pZGkgbWltZSB0eXBlLiAqL1xuICBBdWRpb01pZGkgPSAnQVVESU9fTUlESScsXG4gIC8qKiBhdWRpby9tcGVnIG1pbWUgdHlwZS4gKi9cbiAgQXVkaW9NcGVnID0gJ0FVRElPX01QRUcnLFxuICAvKiogYXVkaW8vb2dnIG1pbWUgdHlwZS4gKi9cbiAgQXVkaW9PZ2cgPSAnQVVESU9fT0dHJyxcbiAgLyoqIGF1ZGlvL3dhdiBtaW1lIHR5cGUuICovXG4gIEF1ZGlvV2F2ID0gJ0FVRElPX1dBVicsXG4gIC8qKiBhdWRpby94LW1hdHJvc2thIG1pbWUgdHlwZS4gKi9cbiAgQXVkaW9YTWF0cm9za2EgPSAnQVVESU9fWF9NQVRST1NLQScsXG4gIC8qKiBhdWRpby94LW1zLXdheCBtaW1lIHR5cGUuICovXG4gIEF1ZGlvWE1zV2F4ID0gJ0FVRElPX1hfTVNfV0FYJyxcbiAgLyoqIGF1ZGlvL3gtbXMtd21hIG1pbWUgdHlwZS4gKi9cbiAgQXVkaW9YTXNXbWEgPSAnQVVESU9fWF9NU19XTUEnLFxuICAvKiogYXVkaW8veC1yZWFsYXVkaW8gbWltZSB0eXBlLiAqL1xuICBBdWRpb1hSZWFsYXVkaW8gPSAnQVVESU9fWF9SRUFMQVVESU8nLFxuICAvKiogaW1hZ2UvYXZpZiBtaW1lIHR5cGUuICovXG4gIEltYWdlQXZpZiA9ICdJTUFHRV9BVklGJyxcbiAgLyoqIGltYWdlL2JtcCBtaW1lIHR5cGUuICovXG4gIEltYWdlQm1wID0gJ0lNQUdFX0JNUCcsXG4gIC8qKiBpbWFnZS9naWYgbWltZSB0eXBlLiAqL1xuICBJbWFnZUdpZiA9ICdJTUFHRV9HSUYnLFxuICAvKiogaW1hZ2UvaGVpYyBtaW1lIHR5cGUuICovXG4gIEltYWdlSGVpYyA9ICdJTUFHRV9IRUlDJyxcbiAgLyoqIGltYWdlL2pwZWcgbWltZSB0eXBlLiAqL1xuICBJbWFnZUpwZWcgPSAnSU1BR0VfSlBFRycsXG4gIC8qKiBpbWFnZS9wbmcgbWltZSB0eXBlLiAqL1xuICBJbWFnZVBuZyA9ICdJTUFHRV9QTkcnLFxuICAvKiogaW1hZ2UvdGlmZiBtaW1lIHR5cGUuICovXG4gIEltYWdlVGlmZiA9ICdJTUFHRV9USUZGJyxcbiAgLyoqIGltYWdlL3dlYnAgbWltZSB0eXBlLiAqL1xuICBJbWFnZVdlYnAgPSAnSU1BR0VfV0VCUCcsXG4gIC8qKiBpbWFnZS94LWljb24gbWltZSB0eXBlLiAqL1xuICBJbWFnZVhJY29uID0gJ0lNQUdFX1hfSUNPTicsXG4gIC8qKiB0ZXh0L2NhbGVuZGFyIG1pbWUgdHlwZS4gKi9cbiAgVGV4dENhbGVuZGFyID0gJ1RFWFRfQ0FMRU5EQVInLFxuICAvKiogdGV4dC9jc3MgbWltZSB0eXBlLiAqL1xuICBUZXh0Q3NzID0gJ1RFWFRfQ1NTJyxcbiAgLyoqIHRleHQvY3N2IG1pbWUgdHlwZS4gKi9cbiAgVGV4dENzdiA9ICdURVhUX0NTVicsXG4gIC8qKiB0ZXh0L3BsYWluIG1pbWUgdHlwZS4gKi9cbiAgVGV4dFBsYWluID0gJ1RFWFRfUExBSU4nLFxuICAvKiogdGV4dC9yaWNodGV4dCBtaW1lIHR5cGUuICovXG4gIFRleHRSaWNodGV4dCA9ICdURVhUX1JJQ0hURVhUJyxcbiAgLyoqIHRleHQvdGFiLXNlcGFyYXRlZC12YWx1ZXMgbWltZSB0eXBlLiAqL1xuICBUZXh0VGFiU2VwYXJhdGVkVmFsdWVzID0gJ1RFWFRfVEFCX1NFUEFSQVRFRF9WQUxVRVMnLFxuICAvKiogdGV4dC92dHQgbWltZSB0eXBlLiAqL1xuICBUZXh0VnR0ID0gJ1RFWFRfVlRUJyxcbiAgLyoqIHZpZGVvLzNncHAgbWltZSB0eXBlLiAqL1xuICBWaWRlb18zR3BwID0gJ1ZJREVPXzNHUFAnLFxuICAvKiogdmlkZW8vM2dwcDIgbWltZSB0eXBlLiAqL1xuICBWaWRlb18zR3BwMiA9ICdWSURFT18zR1BQMicsXG4gIC8qKiB2aWRlby9hdmkgbWltZSB0eXBlLiAqL1xuICBWaWRlb0F2aSA9ICdWSURFT19BVkknLFxuICAvKiogdmlkZW8vZGl2eCBtaW1lIHR5cGUuICovXG4gIFZpZGVvRGl2eCA9ICdWSURFT19ESVZYJyxcbiAgLyoqIHZpZGVvL21wNCBtaW1lIHR5cGUuICovXG4gIFZpZGVvTXA0ID0gJ1ZJREVPX01QNCcsXG4gIC8qKiB2aWRlby9tcGVnIG1pbWUgdHlwZS4gKi9cbiAgVmlkZW9NcGVnID0gJ1ZJREVPX01QRUcnLFxuICAvKiogdmlkZW8vb2dnIG1pbWUgdHlwZS4gKi9cbiAgVmlkZW9PZ2cgPSAnVklERU9fT0dHJyxcbiAgLyoqIHZpZGVvL3F1aWNrdGltZSBtaW1lIHR5cGUuICovXG4gIFZpZGVvUXVpY2t0aW1lID0gJ1ZJREVPX1FVSUNLVElNRScsXG4gIC8qKiB2aWRlby93ZWJtIG1pbWUgdHlwZS4gKi9cbiAgVmlkZW9XZWJtID0gJ1ZJREVPX1dFQk0nLFxuICAvKiogdmlkZW8veC1mbHYgbWltZSB0eXBlLiAqL1xuICBWaWRlb1hGbHYgPSAnVklERU9fWF9GTFYnLFxuICAvKiogdmlkZW8veC1tYXRyb3NrYSBtaW1lIHR5cGUuICovXG4gIFZpZGVvWE1hdHJvc2thID0gJ1ZJREVPX1hfTUFUUk9TS0EnLFxuICAvKiogdmlkZW8veC1tcy1hc2YgbWltZSB0eXBlLiAqL1xuICBWaWRlb1hNc0FzZiA9ICdWSURFT19YX01TX0FTRicsXG4gIC8qKiB2aWRlby94LW1zLXdtIG1pbWUgdHlwZS4gKi9cbiAgVmlkZW9YTXNXbSA9ICdWSURFT19YX01TX1dNJyxcbiAgLyoqIHZpZGVvL3gtbXMtd212IG1pbWUgdHlwZS4gKi9cbiAgVmlkZW9YTXNXbXYgPSAnVklERU9fWF9NU19XTVYnLFxuICAvKiogdmlkZW8veC1tcy13bXggbWltZSB0eXBlLiAqL1xuICBWaWRlb1hNc1dteCA9ICdWSURFT19YX01TX1dNWCdcbn1cblxuZXhwb3J0IHR5cGUgTmlja2VsQnJvbnhHbG9iYWxTZXR0aW5ncyA9IEFjZk9wdGlvbnNQYWdlICYgTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdOaWNrZWxCcm9ueEdsb2JhbFNldHRpbmdzJztcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICBtZW51VGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICBwYWdlVGl0bGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICBwYXJlbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBOaWNrZWxCcm9ueEhlYWRlciA9IEFjZk9wdGlvbnNQYWdlICYgTm9kZSAmIFdpdGhBY2ZDb25maWcgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTmlja2VsQnJvbnhIZWFkZXInO1xuICAvKiogRmllbGRzIG9mIHRoZSBDb25maWcgQUNGIEZpZWxkIEdyb3VwICovXG4gIGNvbmZpZz86IE1heWJlPENvbmZpZz47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgbWVudVRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgcGFnZVRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFuIG9iamVjdCB3aXRoIGFuIElEICovXG5leHBvcnQgdHlwZSBOb2RlID0ge1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBJRCBmb3IgdGhlIG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG59O1xuXG4vKiogQSBub2RlIHRoYXQgY2FuIGhhdmUgYW4gYXV0aG9yIGFzc2lnbmVkIHRvIGl0ICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aEF1dGhvciA9IHtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhBdXRob3IgdHlwZSBhbmQgdGhlIFVzZXIgdHlwZSAqL1xuICBhdXRob3I/OiBNYXliZTxOb2RlV2l0aEF1dGhvclRvVXNlckNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBpZGVudGlmaWVyIG9mIHRoZSBhdXRob3Igb2YgdGhlIG5vZGUgKi9cbiAgYXV0aG9yRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGF1dGhvciBvZiB0aGUgbm9kZSAqL1xuICBhdXRob3JJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhBdXRob3IgdHlwZSBhbmQgdGhlIFVzZXIgdHlwZSAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhBdXRob3JUb1VzZXJDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBPbmVUb09uZUNvbm5lY3Rpb24gJiBVc2VyQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnTm9kZVdpdGhBdXRob3JUb1VzZXJDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogVXNlcjtcbn07XG5cbi8qKiBBIG5vZGUgdGhhdCBjYW4gaGF2ZSBjb21tZW50cyBhc3NvY2lhdGVkIHdpdGggaXQgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoQ29tbWVudHMgPSB7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIGNvbW1lbnRzLiBFdmVuIHRob3VnaCBXUEdyYXBoUUwgZGVub3RlcyB0aGlzIGZpZWxkIGFzIGFuIGludGVnZXIsIGluIFdvcmRQcmVzcyB0aGlzIGZpZWxkIHNob3VsZCBiZSBzYXZlZCBhcyBhIG51bWVyaWMgc3RyaW5nIGZvciBjb21wYXRpYmlsaXR5LiAqL1xuICBjb21tZW50Q291bnQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgY29tbWVudHMgYXJlIG9wZW4gb3IgY2xvc2VkIGZvciB0aGlzIHBhcnRpY3VsYXIgcG9zdC4gKi9cbiAgY29tbWVudFN0YXR1cz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbn07XG5cbi8qKiBBIG5vZGUgdGhhdCBzdXBwb3J0cyB0aGUgY29udGVudCBlZGl0b3IgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoQ29udGVudEVkaXRvciA9IHtcbiAgLyoqIFRoZSBjb250ZW50IG9mIHRoZSBwb3N0LiAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xufTtcblxuXG4vKiogQSBub2RlIHRoYXQgc3VwcG9ydHMgdGhlIGNvbnRlbnQgZWRpdG9yICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aENvbnRlbnRFZGl0b3JDb250ZW50QXJncyA9IHtcbiAgZm9ybWF0PzogSW5wdXRNYXliZTxQb3N0T2JqZWN0RmllbGRGb3JtYXRFbnVtPjtcbn07XG5cbi8qKiBOb2RlIHRoYXQgaGFzIGNvbnRlbnQgYmxvY2tzIGFzc29jaWF0ZWQgd2l0aCBpdCAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhFZGl0b3JCbG9ja3MgPSB7XG4gIC8qKiBMaXN0IG9mIGVkaXRvciBibG9ja3MgKi9cbiAgZWRpdG9yQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG59O1xuXG5cbi8qKiBOb2RlIHRoYXQgaGFzIGNvbnRlbnQgYmxvY2tzIGFzc29jaWF0ZWQgd2l0aCBpdCAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhFZGl0b3JCbG9ja3NFZGl0b3JCbG9ja3NBcmdzID0ge1xuICBmbGF0PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIEEgbm9kZSB0aGF0IGNhbiBoYXZlIGFuIGV4Y2VycHQgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoRXhjZXJwdCA9IHtcbiAgLyoqIFRoZSBleGNlcnB0IG9mIHRoZSBwb3N0LiAqL1xuICBleGNlcnB0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xufTtcblxuXG4vKiogQSBub2RlIHRoYXQgY2FuIGhhdmUgYW4gZXhjZXJwdCAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhFeGNlcnB0RXhjZXJwdEFyZ3MgPSB7XG4gIGZvcm1hdD86IElucHV0TWF5YmU8UG9zdE9iamVjdEZpZWxkRm9ybWF0RW51bT47XG59O1xuXG4vKiogQSBub2RlIHRoYXQgY2FuIGhhdmUgYSBmZWF0dXJlZCBpbWFnZSBzZXQgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoRmVhdHVyZWRJbWFnZSA9IHtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhGZWF0dXJlZEltYWdlIHR5cGUgYW5kIHRoZSBNZWRpYUl0ZW0gdHlwZSAqL1xuICBmZWF0dXJlZEltYWdlPzogTWF5YmU8Tm9kZVdpdGhGZWF0dXJlZEltYWdlVG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWRlbnRpZmllciBmb3IgdGhlIGZlYXR1cmVkIGltYWdlIG5vZGUgYXNzaWduZWQgdG8gdGhlIGNvbnRlbnQgbm9kZSAqL1xuICBmZWF0dXJlZEltYWdlRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBHbG9iYWxseSB1bmlxdWUgSUQgb2YgdGhlIGZlYXR1cmVkIGltYWdlIGFzc2lnbmVkIHRvIHRoZSBub2RlICovXG4gIGZlYXR1cmVkSW1hZ2VJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhGZWF0dXJlZEltYWdlIHR5cGUgYW5kIHRoZSBNZWRpYUl0ZW0gdHlwZSAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhGZWF0dXJlZEltYWdlVG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdOb2RlV2l0aEZlYXR1cmVkSW1hZ2VUb01lZGlhSXRlbUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBNZWRpYUl0ZW07XG59O1xuXG4vKiogQSBub2RlIHRoYXQgY2FuIGhhdmUgcGFnZSBhdHRyaWJ1dGVzICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aFBhZ2VBdHRyaWJ1dGVzID0ge1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBJRCBmb3IgdGhlIG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBBIGZpZWxkIHVzZWQgZm9yIG9yZGVyaW5nIHBvc3RzLiBUaGlzIGlzIHR5cGljYWxseSB1c2VkIHdpdGggbmF2IG1lbnUgaXRlbXMgb3IgZm9yIHNwZWNpYWwgb3JkZXJpbmcgb2YgaGllcmFyY2hpY2FsIGNvbnRlbnQgdHlwZXMuICovXG4gIG1lbnVPcmRlcj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG59O1xuXG4vKiogTm9kZSB0aGF0IGhhcyBQYWdlIGNvbnRlbnQgYmxvY2tzIGFzc29jaWF0ZWQgd2l0aCBpdCAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhQYWdlRWRpdG9yQmxvY2tzID0ge1xuICAvKiogTGlzdCBvZiBQYWdlIGVkaXRvciBibG9ja3MgKi9cbiAgZWRpdG9yQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8UGFnZUVkaXRvckJsb2NrPj4+O1xufTtcblxuXG4vKiogTm9kZSB0aGF0IGhhcyBQYWdlIGNvbnRlbnQgYmxvY2tzIGFzc29jaWF0ZWQgd2l0aCBpdCAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhQYWdlRWRpdG9yQmxvY2tzRWRpdG9yQmxvY2tzQXJncyA9IHtcbiAgZmxhdD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbn07XG5cbi8qKiBOb2RlIHRoYXQgaGFzIFBvc3QgY29udGVudCBibG9ja3MgYXNzb2NpYXRlZCB3aXRoIGl0ICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aFBvc3RFZGl0b3JCbG9ja3MgPSB7XG4gIC8qKiBMaXN0IG9mIFBvc3QgZWRpdG9yIGJsb2NrcyAqL1xuICBlZGl0b3JCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxQb3N0RWRpdG9yQmxvY2s+Pj47XG59O1xuXG5cbi8qKiBOb2RlIHRoYXQgaGFzIFBvc3QgY29udGVudCBibG9ja3MgYXNzb2NpYXRlZCB3aXRoIGl0ICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aFBvc3RFZGl0b3JCbG9ja3NFZGl0b3JCbG9ja3NBcmdzID0ge1xuICBmbGF0PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIEEgbm9kZSB0aGF0IGNhbiBoYXZlIHJldmlzaW9ucyAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhSZXZpc2lvbnMgPSB7XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFRydWUgaWYgdGhlIG5vZGUgaXMgYSByZXZpc2lvbiBvZiBhbm90aGVyIG5vZGUgKi9cbiAgaXNSZXZpc2lvbj86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogSWYgdGhlIGN1cnJlbnQgbm9kZSBpcyBhIHJldmlzaW9uLCB0aGlzIGZpZWxkIGV4cG9zZXMgdGhlIG5vZGUgdGhpcyBpcyBhIHJldmlzaW9uIG9mLiBSZXR1cm5zIG51bGwgaWYgdGhlIG5vZGUgaXMgbm90IGEgcmV2aXNpb24gb2YgYW5vdGhlciBub2RlLiAqL1xuICByZXZpc2lvbk9mPzogTWF5YmU8Tm9kZVdpdGhSZXZpc2lvbnNUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhSZXZpc2lvbnMgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoUmV2aXNpb25zVG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiBPbmVUb09uZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnTm9kZVdpdGhSZXZpc2lvbnNUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IENvbnRlbnROb2RlO1xufTtcblxuLyoqIEEgbm9kZSB0aGF0IGNhbiBoYXZlIGEgdGVtcGxhdGUgYXNzb2NpYXRlZCB3aXRoIGl0ICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aFRlbXBsYXRlID0ge1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBJRCBmb3IgdGhlIG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgdGVtcGxhdGUgYXNzaWduZWQgdG8gdGhlIG5vZGUgKi9cbiAgdGVtcGxhdGU/OiBNYXliZTxDb250ZW50VGVtcGxhdGU+O1xufTtcblxuLyoqIEEgbm9kZSB0aGF0IE5vZGVXaXRoIGEgdGl0bGUgKi9cbmV4cG9ydCB0eXBlIE5vZGVXaXRoVGl0bGUgPSB7XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgcG9zdC4gVGhpcyBpcyBjdXJyZW50bHkganVzdCB0aGUgcmF3IHRpdGxlLiBBbiBhbWVuZG1lbnQgdG8gc3VwcG9ydCByZW5kZXJlZCB0aXRsZSBuZWVkcyB0byBiZSBtYWRlLiAqL1xuICB0aXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBBIG5vZGUgdGhhdCBOb2RlV2l0aCBhIHRpdGxlICovXG5leHBvcnQgdHlwZSBOb2RlV2l0aFRpdGxlVGl0bGVBcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuLyoqIEEgbm9kZSB0aGF0IGNhbiBoYXZlIHRyYWNrYmFja3MgYW5kIHBpbmdiYWNrcyAqL1xuZXhwb3J0IHR5cGUgTm9kZVdpdGhUcmFja2JhY2tzID0ge1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBJRCBmb3IgdGhlIG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBwaW5ncyBhcmUgb3BlbiBvciBjbG9zZWQgZm9yIHRoaXMgcGFydGljdWxhciBwb3N0LiAqL1xuICBwaW5nU3RhdHVzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFVSTHMgdGhhdCBoYXZlIGJlZW4gcGluZ2VkLiAqL1xuICBwaW5nZWQ/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBVUkxzIHF1ZXVlZCB0byBiZSBwaW5nZWQuICovXG4gIHRvUGluZz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+Pjtcbn07XG5cbi8qKiBBIHNpbmd1bGFyIGNvbm5lY3Rpb24gZnJvbSBvbmUgTm9kZSB0byBhbm90aGVyLCB3aXRoIHN1cHBvcnQgZm9yIHJlbGF0aW9uYWwgZGF0YSBvbiB0aGUgJnF1b3Q7ZWRnZSZxdW90OyBvZiB0aGUgY29ubmVjdGlvbi4gKi9cbmV4cG9ydCB0eXBlIE9uZVRvT25lQ29ubmVjdGlvbiA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgbm9kZSAqL1xuICBub2RlOiBOb2RlO1xufTtcblxuLyoqIFRoZSBjYXJkaW5hbGl0eSBvZiB0aGUgY29ubmVjdGlvbiBvcmRlciAqL1xuZXhwb3J0IGVudW0gT3JkZXJFbnVtIHtcbiAgLyoqIFNvcnQgdGhlIHF1ZXJ5IHJlc3VsdCBzZXQgaW4gYW4gYXNjZW5kaW5nIG9yZGVyICovXG4gIEFzYyA9ICdBU0MnLFxuICAvKiogU29ydCB0aGUgcXVlcnkgcmVzdWx0IHNldCBpbiBhIGRlc2NlbmRpbmcgb3JkZXIgKi9cbiAgRGVzYyA9ICdERVNDJ1xufVxuXG4vKiogVGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUGFnZSA9IENvbnRlbnROb2RlICYgRGF0YWJhc2VJZGVudGlmaWVyICYgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgJiBIaWVyYXJjaGljYWxOb2RlICYgTWVudUl0ZW1MaW5rYWJsZSAmIE5vZGUgJiBOb2RlV2l0aEF1dGhvciAmIE5vZGVXaXRoQ29tbWVudHMgJiBOb2RlV2l0aENvbnRlbnRFZGl0b3IgJiBOb2RlV2l0aEVkaXRvckJsb2NrcyAmIE5vZGVXaXRoRmVhdHVyZWRJbWFnZSAmIE5vZGVXaXRoUGFnZUF0dHJpYnV0ZXMgJiBOb2RlV2l0aFBhZ2VFZGl0b3JCbG9ja3MgJiBOb2RlV2l0aFJldmlzaW9ucyAmIE5vZGVXaXRoVGVtcGxhdGUgJiBOb2RlV2l0aFRpdGxlICYgUHJldmlld2FibGUgJiBVbmlmb3JtUmVzb3VyY2VJZGVudGlmaWFibGUgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUGFnZSc7XG4gIC8qKiBSZXR1cm5zIGFuY2VzdG9ycyBvZiB0aGUgbm9kZS4gRGVmYXVsdCBvcmRlcmVkIGFzIGxvd2VzdCAoY2xvc2VzdCB0byB0aGUgY2hpbGQpIHRvIGhpZ2hlc3QgKGNsb3Nlc3QgdG8gdGhlIHJvb3QpLiAqL1xuICBhbmNlc3RvcnM/OiBNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVBbmNlc3RvcnNDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhBdXRob3IgdHlwZSBhbmQgdGhlIFVzZXIgdHlwZSAqL1xuICBhdXRob3I/OiBNYXliZTxOb2RlV2l0aEF1dGhvclRvVXNlckNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBpZGVudGlmaWVyIG9mIHRoZSBhdXRob3Igb2YgdGhlIG5vZGUgKi9cbiAgYXV0aG9yRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGF1dGhvciBvZiB0aGUgbm9kZSAqL1xuICBhdXRob3JJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgSGllcmFyY2hpY2FsQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbiAgY2hpbGRyZW4/OiBNYXliZTxIaWVyYXJjaGljYWxDb250ZW50Tm9kZVRvQ29udGVudE5vZGVDaGlsZHJlbkNvbm5lY3Rpb24+O1xuICAvKiogVGhlIG51bWJlciBvZiBjb21tZW50cy4gRXZlbiB0aG91Z2ggV1BHcmFwaFFMIGRlbm90ZXMgdGhpcyBmaWVsZCBhcyBhbiBpbnRlZ2VyLCBpbiBXb3JkUHJlc3MgdGhpcyBmaWVsZCBzaG91bGQgYmUgc2F2ZWQgYXMgYSBudW1lcmljIHN0cmluZyBmb3IgY29tcGF0aWJpbGl0eS4gKi9cbiAgY29tbWVudENvdW50PzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIGNvbW1lbnRzIGFyZSBvcGVuIG9yIGNsb3NlZCBmb3IgdGhpcyBwYXJ0aWN1bGFyIHBvc3QuICovXG4gIGNvbW1lbnRTdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQYWdlIHR5cGUgYW5kIHRoZSBDb21tZW50IHR5cGUgKi9cbiAgY29tbWVudHM/OiBNYXliZTxQYWdlVG9Db21tZW50Q29ubmVjdGlvbj47XG4gIC8qKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXMgKi9cbiAgY29uZGl0aW9uYWxUYWdzPzogTWF5YmU8Q29uZGl0aW9uYWxUYWdzPjtcbiAgLyoqIFRoZSBjb250ZW50IG9mIHRoZSBwb3N0LiAqL1xuICBjb250ZW50PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIENvbnRlbnRUeXBlIHR5cGUgKi9cbiAgY29udGVudFR5cGU/OiBNYXliZTxDb250ZW50Tm9kZVRvQ29udGVudFR5cGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgQ29udGVudCBUeXBlIHRoZSBub2RlIGJlbG9uZ3MgdG8gKi9cbiAgY29udGVudFR5cGVOYW1lOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgc3RvcmVkIGluIHRoZSBkYXRhYmFzZSAqL1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBQb3N0IHB1Ymxpc2hpbmcgZGF0ZS4gKi9cbiAgZGF0ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcHVibGlzaGluZyBkYXRlIHNldCBpbiBHTVQuICovXG4gIGRhdGVHbXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRlc2lyZWQgc2x1ZyBvZiB0aGUgcG9zdCAqL1xuICBkZXNpcmVkU2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBJZiBhIHVzZXIgaGFzIGVkaXRlZCB0aGUgbm9kZSB3aXRoaW4gdGhlIHBhc3QgMTUgc2Vjb25kcywgdGhpcyB3aWxsIHJldHVybiB0aGUgdXNlciB0aGF0IGxhc3QgZWRpdGVkLiBOdWxsIGlmIHRoZSBlZGl0IGxvY2sgZG9lc24mIzAzOTt0IGV4aXN0IG9yIGlzIGdyZWF0ZXIgdGhhbiAxNSBzZWNvbmRzICovXG4gIGVkaXRpbmdMb2NrZWRCeT86IE1heWJlPENvbnRlbnROb2RlVG9FZGl0TG9ja0Nvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIExpc3Qgb2YgUGFnZSBlZGl0b3IgYmxvY2tzICovXG4gIGVkaXRvckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPFBhZ2VFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFRoZSBSU1MgZW5jbG9zdXJlIGZvciB0aGUgb2JqZWN0ICovXG4gIGVuY2xvc3VyZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFNjcmlwdCB0eXBlICovXG4gIGVucXVldWVkU2NyaXB0cz86IE1heWJlPENvbnRlbnROb2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbiAgZW5xdWV1ZWRTdHlsZXNoZWV0cz86IE1heWJlPENvbnRlbnROb2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgTm9kZVdpdGhGZWF0dXJlZEltYWdlIHR5cGUgYW5kIHRoZSBNZWRpYUl0ZW0gdHlwZSAqL1xuICBmZWF0dXJlZEltYWdlPzogTWF5YmU8Tm9kZVdpdGhGZWF0dXJlZEltYWdlVG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWRlbnRpZmllciBmb3IgdGhlIGZlYXR1cmVkIGltYWdlIG5vZGUgYXNzaWduZWQgdG8gdGhlIGNvbnRlbnQgbm9kZSAqL1xuICBmZWF0dXJlZEltYWdlRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBHbG9iYWxseSB1bmlxdWUgSUQgb2YgdGhlIGZlYXR1cmVkIGltYWdlIGFzc2lnbmVkIHRvIHRoZSBub2RlICovXG4gIGZlYXR1cmVkSW1hZ2VJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWwgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgcG9zdC4gVGhpcyBjdXJyZW50bHkgbWF0Y2hlcyB0aGUgdmFsdWUgc3RvcmVkIGluIFdQX1Bvc3QtJmd0O2d1aWQgYW5kIHRoZSBndWlkIGNvbHVtbiBpbiB0aGUgJnF1b3Q7cG9zdF9vYmplY3RzJnF1b3Q7IGRhdGFiYXNlIHRhYmxlLiAqL1xuICBndWlkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIHBhZ2Ugb2JqZWN0IGlzIHBhc3N3b3JkIHByb3RlY3RlZC4gKi9cbiAgaGFzUGFzc3dvcmQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGFnZSBvYmplY3QuICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhpcyBwYWdlIGlzIHNldCB0byB0aGUgc3RhdGljIGZyb250IHBhZ2UuICovXG4gIGlzRnJvbnRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGlzIHBhZ2UgaXMgc2V0IHRvIHRoZSBibG9nIHBvc3RzIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgbm9kZSBpbiB0aGUgcHJldmlldyBzdGF0ZSAqL1xuICBpc1ByZXZpZXc/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhpcyBwYWdlIGlzIHNldCB0byB0aGUgcHJpdmFjeSBwYWdlLiAqL1xuICBpc1ByaXZhY3lQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUcnVlIGlmIHRoZSBub2RlIGlzIGEgcmV2aXNpb24gb2YgYW5vdGhlciBub2RlICovXG4gIGlzUmV2aXNpb24/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBUZXJtICovXG4gIGlzVGVybU5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgdXNlciB0aGF0IG1vc3QgcmVjZW50bHkgZWRpdGVkIHRoZSBub2RlICovXG4gIGxhc3RFZGl0ZWRCeT86IE1heWJlPENvbnRlbnROb2RlVG9FZGl0TGFzdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBwZXJtYWxpbmsgb2YgdGhlIHBvc3QgKi9cbiAgbGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBBIGZpZWxkIHVzZWQgZm9yIG9yZGVyaW5nIHBvc3RzLiBUaGlzIGlzIHR5cGljYWxseSB1c2VkIHdpdGggbmF2IG1lbnUgaXRlbXMgb3IgZm9yIHNwZWNpYWwgb3JkZXJpbmcgb2YgaGllcmFyY2hpY2FsIGNvbnRlbnQgdHlwZXMuICovXG4gIG1lbnVPcmRlcj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbG9jYWwgbW9kaWZpZWQgdGltZSBmb3IgYSBwb3N0LiBJZiBhIHBvc3Qgd2FzIHJlY2VudGx5IHVwZGF0ZWQgdGhlIG1vZGlmaWVkIGZpZWxkIHdpbGwgY2hhbmdlIHRvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nIHRpbWUuICovXG4gIG1vZGlmaWVkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBHTVQgbW9kaWZpZWQgdGltZSBmb3IgYSBwb3N0LiBJZiBhIHBvc3Qgd2FzIHJlY2VudGx5IHVwZGF0ZWQgdGhlIG1vZGlmaWVkIGZpZWxkIHdpbGwgY2hhbmdlIHRvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nIHRpbWUgaW4gR01ULiAqL1xuICBtb2RpZmllZEdtdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgaWQgZmllbGQgbWF0Y2hlcyB0aGUgV1BfUG9zdC0mZ3Q7SUQgZmllbGQuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGRhdGFiYXNlSWQgZmllbGRcbiAgICovXG4gIHBhZ2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogVGhlIHBhcmVudCBvZiB0aGUgbm9kZS4gVGhlIHBhcmVudCBvYmplY3QgY2FuIGJlIG9mIHZhcmlvdXMgdHlwZXMgKi9cbiAgcGFyZW50PzogTWF5YmU8SGllcmFyY2hpY2FsQ29udGVudE5vZGVUb1BhcmVudENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogRGF0YWJhc2UgaWQgb2YgdGhlIHBhcmVudCBub2RlICovXG4gIHBhcmVudERhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgbm9kZS4gKi9cbiAgcGFyZW50SWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFzc3dvcmQgZm9yIHRoZSBwYWdlIG9iamVjdC4gKi9cbiAgcGFzc3dvcmQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQYWdlIHR5cGUgYW5kIHRoZSBwYWdlIHR5cGUgKi9cbiAgcHJldmlldz86IE1heWJlPFBhZ2VUb1ByZXZpZXdDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWQgb2YgdGhlIHByZXZpZXcgbm9kZSAqL1xuICBwcmV2aWV3UmV2aXNpb25EYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIG5vZGUgaW4gdGhlIHByZXZpZXcgc3RhdGUgKi9cbiAgcHJldmlld1JldmlzaW9uSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBJZiB0aGUgY3VycmVudCBub2RlIGlzIGEgcmV2aXNpb24sIHRoaXMgZmllbGQgZXhwb3NlcyB0aGUgbm9kZSB0aGlzIGlzIGEgcmV2aXNpb24gb2YuIFJldHVybnMgbnVsbCBpZiB0aGUgbm9kZSBpcyBub3QgYSByZXZpc2lvbiBvZiBhbm90aGVyIG5vZGUuICovXG4gIHJldmlzaW9uT2Y/OiBNYXliZTxOb2RlV2l0aFJldmlzaW9uc1RvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBhZ2UgdHlwZSBhbmQgdGhlIHBhZ2UgdHlwZSAqL1xuICByZXZpc2lvbnM/OiBNYXliZTxQYWdlVG9SZXZpc2lvbkNvbm5lY3Rpb24+O1xuICAvKiogVGhlIHVyaSBzbHVnIGZvciB0aGUgcG9zdC4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBXUF9Qb3N0LSZndDtwb3N0X25hbWUgZmllbGQgYW5kIHRoZSBwb3N0X25hbWUgY29sdW1uIGluIHRoZSBkYXRhYmFzZSBmb3IgdGhlICZxdW90O3Bvc3Rfb2JqZWN0cyZxdW90OyB0YWJsZS4gKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY3VycmVudCBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRlbXBsYXRlIGFzc2lnbmVkIHRvIGEgbm9kZSBvZiBjb250ZW50ICovXG4gIHRlbXBsYXRlPzogTWF5YmU8Q29udGVudFRlbXBsYXRlPjtcbiAgdGVtcGxhdGVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBwb3N0LiBUaGlzIGlzIGN1cnJlbnRseSBqdXN0IHRoZSByYXcgdGl0bGUuIEFuIGFtZW5kbWVudCB0byBzdXBwb3J0IHJlbmRlcmVkIHRpdGxlIG5lZWRzIHRvIGJlIG1hZGUuICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSB1bmlxdWUgcmVzb3VyY2UgaWRlbnRpZmllciBwYXRoICovXG4gIHVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcGFnZSB0eXBlICovXG5leHBvcnQgdHlwZSBQYWdlQW5jZXN0b3JzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUFuY2VzdG9yc0Nvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUGFnZUNoaWxkcmVuQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPEhpZXJhcmNoaWNhbENvbnRlbnROb2RlVG9Db250ZW50Tm9kZUNoaWxkcmVuQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcGFnZSB0eXBlICovXG5leHBvcnQgdHlwZSBQYWdlQ29tbWVudHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8UGFnZVRvQ29tbWVudENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUGFnZUNvbnRlbnRBcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuXG4vKiogVGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUGFnZUVkaXRvckJsb2Nrc0FyZ3MgPSB7XG4gIGZsYXQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcGFnZSB0eXBlICovXG5leHBvcnQgdHlwZSBQYWdlRW5xdWV1ZWRTY3JpcHRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBwYWdlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBhZ2VFbnF1ZXVlZFN0eWxlc2hlZXRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBwYWdlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBhZ2VSZXZpc2lvbnNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8UGFnZVRvUmV2aXNpb25Db25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBwYWdlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBhZ2VUaXRsZUFyZ3MgPSB7XG4gIGZvcm1hdD86IElucHV0TWF5YmU8UG9zdE9iamVjdEZpZWxkRm9ybWF0RW51bT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBwYWdlIE5vZGVzICovXG5leHBvcnQgdHlwZSBQYWdlQ29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIFJvb3RRdWVyeSBhbmQgY29ubmVjdGVkIHBhZ2UgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PFBhZ2VDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIHBhZ2UgTm9kZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBhZ2U+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQYWdlQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIHBhZ2UgKi9cbmV4cG9ydCB0eXBlIFBhZ2VDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgcGFnZSBOb2RlICovXG4gIG5vZGU6IFBhZ2U7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSBjb25uZWN0ZWQgUGFnZUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBQYWdlQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEVkaXRvckJsb2NrIEludGVyZmFjZSBmb3IgUGFnZSBCbG9jayBUeXBlICovXG5leHBvcnQgdHlwZSBQYWdlRWRpdG9yQmxvY2sgPSB7XG4gIC8qKiBUaGUgQVBJIHZlcnNpb24gb2YgdGhlIEd1dGVuYmVyZyBCbG9jayAqL1xuICBhcGlWZXJzaW9uPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSB0aGUgQmxvY2sgYmVsb25ncyB0byAqL1xuICBibG9ja0VkaXRvckNhdGVnb3J5TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaWQgb2YgdGhlIEJsb2NrICovXG4gIGNsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENTUyBDbGFzc25hbWVzIHRvIGFwcGx5IHRvIHRoZSBibG9jayAqL1xuICBjc3NDbGFzc05hbWVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIGlubmVyIGJsb2NrcyBvZiB0aGUgQmxvY2sgKi9cbiAgaW5uZXJCbG9ja3M/OiBNYXliZTxBcnJheTxNYXliZTxFZGl0b3JCbG9jaz4+PjtcbiAgLyoqIFdoZXRoZXIgdGhlIGJsb2NrIGlzIER5bmFtaWMgKHNlcnZlciByZW5kZXJlZCkgKi9cbiAgaXNEeW5hbWljOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIEJsb2NrICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHBhcmVudCBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgcGFyZW50Q2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlbmRlcmVkIEhUTUwgZm9yIHRoZSBibG9jayAqL1xuICByZW5kZXJlZEh0bWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSByZXNvdXJjZS4gRGVmYXVsdCBpcyBJRC4gKi9cbmV4cG9ydCBlbnVtIFBhZ2VJZFR5cGUge1xuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgRGF0YWJhc2UgSUQuICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgKGhhc2hlZCkgR2xvYmFsIElELiAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSBVUkkuICovXG4gIFVyaSA9ICdVUkknXG59XG5cbi8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUGFnZSB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG5leHBvcnQgdHlwZSBQYWdlVG9Db21tZW50Q29ubmVjdGlvbiA9IENvbW1lbnRDb25uZWN0aW9uICYgQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdQYWdlVG9Db21tZW50Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBhZ2VUb0NvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFBhZ2VUb0NvbW1lbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDb21tZW50PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUGFnZVRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUGFnZVRvQ29tbWVudENvbm5lY3Rpb25FZGdlID0gQ29tbWVudENvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdQYWdlVG9Db21tZW50Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbW1lbnQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtQYWdlVG9Db21tZW50Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUGFnZVRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyA9IENvbW1lbnRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUGFnZVRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFBhZ2VUb0NvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBhZ2VUb0NvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogQ29tbWVudCBhdXRob3IgZW1haWwgYWRkcmVzcy4gKi9cbiAgYXV0aG9yRW1haWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gaW5jbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIGV4Y2x1ZGUgY29tbWVudHMgZm9yLiAqL1xuICBhdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29tbWVudCBhdXRob3IgVVJMLiAqL1xuICBhdXRob3JVcmw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbW1lbnQgSURzIHRvIGluY2x1ZGUuICovXG4gIGNvbW1lbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgSURzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiBzdGF0dXMuICovXG4gIGNvbW1lbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBvZiBhIGdpdmVuIHR5cGUuICovXG4gIGNvbW1lbnRUeXBlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogRXhjbHVkZSBjb21tZW50cyBmcm9tIGEgZ2l2ZW4gYXJyYXkgb2YgY29tbWVudCB0eXBlcy4gKi9cbiAgY29tbWVudFR5cGVOb3RJbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBvYmplY3QgYXV0aG9yIElEIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIGNvbnRlbnRBdXRob3I/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgKm5vdCogdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIExpbWl0IHJlc3VsdHMgdG8gdGhvc2UgYWZmaWxpYXRlZCB3aXRoIGEgZ2l2ZW4gY29udGVudCBvYmplY3QgSUQuICovXG4gIGNvbnRlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBJRHMgdG8gaW5jbHVkZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudElkSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBleGNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgbmFtZSAoaS5lLiBzbHVnICkgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnROYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IE9iamVjdCBwYXJlbnQgSUQgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRQYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IHN0YXR1c2VzIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiBQYXNzICdhbnknIHRvIG1hdGNoIGFueSB2YWx1ZS4gKi9cbiAgY29udGVudFN0YXR1cz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IHR5cGUgb3IgYXJyYXkgb2YgdHlwZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50VHlwZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb3IgZW1haWwgYWRkcmVzc2VzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiAkc3RhdHVzLiBEZWZhdWx0IGVtcHR5ICovXG4gIGluY2x1ZGVVbmFwcHJvdmVkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBLYXJtYSBzY29yZSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIGthcm1hPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY2FyZGluYWxpdHkgb2YgdGhlIG9yZGVyIG9mIHRoZSBjb25uZWN0aW9uICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQgdG8gb3JkZXIgdGhlIGNvbW1lbnRzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxDb21tZW50c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bT47XG4gIC8qKiBQYXJlbnQgSUQgb2YgY29tbWVudCB0byByZXRyaWV2ZSBjaGlsZHJlbiBvZi4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBwYXJlbnQgSURzIG9mIGNvbW1lbnRzIHRvIHJldHJpZXZlIGNoaWxkcmVuIGZvci4gKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgKm5vdCogdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2VhcmNoIHRlcm0ocykgdG8gcmV0cmlldmUgbWF0Y2hpbmcgY29tbWVudHMgZm9yLiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbW1lbnQgc3RhdHVzIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBmb3IgYSBzcGVjaWZpYyB1c2VyIElELiAqL1xuICB1c2VySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUGFnZSB0eXBlIGFuZCB0aGUgcGFnZSB0eXBlICovXG5leHBvcnQgdHlwZSBQYWdlVG9QcmV2aWV3Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYgUGFnZUNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1BhZ2VUb1ByZXZpZXdDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogUGFnZTtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBhZ2UgdHlwZSBhbmQgdGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUGFnZVRvUmV2aXNpb25Db25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFBhZ2VDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1BhZ2VUb1JldmlzaW9uQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBhZ2VUb1JldmlzaW9uQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxQYWdlVG9SZXZpc2lvbkNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBhZ2U+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQYWdlVG9SZXZpc2lvbkNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUGFnZVRvUmV2aXNpb25Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQYWdlQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUGFnZVRvUmV2aXNpb25Db25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogUGFnZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1BhZ2VUb1JldmlzaW9uQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUGFnZVRvUmV2aXNpb25Db25uZWN0aW9uUGFnZUluZm8gPSBQYWdlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1BhZ2VUb1JldmlzaW9uQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUGFnZVRvUmV2aXNpb25Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBhZ2VUb1JldmlzaW9uQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBBbiBwbHVnaW4gb2JqZWN0ICovXG5leHBvcnQgdHlwZSBQbHVnaW4gPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ1BsdWdpbic7XG4gIC8qKiBOYW1lIG9mIHRoZSBwbHVnaW4gYXV0aG9yKHMpLCBtYXkgYWxzbyBiZSBhIGNvbXBhbnkgbmFtZS4gKi9cbiAgYXV0aG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFVSSSBmb3IgdGhlIHJlbGF0ZWQgYXV0aG9yKHMpL2NvbXBhbnkgd2Vic2l0ZS4gKi9cbiAgYXV0aG9yVXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSBwbHVnaW4uICovXG4gIGRlc2NyaXB0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgcGx1Z2luIG9iamVjdC4gKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhlIHBsdWdpbi4gKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBQbHVnaW4gcGF0aC4gKi9cbiAgcGF0aD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBVUkkgZm9yIHRoZSBwbHVnaW4gd2Vic2l0ZS4gVGhpcyBpcyB1c2VmdWwgZm9yIGRpcmVjdGluZyB1c2VycyBmb3Igc3VwcG9ydCByZXF1ZXN0cyBldGMuICovXG4gIHBsdWdpblVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDdXJyZW50IHZlcnNpb24gb2YgdGhlIHBsdWdpbi4gKi9cbiAgdmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBQbHVnaW4gTm9kZXMgKi9cbmV4cG9ydCB0eXBlIFBsdWdpbkNvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBQbHVnaW4gTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PFBsdWdpbkNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIEEgbGlzdCBvZiBjb25uZWN0ZWQgUGx1Z2luIE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxQbHVnaW4+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQbHVnaW5Db25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogRWRnZSBiZXR3ZWVuIGEgTm9kZSBhbmQgYSBjb25uZWN0ZWQgUGx1Z2luICovXG5leHBvcnQgdHlwZSBQbHVnaW5Db25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgUGx1Z2luIE5vZGUgKi9cbiAgbm9kZTogUGx1Z2luO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIFBsdWdpbkNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBQbHVnaW5Db25uZWN0aW9uUGFnZUluZm8gPSB7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlIHN0YXR1cyBvZiB0aGUgV29yZFByZXNzIHBsdWdpbi4gKi9cbmV4cG9ydCBlbnVtIFBsdWdpblN0YXR1c0VudW0ge1xuICAvKiogVGhlIHBsdWdpbiBpcyBjdXJyZW50bHkgYWN0aXZlLiAqL1xuICBBY3RpdmUgPSAnQUNUSVZFJyxcbiAgLyoqIFRoZSBwbHVnaW4gaXMgYSBkcm9wLWluIHBsdWdpbi4gKi9cbiAgRHJvcEluID0gJ0RST1BfSU4nLFxuICAvKiogVGhlIHBsdWdpbiBpcyBjdXJyZW50bHkgaW5hY3RpdmUuICovXG4gIEluYWN0aXZlID0gJ0lOQUNUSVZFJyxcbiAgLyoqIFRoZSBwbHVnaW4gaXMgYSBtdXN0LXVzZSBwbHVnaW4uICovXG4gIE11c3RVc2UgPSAnTVVTVF9VU0UnLFxuICAvKiogVGhlIHBsdWdpbiBpcyB0ZWNobmljYWxseSBhY3RpdmUgYnV0IHdhcyBwYXVzZWQgd2hpbGUgbG9hZGluZy4gKi9cbiAgUGF1c2VkID0gJ1BBVVNFRCcsXG4gIC8qKiBUaGUgcGx1Z2luIHdhcyBhY3RpdmUgcmVjZW50bHkuICovXG4gIFJlY2VudGx5QWN0aXZlID0gJ1JFQ0VOVExZX0FDVElWRScsXG4gIC8qKiBUaGUgcGx1Z2luIGhhcyBhbiB1cGdyYWRlIGF2YWlsYWJsZS4gKi9cbiAgVXBncmFkZSA9ICdVUEdSQURFJ1xufVxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdCA9IENvbnRlbnROb2RlICYgRGF0YWJhc2VJZGVudGlmaWVyICYgTWVudUl0ZW1MaW5rYWJsZSAmIE5vZGUgJiBOb2RlV2l0aEF1dGhvciAmIE5vZGVXaXRoQ29tbWVudHMgJiBOb2RlV2l0aENvbnRlbnRFZGl0b3IgJiBOb2RlV2l0aEVkaXRvckJsb2NrcyAmIE5vZGVXaXRoRXhjZXJwdCAmIE5vZGVXaXRoRmVhdHVyZWRJbWFnZSAmIE5vZGVXaXRoUG9zdEVkaXRvckJsb2NrcyAmIE5vZGVXaXRoUmV2aXNpb25zICYgTm9kZVdpdGhUZW1wbGF0ZSAmIE5vZGVXaXRoVGl0bGUgJiBOb2RlV2l0aFRyYWNrYmFja3MgJiBQcmV2aWV3YWJsZSAmIFVuaWZvcm1SZXNvdXJjZUlkZW50aWZpYWJsZSAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0JztcbiAgLyoqXG4gICAqIFRoZSBhbmNlc3RvcnMgb2YgdGhlIGNvbnRlbnQgbm9kZS5cbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBjb250ZW50IHR5cGUgaXMgbm90IGhpZXJhcmNoaWNhbCBhbmQgdHlwaWNhbGx5IHdpbGwgbm90IGhhdmUgYW5jZXN0b3JzXG4gICAqL1xuICBhbmNlc3RvcnM/OiBNYXliZTxQb3N0VG9Qb3N0Q29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIE5vZGVXaXRoQXV0aG9yIHR5cGUgYW5kIHRoZSBVc2VyIHR5cGUgKi9cbiAgYXV0aG9yPzogTWF5YmU8Tm9kZVdpdGhBdXRob3JUb1VzZXJDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWRlbnRpZmllciBvZiB0aGUgYXV0aG9yIG9mIHRoZSBub2RlICovXG4gIGF1dGhvckRhdGFiYXNlSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBhdXRob3Igb2YgdGhlIG5vZGUgKi9cbiAgYXV0aG9ySWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIGNhdGVnb3J5IHR5cGUgKi9cbiAgY2F0ZWdvcmllcz86IE1heWJlPFBvc3RUb0NhdGVnb3J5Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgbnVtYmVyIG9mIGNvbW1lbnRzLiBFdmVuIHRob3VnaCBXUEdyYXBoUUwgZGVub3RlcyB0aGlzIGZpZWxkIGFzIGFuIGludGVnZXIsIGluIFdvcmRQcmVzcyB0aGlzIGZpZWxkIHNob3VsZCBiZSBzYXZlZCBhcyBhIG51bWVyaWMgc3RyaW5nIGZvciBjb21wYXRpYmlsaXR5LiAqL1xuICBjb21tZW50Q291bnQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgY29tbWVudHMgYXJlIG9wZW4gb3IgY2xvc2VkIGZvciB0aGlzIHBhcnRpY3VsYXIgcG9zdC4gKi9cbiAgY29tbWVudFN0YXR1cz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIENvbW1lbnQgdHlwZSAqL1xuICBjb21tZW50cz86IE1heWJlPFBvc3RUb0NvbW1lbnRDb25uZWN0aW9uPjtcbiAgLyoqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlcyAqL1xuICBjb25kaXRpb25hbFRhZ3M/OiBNYXliZTxDb25kaXRpb25hbFRhZ3M+O1xuICAvKiogVGhlIGNvbnRlbnQgb2YgdGhlIHBvc3QuICovXG4gIGNvbnRlbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBDb250ZW50Tm9kZSB0eXBlIGFuZCB0aGUgQ29udGVudFR5cGUgdHlwZSAqL1xuICBjb250ZW50VHlwZT86IE1heWJlPENvbnRlbnROb2RlVG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBDb250ZW50IFR5cGUgdGhlIG5vZGUgYmVsb25ncyB0byAqL1xuICBjb250ZW50VHlwZU5hbWU6IFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSB1bmlxdWUgaWRlbnRpZmllciBzdG9yZWQgaW4gdGhlIGRhdGFiYXNlICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIFBvc3QgcHVibGlzaGluZyBkYXRlLiAqL1xuICBkYXRlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwdWJsaXNoaW5nIGRhdGUgc2V0IGluIEdNVC4gKi9cbiAgZGF0ZUdtdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZGVzaXJlZCBzbHVnIG9mIHRoZSBwb3N0ICovXG4gIGRlc2lyZWRTbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIElmIGEgdXNlciBoYXMgZWRpdGVkIHRoZSBub2RlIHdpdGhpbiB0aGUgcGFzdCAxNSBzZWNvbmRzLCB0aGlzIHdpbGwgcmV0dXJuIHRoZSB1c2VyIHRoYXQgbGFzdCBlZGl0ZWQuIE51bGwgaWYgdGhlIGVkaXQgbG9jayBkb2VzbiYjMDM5O3QgZXhpc3Qgb3IgaXMgZ3JlYXRlciB0aGFuIDE1IHNlY29uZHMgKi9cbiAgZWRpdGluZ0xvY2tlZEJ5PzogTWF5YmU8Q29udGVudE5vZGVUb0VkaXRMb2NrQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogTGlzdCBvZiBQb3N0IGVkaXRvciBibG9ja3MgKi9cbiAgZWRpdG9yQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8UG9zdEVkaXRvckJsb2NrPj4+O1xuICAvKiogVGhlIFJTUyBlbmNsb3N1cmUgZm9yIHRoZSBvYmplY3QgKi9cbiAgZW5jbG9zdXJlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgQ29udGVudE5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU2NyaXB0IHR5cGUgKi9cbiAgZW5xdWV1ZWRTY3JpcHRzPzogTWF5YmU8Q29udGVudE5vZGVUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIENvbnRlbnROb2RlIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFN0eWxlc2hlZXQgdHlwZSAqL1xuICBlbnF1ZXVlZFN0eWxlc2hlZXRzPzogTWF5YmU8Q29udGVudE5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24+O1xuICAvKiogVGhlIGV4Y2VycHQgb2YgdGhlIHBvc3QuICovXG4gIGV4Y2VycHQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBOb2RlV2l0aEZlYXR1cmVkSW1hZ2UgdHlwZSBhbmQgdGhlIE1lZGlhSXRlbSB0eXBlICovXG4gIGZlYXR1cmVkSW1hZ2U/OiBNYXliZTxOb2RlV2l0aEZlYXR1cmVkSW1hZ2VUb01lZGlhSXRlbUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBpZGVudGlmaWVyIGZvciB0aGUgZmVhdHVyZWQgaW1hZ2Ugbm9kZSBhc3NpZ25lZCB0byB0aGUgY29udGVudCBub2RlICovXG4gIGZlYXR1cmVkSW1hZ2VEYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEdsb2JhbGx5IHVuaXF1ZSBJRCBvZiB0aGUgZmVhdHVyZWQgaW1hZ2UgYXNzaWduZWQgdG8gdGhlIG5vZGUgKi9cbiAgZmVhdHVyZWRJbWFnZUlkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbCB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBwb3N0LiBUaGlzIGN1cnJlbnRseSBtYXRjaGVzIHRoZSB2YWx1ZSBzdG9yZWQgaW4gV1BfUG9zdC0mZ3Q7Z3VpZCBhbmQgdGhlIGd1aWQgY29sdW1uIGluIHRoZSAmcXVvdDtwb3N0X29iamVjdHMmcXVvdDsgZGF0YWJhc2UgdGFibGUuICovXG4gIGd1aWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgcG9zdCBvYmplY3QgaXMgcGFzc3dvcmQgcHJvdGVjdGVkLiAqL1xuICBoYXNQYXNzd29yZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwb3N0IG9iamVjdC4gKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbW1lbnQgKi9cbiAgaXNDb21tZW50OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbnRlbnQgTm9kZSAqL1xuICBpc0NvbnRlbnROb2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBmcm9udCBwYWdlLiAqL1xuICBpc0Zyb250UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGJsb2cgcGFnZS4gKi9cbiAgaXNQb3N0c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgYSBub2RlIGluIHRoZSBwcmV2aWV3IHN0YXRlICovXG4gIGlzUHJldmlldz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBUcnVlIGlmIHRoZSBub2RlIGlzIGEgcmV2aXNpb24gb2YgYW5vdGhlciBub2RlICovXG4gIGlzUmV2aXNpb24/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhpcyBwYWdlIGlzIHN0aWNreSAqL1xuICBpc1N0aWNreTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBUZXJtICovXG4gIGlzVGVybU5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgdXNlciB0aGF0IG1vc3QgcmVjZW50bHkgZWRpdGVkIHRoZSBub2RlICovXG4gIGxhc3RFZGl0ZWRCeT86IE1heWJlPENvbnRlbnROb2RlVG9FZGl0TGFzdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBwZXJtYWxpbmsgb2YgdGhlIHBvc3QgKi9cbiAgbGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbG9jYWwgbW9kaWZpZWQgdGltZSBmb3IgYSBwb3N0LiBJZiBhIHBvc3Qgd2FzIHJlY2VudGx5IHVwZGF0ZWQgdGhlIG1vZGlmaWVkIGZpZWxkIHdpbGwgY2hhbmdlIHRvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nIHRpbWUuICovXG4gIG1vZGlmaWVkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBHTVQgbW9kaWZpZWQgdGltZSBmb3IgYSBwb3N0LiBJZiBhIHBvc3Qgd2FzIHJlY2VudGx5IHVwZGF0ZWQgdGhlIG1vZGlmaWVkIGZpZWxkIHdpbGwgY2hhbmdlIHRvIG1hdGNoIHRoZSBjb3JyZXNwb25kaW5nIHRpbWUgaW4gR01ULiAqL1xuICBtb2RpZmllZEdtdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgcGFyZW50IG9mIHRoZSBjb250ZW50IG5vZGUuXG4gICAqIEBkZXByZWNhdGVkIFRoaXMgY29udGVudCB0eXBlIGlzIG5vdCBoaWVyYXJjaGljYWwgYW5kIHR5cGljYWxseSB3aWxsIG5vdCBoYXZlIGEgcGFyZW50XG4gICAqL1xuICBwYXJlbnQ/OiBNYXliZTxQb3N0VG9QYXJlbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgcGFzc3dvcmQgZm9yIHRoZSBwb3N0IG9iamVjdC4gKi9cbiAgcGFzc3dvcmQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgcGluZ3MgYXJlIG9wZW4gb3IgY2xvc2VkIGZvciB0aGlzIHBhcnRpY3VsYXIgcG9zdC4gKi9cbiAgcGluZ1N0YXR1cz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBVUkxzIHRoYXQgaGF2ZSBiZWVuIHBpbmdlZC4gKi9cbiAgcGluZ2VkPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBwb3N0Rm9ybWF0IHR5cGUgKi9cbiAgcG9zdEZvcm1hdHM/OiBNYXliZTxQb3N0VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbj47XG4gIC8qKlxuICAgKiBUaGUgaWQgZmllbGQgbWF0Y2hlcyB0aGUgV1BfUG9zdC0mZ3Q7SUQgZmllbGQuXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGRhdGFiYXNlSWQgZmllbGRcbiAgICovXG4gIHBvc3RJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBwb3N0IHR5cGUgKi9cbiAgcHJldmlldz86IE1heWJlPFBvc3RUb1ByZXZpZXdDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgaWQgb2YgdGhlIHByZXZpZXcgbm9kZSAqL1xuICBwcmV2aWV3UmV2aXNpb25EYXRhYmFzZUlkPzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIG5vZGUgaW4gdGhlIHByZXZpZXcgc3RhdGUgKi9cbiAgcHJldmlld1JldmlzaW9uSWQ/OiBNYXliZTxTY2FsYXJzWydJRCddWydvdXRwdXQnXT47XG4gIC8qKiBJZiB0aGUgY3VycmVudCBub2RlIGlzIGEgcmV2aXNpb24sIHRoaXMgZmllbGQgZXhwb3NlcyB0aGUgbm9kZSB0aGlzIGlzIGEgcmV2aXNpb24gb2YuIFJldHVybnMgbnVsbCBpZiB0aGUgbm9kZSBpcyBub3QgYSByZXZpc2lvbiBvZiBhbm90aGVyIG5vZGUuICovXG4gIHJldmlzaW9uT2Y/OiBNYXliZTxOb2RlV2l0aFJldmlzaW9uc1RvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuICByZXZpc2lvbnM/OiBNYXliZTxQb3N0VG9SZXZpc2lvbkNvbm5lY3Rpb24+O1xuICAvKiogVGhlIHVyaSBzbHVnIGZvciB0aGUgcG9zdC4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBXUF9Qb3N0LSZndDtwb3N0X25hbWUgZmllbGQgYW5kIHRoZSBwb3N0X25hbWUgY29sdW1uIGluIHRoZSBkYXRhYmFzZSBmb3IgdGhlICZxdW90O3Bvc3Rfb2JqZWN0cyZxdW90OyB0YWJsZS4gKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY3VycmVudCBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSB0YWcgdHlwZSAqL1xuICB0YWdzPzogTWF5YmU8UG9zdFRvVGFnQ29ubmVjdGlvbj47XG4gIC8qKiBUaGUgdGVtcGxhdGUgYXNzaWduZWQgdG8gdGhlIG5vZGUgKi9cbiAgdGVtcGxhdGU/OiBNYXliZTxDb250ZW50VGVtcGxhdGU+O1xuICB0ZW1wbGF0ZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIFRlcm1Ob2RlIHR5cGUgKi9cbiAgdGVybXM/OiBNYXliZTxQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb24+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBwb3N0LiBUaGlzIGlzIGN1cnJlbnRseSBqdXN0IHRoZSByYXcgdGl0bGUuIEFuIGFtZW5kbWVudCB0byBzdXBwb3J0IHJlbmRlcmVkIHRpdGxlIG5lZWRzIHRvIGJlIG1hZGUuICovXG4gIHRpdGxlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFVSTHMgcXVldWVkIHRvIGJlIHBpbmdlZC4gKi9cbiAgdG9QaW5nPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RBbmNlc3RvcnNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdENhdGVnb3JpZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8UG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RDb21tZW50c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxQb3N0VG9Db21tZW50Q29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0Q29udGVudEFyZ3MgPSB7XG4gIGZvcm1hdD86IElucHV0TWF5YmU8UG9zdE9iamVjdEZpZWxkRm9ybWF0RW51bT47XG59O1xuXG5cbi8qKiBUaGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0RWRpdG9yQmxvY2tzQXJncyA9IHtcbiAgZmxhdD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RFbnF1ZXVlZFNjcmlwdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEVucXVldWVkU3R5bGVzaGVldHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEV4Y2VycHRBcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdFBvc3RGb3JtYXRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFBvc3RUb1Bvc3RGb3JtYXRDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RSZXZpc2lvbnNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8UG9zdFRvUmV2aXNpb25Db25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUYWdzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFBvc3RUb1RhZ0Nvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdFRlcm1zQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFBvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0VGl0bGVBcmdzID0ge1xuICBmb3JtYXQ/OiBJbnB1dE1heWJlPFBvc3RPYmplY3RGaWVsZEZvcm1hdEVudW0+O1xufTtcblxuLyoqIFNldCByZWxhdGlvbnNoaXBzIGJldHdlZW4gdGhlIHBvc3QgdG8gY2F0ZWdvcmllcyAqL1xuZXhwb3J0IHR5cGUgUG9zdENhdGVnb3JpZXNJbnB1dCA9IHtcbiAgLyoqIElmIHRydWUsIHRoaXMgd2lsbCBhcHBlbmQgdGhlIGNhdGVnb3J5IHRvIGV4aXN0aW5nIHJlbGF0ZWQgY2F0ZWdvcmllcy4gSWYgZmFsc2UsIHRoaXMgd2lsbCByZXBsYWNlIGV4aXN0aW5nIHJlbGF0aW9uc2hpcHMuIERlZmF1bHQgdHJ1ZS4gKi9cbiAgYXBwZW5kPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGlucHV0IGxpc3Qgb2YgaXRlbXMgdG8gc2V0LiAqL1xuICBub2Rlcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0Q2F0ZWdvcmllc05vZGVJbnB1dD4+Pjtcbn07XG5cbi8qKiBMaXN0IG9mIGNhdGVnb3JpZXMgdG8gY29ubmVjdCB0aGUgcG9zdCB0by4gSWYgYW4gSUQgaXMgc2V0LCBpdCB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBjb25uZWN0aW9uLiBJZiBub3QsIGl0IHdpbGwgbG9vayBmb3IgYSBzbHVnLiBJZiBuZWl0aGVyIGFyZSB2YWxpZCBleGlzdGluZyB0ZXJtcywgYW5kIHRoZSBzaXRlIGlzIGNvbmZpZ3VyZWQgdG8gYWxsb3cgdGVybXMgdG8gYmUgY3JlYXRlZCBkdXJpbmcgcG9zdCBtdXRhdGlvbnMsIGEgdGVybSB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIE5hbWUgaWYgaXQgZXhpc3RzIGluIHRoZSBpbnB1dCwgdGhlbiBmYWxsYmFjayB0byB0aGUgc2x1ZyBpZiBpdCBleGlzdHMuICovXG5leHBvcnQgdHlwZSBQb3N0Q2F0ZWdvcmllc05vZGVJbnB1dCA9IHtcbiAgLyoqIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgY2F0ZWdvcnkuIFRoaXMgZmllbGQgaXMgdXNlZCB0byBzZXQgYSBkZXNjcmlwdGlvbiBvZiB0aGUgY2F0ZWdvcnkgaWYgYSBuZXcgb25lIGlzIGNyZWF0ZWQgZHVyaW5nIHRoZSBtdXRhdGlvbi4gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgY2F0ZWdvcnkuIElmIHByZXNlbnQsIHRoaXMgd2lsbCBiZSB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIHBvc3QuIElmIG5vIGV4aXN0aW5nIGNhdGVnb3J5IGV4aXN0cyB3aXRoIHRoaXMgSUQsIG5vIGNvbm5lY3Rpb24gd2lsbCBiZSBtYWRlLiAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkuIFRoaXMgZmllbGQgaXMgdXNlZCB0byBjcmVhdGUgYSBuZXcgdGVybSwgaWYgdGVybSBjcmVhdGlvbiBpcyBlbmFibGVkIGluIG5lc3RlZCBtdXRhdGlvbnMsIGFuZCBpZiBvbmUgZG9lcyBub3QgYWxyZWFkeSBleGlzdCB3aXRoIHRoZSBwcm92aWRlZCBzbHVnIG9yIElEIG9yIGlmIGEgc2x1ZyBvciBJRCBpcyBub3QgcHJvdmlkZWQuIElmIG5vIG5hbWUgaXMgaW5jbHVkZWQgYW5kIGEgdGVybSBpcyBjcmVhdGVkLCB0aGUgY3JlYXRpb24gd2lsbCBmYWxsYmFjayB0byB0aGUgc2x1ZyBmaWVsZC4gKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHNsdWcgb2YgdGhlIGNhdGVnb3J5LiBJZiBubyBJRCBpcyBwcmVzZW50LCB0aGlzIGZpZWxkIHdpbGwgYmUgdXNlZCB0byBtYWtlIGEgY29ubmVjdGlvbi4gSWYgbm8gZXhpc3RpbmcgdGVybSBleGlzdHMgd2l0aCB0aGlzIHNsdWcsIHRoaXMgZmllbGQgd2lsbCBiZSB1c2VkIGFzIGEgZmFsbGJhY2sgdG8gdGhlIE5hbWUgZmllbGQgd2hlbiBjcmVhdGluZyBhIG5ldyB0ZXJtIHRvIGNvbm5lY3QgdG8sIGlmIHRlcm0gY3JlYXRpb24gaXMgZW5hYmxlZCBhcyBhIG5lc3RlZCBtdXRhdGlvbi4gKi9cbiAgc2x1Zz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gcG9zdCBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgUG9zdENvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBwb3N0IE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxQb3N0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBwb3N0IE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxQb3N0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUG9zdENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBwb3N0ICovXG5leHBvcnQgdHlwZSBQb3N0Q29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIHBvc3QgTm9kZSAqL1xuICBub2RlOiBQb3N0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIFBvc3RDb25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgUG9zdENvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBFZGl0b3JCbG9jayBJbnRlcmZhY2UgZm9yIFBvc3QgQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEVkaXRvckJsb2NrID0ge1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2F0ZWdvcnkgdGhlIEJsb2NrIGJlbG9uZ3MgdG8gKi9cbiAgYmxvY2tFZGl0b3JDYXRlZ29yeU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGlkIG9mIHRoZSBCbG9jayAqL1xuICBjbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDU1MgQ2xhc3NuYW1lcyB0byBhcHBseSB0byB0aGUgYmxvY2sgKi9cbiAgY3NzQ2xhc3NOYW1lcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBpbm5lciBibG9ja3Mgb2YgdGhlIEJsb2NrICovXG4gIGlubmVyQmxvY2tzPzogTWF5YmU8QXJyYXk8TWF5YmU8RWRpdG9yQmxvY2s+Pj47XG4gIC8qKiBXaGV0aGVyIHRoZSBibG9jayBpcyBEeW5hbWljIChzZXJ2ZXIgcmVuZGVyZWQpICovXG4gIGlzRHluYW1pYzogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBCbG9jayAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBwYXJlbnQgaWQgb2YgdGhlIEJsb2NrICovXG4gIHBhcmVudENsaWVudElkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZW5kZXJlZCBIVE1MIGZvciB0aGUgYmxvY2sgKi9cbiAgcmVuZGVyZWRIdG1sPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgcG9zdEZvcm1hdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0ID0gRGF0YWJhc2VJZGVudGlmaWVyICYgTm9kZSAmIFRlcm1Ob2RlICYgVW5pZm9ybVJlc291cmNlSWRlbnRpZmlhYmxlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RGb3JtYXQnO1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3RGb3JtYXQgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbiAgY29udGVudE5vZGVzPzogTWF5YmU8UG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uPjtcbiAgLyoqIFRoZSBudW1iZXIgb2Ygb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIG9iamVjdCAqL1xuICBjb3VudD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgc3RvcmVkIGluIHRoZSBkYXRhYmFzZSAqL1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIG9iamVjdCAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFRlcm1Ob2RlIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFNjcmlwdCB0eXBlICovXG4gIGVucXVldWVkU2NyaXB0cz86IE1heWJlPFRlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbiAgZW5xdWV1ZWRTdHlsZXNoZWV0cz86IE1heWJlPFRlcm1Ob2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbW1lbnQgKi9cbiAgaXNDb21tZW50OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbnRlbnQgTm9kZSAqL1xuICBpc0NvbnRlbnROb2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBmcm9udCBwYWdlLiAqL1xuICBpc0Zyb250UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGJsb2cgcGFnZS4gKi9cbiAgaXNQb3N0c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBUZXJtICovXG4gIGlzVGVybU5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbGluayB0byB0aGUgdGVybSAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBodW1hbiBmcmllbmRseSBuYW1lIG9mIHRoZSBvYmplY3QuICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIGlkIGZpZWxkIG1hdGNoZXMgdGhlIFdQX1Bvc3QtJmd0O0lEIGZpZWxkLlxuICAgKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIGRhdGFiYXNlSWRcbiAgICovXG4gIHBvc3RGb3JtYXRJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3RGb3JtYXQgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuICBwb3N0cz86IE1heWJlPFBvc3RGb3JtYXRUb1Bvc3RDb25uZWN0aW9uPjtcbiAgLyoqIEFuIGFscGhhbnVtZXJpYyBpZGVudGlmaWVyIGZvciB0aGUgb2JqZWN0IHVuaXF1ZSB0byBpdHMgdHlwZS4gKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3RGb3JtYXQgdHlwZSBhbmQgdGhlIFRheG9ub215IHR5cGUgKi9cbiAgdGF4b25vbXk/OiBNYXliZTxQb3N0Rm9ybWF0VG9UYXhvbm9teUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSB0YXhvbm9teSB0aGF0IHRoZSBvYmplY3QgaXMgYXNzb2NpYXRlZCB3aXRoICovXG4gIHRheG9ub215TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgdGVybSBncm91cCB0aGF0IHRoaXMgdGVybSBvYmplY3QgYmVsb25ncyB0byAqL1xuICB0ZXJtR3JvdXBJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdGF4b25vbXkgSUQgdGhhdCB0aGUgb2JqZWN0IGlzIGFzc29jaWF0ZWQgd2l0aCAqL1xuICB0ZXJtVGF4b25vbXlJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdW5pcXVlIHJlc291cmNlIGlkZW50aWZpZXIgcGF0aCAqL1xuICB1cmk/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuXG4vKiogVGhlIHBvc3RGb3JtYXQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdENvbnRlbnROb2Rlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxQb3N0Rm9ybWF0VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHBvc3RGb3JtYXQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdEVucXVldWVkU2NyaXB0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcG9zdEZvcm1hdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0RW5xdWV1ZWRTdHlsZXNoZWV0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcG9zdEZvcm1hdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0UG9zdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8UG9zdEZvcm1hdFRvUG9zdENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gcG9zdEZvcm1hdCBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdENvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBwb3N0Rm9ybWF0IE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxQb3N0Rm9ybWF0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBwb3N0Rm9ybWF0IE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxQb3N0Rm9ybWF0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUG9zdEZvcm1hdENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBwb3N0Rm9ybWF0ICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0Q29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIHBvc3RGb3JtYXQgTm9kZSAqL1xuICBub2RlOiBQb3N0Rm9ybWF0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIFBvc3RGb3JtYXRDb25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdENvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgVHlwZSBvZiBJZGVudGlmaWVyIHVzZWQgdG8gZmV0Y2ggYSBzaW5nbGUgcmVzb3VyY2UuIERlZmF1bHQgaXMgSUQuICovXG5leHBvcnQgZW51bSBQb3N0Rm9ybWF0SWRUeXBlIHtcbiAgLyoqIFRoZSBEYXRhYmFzZSBJRCBmb3IgdGhlIG5vZGUgKi9cbiAgRGF0YWJhc2VJZCA9ICdEQVRBQkFTRV9JRCcsXG4gIC8qKiBUaGUgaGFzaGVkIEdsb2JhbCBJRCAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgbm9kZSAqL1xuICBOYW1lID0gJ05BTUUnLFxuICAvKiogVXJsIGZyaWVuZGx5IG5hbWUgb2YgdGhlIG5vZGUgKi9cbiAgU2x1ZyA9ICdTTFVHJyxcbiAgLyoqIFRoZSBVUkkgZm9yIHRoZSBub2RlICovXG4gIFVyaSA9ICdVUkknXG59XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3RGb3JtYXQgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RGb3JtYXRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBDb250ZW50Tm9kZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFBvc3RGb3JtYXRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudE5vZGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0Rm9ybWF0VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSA9IENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RGb3JtYXRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbnRlbnROb2RlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7UG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyA9IENvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RGb3JtYXRUb0NvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUG9zdEZvcm1hdFRvQ29udGVudE5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBvc3RGb3JtYXRUb0NvbnRlbnROb2RlQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBUeXBlcyBvZiBjb250ZW50IHRvIGZpbHRlciAqL1xuICBjb250ZW50VHlwZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8Q29udGVudFR5cGVzT2ZQb3N0Rm9ybWF0RW51bT4+PjtcbiAgLyoqIEZpbHRlciB0aGUgY29ubmVjdGlvbiBiYXNlZCBvbiBkYXRlcyAqL1xuICBkYXRlUXVlcnk/OiBJbnB1dE1heWJlPERhdGVRdWVyeUlucHV0PjtcbiAgLyoqIFRydWUgZm9yIG9iamVjdHMgd2l0aCBwYXNzd29yZHM7IEZhbHNlIGZvciBvYmplY3RzIHdpdGhvdXQgcGFzc3dvcmRzOyBudWxsIGZvciBhbGwgb2JqZWN0cyB3aXRoIG9yIHdpdGhvdXQgcGFzc3dvcmRzICovXG4gIGhhc1Bhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmaWMgZGF0YWJhc2UgSUQgb2YgdGhlIG9iamVjdCAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgSURzIGZvciB0aGUgb2JqZWN0cyB0byByZXRyaWV2ZSAqL1xuICBpbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogR2V0IG9iamVjdHMgd2l0aCBhIHNwZWNpZmljIG1pbWVUeXBlIHByb3BlcnR5ICovXG4gIG1pbWVUeXBlPzogSW5wdXRNYXliZTxNaW1lVHlwZUVudW0+O1xuICAvKiogU2x1ZyAvIHBvc3RfbmFtZSBvZiB0aGUgb2JqZWN0ICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB0byByZXRyaWV2ZS4gVXNlIHNsdWdzICovXG4gIG5hbWVJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgSURzIE5PVCB0byByZXRyaWV2ZS4gSWYgdGhpcyBpcyB1c2VkIGluIHRoZSBzYW1lIHF1ZXJ5IGFzIFwiaW5cIiwgaXQgd2lsbCBiZSBpZ25vcmVkICovXG4gIG5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGF0IHBhcmFtZXRlciB0byB1c2UgdG8gb3JkZXIgdGhlIG9iamVjdHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdE9iamVjdHNDb25uZWN0aW9uT3JkZXJieUlucHV0Pj4+O1xuICAvKiogVXNlIElEIHRvIHJldHVybiBvbmx5IGNoaWxkcmVuLiBVc2UgMCB0byByZXR1cm4gb25seSB0b3AtbGV2ZWwgaXRlbXMgKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB3aG9zZSBwYXJlbnQgaXMgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgcG9zdHMgd2hvc2UgcGFyZW50IGlzIG5vdCBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgcGFzc3dvcmQuICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaG93IFBvc3RzIGJhc2VkIG9uIGEga2V5d29yZCBzZWFyY2ggKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSBwb3N0cyB3aGVyZSBwb3N0IHN0YXR1cyBpcyBpbiBhbiBhcnJheS4gKi9cbiAgc3RhdGk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBzdGF0dXMuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+O1xuICAvKiogVGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUG9zdEZvcm1hdCB0eXBlIGFuZCB0aGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0Rm9ybWF0VG9Qb3N0Q29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBQb3N0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0Rm9ybWF0VG9Qb3N0Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBvc3RGb3JtYXRUb1Bvc3RDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFBvc3RGb3JtYXRUb1Bvc3RDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxQb3N0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUG9zdEZvcm1hdFRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdFRvUG9zdENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIFBvc3RDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0Rm9ybWF0VG9Qb3N0Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFBvc3Q7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtQb3N0Rm9ybWF0VG9Qb3N0Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdFRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyA9IFBhZ2VJbmZvICYgUG9zdENvbm5lY3Rpb25QYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdEZvcm1hdFRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFBvc3RGb3JtYXRUb1Bvc3RDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBvc3RGb3JtYXRUb1Bvc3RDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIHVzZXIgdGhhdCdzIGNvbm5lY3RlZCBhcyB0aGUgYXV0aG9yIG9mIHRoZSBvYmplY3QuIFVzZSB0aGUgdXNlcklkIGZvciB0aGUgYXV0aG9yIG9iamVjdC4gKi9cbiAgYXV0aG9yPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBGaW5kIG9iamVjdHMgY29ubmVjdGVkIHRvIGF1dGhvcihzKSBpbiB0aGUgYXJyYXkgb2YgYXV0aG9yJ3MgdXNlcklkcyAqL1xuICBhdXRob3JJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byB0aGUgYXV0aG9yIGJ5IHRoZSBhdXRob3IncyBuaWNlbmFtZSAqL1xuICBhdXRob3JOYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBGaW5kIG9iamVjdHMgTk9UIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIENhdGVnb3J5IElEICovXG4gIGNhdGVnb3J5SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNhdGVnb3J5IElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgY2F0ZWdvcnkgT1IgYW5vdGhlciAqL1xuICBjYXRlZ29yeUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBVc2UgQ2F0ZWdvcnkgU2x1ZyAqL1xuICBjYXRlZ29yeU5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNhdGVnb3J5IElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgY2F0ZWdvcnkgT1IgYW5vdGhlciAqL1xuICBjYXRlZ29yeU5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRhZyBTbHVnICovXG4gIHRhZz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlIFRhZyBJRCAqL1xuICB0YWdJZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgdGFnIElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgdGFnIE9SIGFub3RoZXIgKi9cbiAgdGFnSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBPUiBhbm90aGVyICovXG4gIHRhZ05vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgc2x1Z3MsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBBTkQgYW5vdGhlciAqL1xuICB0YWdTbHVnQW5kPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIHNsdWdzLCB1c2VkIHRvIGluY2x1ZGUgb2JqZWN0cyBpbiBBTlkgc3BlY2lmaWVkIHRhZ3MgKi9cbiAgdGFnU2x1Z0luPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogVGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUG9zdEZvcm1hdCB0eXBlIGFuZCB0aGUgVGF4b25vbXkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdEZvcm1hdFRvVGF4b25vbXlDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBPbmVUb09uZUNvbm5lY3Rpb24gJiBUYXhvbm9teUNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RGb3JtYXRUb1RheG9ub215Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIG5vZGUgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGU6IFRheG9ub215O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSByZXNvdXJjZS4gRGVmYXVsdCBpcyBJRC4gKi9cbmV4cG9ydCBlbnVtIFBvc3RJZFR5cGUge1xuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgRGF0YWJhc2UgSUQuICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgKGhhc2hlZCkgR2xvYmFsIElELiAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBJZGVudGlmeSBhIHJlc291cmNlIGJ5IHRoZSBzbHVnLiBBdmFpbGFibGUgdG8gbm9uLWhpZXJhcmNoY2lhbCBUeXBlcyB3aGVyZSB0aGUgc2x1ZyBpcyBhIHVuaXF1ZSBpZGVudGlmaWVyLiAqL1xuICBTbHVnID0gJ1NMVUcnLFxuICAvKiogSWRlbnRpZnkgYSByZXNvdXJjZSBieSB0aGUgVVJJLiAqL1xuICBVcmkgPSAnVVJJJ1xufVxuXG4vKiogVGhlIGZvcm1hdCBvZiBwb3N0IGZpZWxkIGRhdGEuICovXG5leHBvcnQgZW51bSBQb3N0T2JqZWN0RmllbGRGb3JtYXRFbnVtIHtcbiAgLyoqIFByb3ZpZGUgdGhlIGZpZWxkIHZhbHVlIGRpcmVjdGx5IGZyb20gZGF0YWJhc2UuIE51bGwgb24gdW5hdXRoZW50aWNhdGVkIHJlcXVlc3RzLiAqL1xuICBSYXcgPSAnUkFXJyxcbiAgLyoqIFByb3ZpZGUgdGhlIGZpZWxkIHZhbHVlIGFzIHJlbmRlcmVkIGJ5IFdvcmRQcmVzcy4gRGVmYXVsdC4gKi9cbiAgUmVuZGVyZWQgPSAnUkVOREVSRUQnXG59XG5cbi8qKiBUaGUgY29sdW1uIHRvIHVzZSB3aGVuIGZpbHRlcmluZyBieSBkYXRlICovXG5leHBvcnQgZW51bSBQb3N0T2JqZWN0c0Nvbm5lY3Rpb25EYXRlQ29sdW1uRW51bSB7XG4gIC8qKiBUaGUgZGF0ZSB0aGUgY29tbWVudCB3YXMgY3JlYXRlZCBpbiBsb2NhbCB0aW1lLiAqL1xuICBEYXRlID0gJ0RBVEUnLFxuICAvKiogVGhlIG1vc3QgcmVjZW50IG1vZGlmaWNhdGlvbiBkYXRlIG9mIHRoZSBjb21tZW50LiAqL1xuICBNb2RpZmllZCA9ICdNT0RJRklFRCdcbn1cblxuLyoqIEZpZWxkIHRvIG9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5ICovXG5leHBvcnQgZW51bSBQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bSB7XG4gIC8qKiBPcmRlciBieSBhdXRob3IgKi9cbiAgQXV0aG9yID0gJ0FVVEhPUicsXG4gIC8qKiBPcmRlciBieSB0aGUgbnVtYmVyIG9mIGNvbW1lbnRzIGl0IGhhcyBhY3F1aXJlZCAqL1xuICBDb21tZW50Q291bnQgPSAnQ09NTUVOVF9DT1VOVCcsXG4gIC8qKiBPcmRlciBieSBwdWJsaXNoIGRhdGUgKi9cbiAgRGF0ZSA9ICdEQVRFJyxcbiAgLyoqIFByZXNlcnZlIHRoZSBJRCBvcmRlciBnaXZlbiBpbiB0aGUgSU4gYXJyYXkgKi9cbiAgSW4gPSAnSU4nLFxuICAvKiogT3JkZXIgYnkgdGhlIG1lbnUgb3JkZXIgdmFsdWUgKi9cbiAgTWVudU9yZGVyID0gJ01FTlVfT1JERVInLFxuICAvKiogT3JkZXIgYnkgbGFzdCBtb2RpZmllZCBkYXRlICovXG4gIE1vZGlmaWVkID0gJ01PRElGSUVEJyxcbiAgLyoqIFByZXNlcnZlIHNsdWcgb3JkZXIgZ2l2ZW4gaW4gdGhlIE5BTUVfSU4gYXJyYXkgKi9cbiAgTmFtZUluID0gJ05BTUVfSU4nLFxuICAvKiogT3JkZXIgYnkgcGFyZW50IElEICovXG4gIFBhcmVudCA9ICdQQVJFTlQnLFxuICAvKiogT3JkZXIgYnkgc2x1ZyAqL1xuICBTbHVnID0gJ1NMVUcnLFxuICAvKiogT3JkZXIgYnkgdGl0bGUgKi9cbiAgVGl0bGUgPSAnVElUTEUnXG59XG5cbi8qKiBPcHRpb25zIGZvciBvcmRlcmluZyB0aGUgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdE9iamVjdHNDb25uZWN0aW9uT3JkZXJieUlucHV0ID0ge1xuICAvKiogVGhlIGZpZWxkIHRvIG9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5ICovXG4gIGZpZWxkOiBQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bTtcbiAgLyoqIFBvc3NpYmxlIGRpcmVjdGlvbnMgaW4gd2hpY2ggdG8gb3JkZXIgYSBsaXN0IG9mIGl0ZW1zICovXG4gIG9yZGVyOiBPcmRlckVudW07XG59O1xuXG4vKiogU2V0IHJlbGF0aW9uc2hpcHMgYmV0d2VlbiB0aGUgcG9zdCB0byBwb3N0Rm9ybWF0cyAqL1xuZXhwb3J0IHR5cGUgUG9zdFBvc3RGb3JtYXRzSW5wdXQgPSB7XG4gIC8qKiBJZiB0cnVlLCB0aGlzIHdpbGwgYXBwZW5kIHRoZSBwb3N0Rm9ybWF0IHRvIGV4aXN0aW5nIHJlbGF0ZWQgcG9zdEZvcm1hdHMuIElmIGZhbHNlLCB0aGlzIHdpbGwgcmVwbGFjZSBleGlzdGluZyByZWxhdGlvbnNoaXBzLiBEZWZhdWx0IHRydWUuICovXG4gIGFwcGVuZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBpbnB1dCBsaXN0IG9mIGl0ZW1zIHRvIHNldC4gKi9cbiAgbm9kZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFBvc3RGb3JtYXRzTm9kZUlucHV0Pj4+O1xufTtcblxuLyoqIExpc3Qgb2YgcG9zdEZvcm1hdHMgdG8gY29ubmVjdCB0aGUgcG9zdCB0by4gSWYgYW4gSUQgaXMgc2V0LCBpdCB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBjb25uZWN0aW9uLiBJZiBub3QsIGl0IHdpbGwgbG9vayBmb3IgYSBzbHVnLiBJZiBuZWl0aGVyIGFyZSB2YWxpZCBleGlzdGluZyB0ZXJtcywgYW5kIHRoZSBzaXRlIGlzIGNvbmZpZ3VyZWQgdG8gYWxsb3cgdGVybXMgdG8gYmUgY3JlYXRlZCBkdXJpbmcgcG9zdCBtdXRhdGlvbnMsIGEgdGVybSB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIE5hbWUgaWYgaXQgZXhpc3RzIGluIHRoZSBpbnB1dCwgdGhlbiBmYWxsYmFjayB0byB0aGUgc2x1ZyBpZiBpdCBleGlzdHMuICovXG5leHBvcnQgdHlwZSBQb3N0UG9zdEZvcm1hdHNOb2RlSW5wdXQgPSB7XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHBvc3RGb3JtYXQuIFRoaXMgZmllbGQgaXMgdXNlZCB0byBzZXQgYSBkZXNjcmlwdGlvbiBvZiB0aGUgcG9zdEZvcm1hdCBpZiBhIG5ldyBvbmUgaXMgY3JlYXRlZCBkdXJpbmcgdGhlIG11dGF0aW9uLiAqL1xuICBkZXNjcmlwdGlvbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBwb3N0Rm9ybWF0LiBJZiBwcmVzZW50LCB0aGlzIHdpbGwgYmUgdXNlZCB0byBjb25uZWN0IHRvIHRoZSBwb3N0LiBJZiBubyBleGlzdGluZyBwb3N0Rm9ybWF0IGV4aXN0cyB3aXRoIHRoaXMgSUQsIG5vIGNvbm5lY3Rpb24gd2lsbCBiZSBtYWRlLiAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgcG9zdEZvcm1hdC4gVGhpcyBmaWVsZCBpcyB1c2VkIHRvIGNyZWF0ZSBhIG5ldyB0ZXJtLCBpZiB0ZXJtIGNyZWF0aW9uIGlzIGVuYWJsZWQgaW4gbmVzdGVkIG11dGF0aW9ucywgYW5kIGlmIG9uZSBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0IHdpdGggdGhlIHByb3ZpZGVkIHNsdWcgb3IgSUQgb3IgaWYgYSBzbHVnIG9yIElEIGlzIG5vdCBwcm92aWRlZC4gSWYgbm8gbmFtZSBpcyBpbmNsdWRlZCBhbmQgYSB0ZXJtIGlzIGNyZWF0ZWQsIHRoZSBjcmVhdGlvbiB3aWxsIGZhbGxiYWNrIHRvIHRoZSBzbHVnIGZpZWxkLiAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgc2x1ZyBvZiB0aGUgcG9zdEZvcm1hdC4gSWYgbm8gSUQgaXMgcHJlc2VudCwgdGhpcyBmaWVsZCB3aWxsIGJlIHVzZWQgdG8gbWFrZSBhIGNvbm5lY3Rpb24uIElmIG5vIGV4aXN0aW5nIHRlcm0gZXhpc3RzIHdpdGggdGhpcyBzbHVnLCB0aGlzIGZpZWxkIHdpbGwgYmUgdXNlZCBhcyBhIGZhbGxiYWNrIHRvIHRoZSBOYW1lIGZpZWxkIHdoZW4gY3JlYXRpbmcgYSBuZXcgdGVybSB0byBjb25uZWN0IHRvLCBpZiB0ZXJtIGNyZWF0aW9uIGlzIGVuYWJsZWQgYXMgYSBuZXN0ZWQgbXV0YXRpb24uICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgc3RhdHVzIG9mIHRoZSBvYmplY3QuICovXG5leHBvcnQgZW51bSBQb3N0U3RhdHVzRW51bSB7XG4gIC8qKiBPYmplY3RzIHdpdGggdGhlIGFjZi1kaXNhYmxlZCBzdGF0dXMgKi9cbiAgQWNmRGlzYWJsZWQgPSAnQUNGX0RJU0FCTEVEJyxcbiAgLyoqIE9iamVjdHMgd2l0aCB0aGUgYXV0by1kcmFmdCBzdGF0dXMgKi9cbiAgQXV0b0RyYWZ0ID0gJ0FVVE9fRFJBRlQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBkcmFmdCBzdGF0dXMgKi9cbiAgRHJhZnQgPSAnRFJBRlQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBmdXR1cmUgc3RhdHVzICovXG4gIEZ1dHVyZSA9ICdGVVRVUkUnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBpbmhlcml0IHN0YXR1cyAqL1xuICBJbmhlcml0ID0gJ0lOSEVSSVQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBwZW5kaW5nIHN0YXR1cyAqL1xuICBQZW5kaW5nID0gJ1BFTkRJTkcnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBwcml2YXRlIHN0YXR1cyAqL1xuICBQcml2YXRlID0gJ1BSSVZBVEUnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSBwdWJsaXNoIHN0YXR1cyAqL1xuICBQdWJsaXNoID0gJ1BVQkxJU0gnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSByZXF1ZXN0LWNvbXBsZXRlZCBzdGF0dXMgKi9cbiAgUmVxdWVzdENvbXBsZXRlZCA9ICdSRVFVRVNUX0NPTVBMRVRFRCcsXG4gIC8qKiBPYmplY3RzIHdpdGggdGhlIHJlcXVlc3QtY29uZmlybWVkIHN0YXR1cyAqL1xuICBSZXF1ZXN0Q29uZmlybWVkID0gJ1JFUVVFU1RfQ09ORklSTUVEJyxcbiAgLyoqIE9iamVjdHMgd2l0aCB0aGUgcmVxdWVzdC1mYWlsZWQgc3RhdHVzICovXG4gIFJlcXVlc3RGYWlsZWQgPSAnUkVRVUVTVF9GQUlMRUQnLFxuICAvKiogT2JqZWN0cyB3aXRoIHRoZSByZXF1ZXN0LXBlbmRpbmcgc3RhdHVzICovXG4gIFJlcXVlc3RQZW5kaW5nID0gJ1JFUVVFU1RfUEVORElORycsXG4gIC8qKiBPYmplY3RzIHdpdGggdGhlIHRyYXNoIHN0YXR1cyAqL1xuICBUcmFzaCA9ICdUUkFTSCdcbn1cblxuLyoqIFNldCByZWxhdGlvbnNoaXBzIGJldHdlZW4gdGhlIHBvc3QgdG8gdGFncyAqL1xuZXhwb3J0IHR5cGUgUG9zdFRhZ3NJbnB1dCA9IHtcbiAgLyoqIElmIHRydWUsIHRoaXMgd2lsbCBhcHBlbmQgdGhlIHRhZyB0byBleGlzdGluZyByZWxhdGVkIHRhZ3MuIElmIGZhbHNlLCB0aGlzIHdpbGwgcmVwbGFjZSBleGlzdGluZyByZWxhdGlvbnNoaXBzLiBEZWZhdWx0IHRydWUuICovXG4gIGFwcGVuZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBpbnB1dCBsaXN0IG9mIGl0ZW1zIHRvIHNldC4gKi9cbiAgbm9kZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFRhZ3NOb2RlSW5wdXQ+Pj47XG59O1xuXG4vKiogTGlzdCBvZiB0YWdzIHRvIGNvbm5lY3QgdGhlIHBvc3QgdG8uIElmIGFuIElEIGlzIHNldCwgaXQgd2lsbCBiZSB1c2VkIHRvIGNyZWF0ZSB0aGUgY29ubmVjdGlvbi4gSWYgbm90LCBpdCB3aWxsIGxvb2sgZm9yIGEgc2x1Zy4gSWYgbmVpdGhlciBhcmUgdmFsaWQgZXhpc3RpbmcgdGVybXMsIGFuZCB0aGUgc2l0ZSBpcyBjb25maWd1cmVkIHRvIGFsbG93IHRlcm1zIHRvIGJlIGNyZWF0ZWQgZHVyaW5nIHBvc3QgbXV0YXRpb25zLCBhIHRlcm0gd2lsbCBiZSBjcmVhdGVkIHVzaW5nIHRoZSBOYW1lIGlmIGl0IGV4aXN0cyBpbiB0aGUgaW5wdXQsIHRoZW4gZmFsbGJhY2sgdG8gdGhlIHNsdWcgaWYgaXQgZXhpc3RzLiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRhZ3NOb2RlSW5wdXQgPSB7XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHRhZy4gVGhpcyBmaWVsZCBpcyB1c2VkIHRvIHNldCBhIGRlc2NyaXB0aW9uIG9mIHRoZSB0YWcgaWYgYSBuZXcgb25lIGlzIGNyZWF0ZWQgZHVyaW5nIHRoZSBtdXRhdGlvbi4gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgdGFnLiBJZiBwcmVzZW50LCB0aGlzIHdpbGwgYmUgdXNlZCB0byBjb25uZWN0IHRvIHRoZSBwb3N0LiBJZiBubyBleGlzdGluZyB0YWcgZXhpc3RzIHdpdGggdGhpcyBJRCwgbm8gY29ubmVjdGlvbiB3aWxsIGJlIG1hZGUuICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSB0YWcuIFRoaXMgZmllbGQgaXMgdXNlZCB0byBjcmVhdGUgYSBuZXcgdGVybSwgaWYgdGVybSBjcmVhdGlvbiBpcyBlbmFibGVkIGluIG5lc3RlZCBtdXRhdGlvbnMsIGFuZCBpZiBvbmUgZG9lcyBub3QgYWxyZWFkeSBleGlzdCB3aXRoIHRoZSBwcm92aWRlZCBzbHVnIG9yIElEIG9yIGlmIGEgc2x1ZyBvciBJRCBpcyBub3QgcHJvdmlkZWQuIElmIG5vIG5hbWUgaXMgaW5jbHVkZWQgYW5kIGEgdGVybSBpcyBjcmVhdGVkLCB0aGUgY3JlYXRpb24gd2lsbCBmYWxsYmFjayB0byB0aGUgc2x1ZyBmaWVsZC4gKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHNsdWcgb2YgdGhlIHRhZy4gSWYgbm8gSUQgaXMgcHJlc2VudCwgdGhpcyBmaWVsZCB3aWxsIGJlIHVzZWQgdG8gbWFrZSBhIGNvbm5lY3Rpb24uIElmIG5vIGV4aXN0aW5nIHRlcm0gZXhpc3RzIHdpdGggdGhpcyBzbHVnLCB0aGlzIGZpZWxkIHdpbGwgYmUgdXNlZCBhcyBhIGZhbGxiYWNrIHRvIHRoZSBOYW1lIGZpZWxkIHdoZW4gY3JlYXRpbmcgYSBuZXcgdGVybSB0byBjb25uZWN0IHRvLCBpZiB0ZXJtIGNyZWF0aW9uIGlzIGVuYWJsZWQgYXMgYSBuZXN0ZWQgbXV0YXRpb24uICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIGNhdGVnb3J5IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUb0NhdGVnb3J5Q29ubmVjdGlvbiA9IENhdGVnb3J5Q29ubmVjdGlvbiAmIENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFBvc3RUb0NhdGVnb3J5Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q2F0ZWdvcnk+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0VG9DYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSA9IENhdGVnb3J5Q29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb0NhdGVnb3J5Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENhdGVnb3J5O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7UG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBQb3N0VG9DYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbyA9IENhdGVnb3J5Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb0NhdGVnb3J5Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUG9zdFRvQ2F0ZWdvcnlDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBvc3RUb0NhdGVnb3J5Q29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFVuaXF1ZSBjYWNoZSBrZXkgdG8gYmUgcHJvZHVjZWQgd2hlbiB0aGlzIHF1ZXJ5IGlzIHN0b3JlZCBpbiBhbiBvYmplY3QgY2FjaGUuIERlZmF1bHQgaXMgJ2NvcmUnLiAqL1xuICBjYWNoZURvbWFpbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGVybSBJRCB0byByZXRyaWV2ZSBjaGlsZCB0ZXJtcyBvZi4gSWYgbXVsdGlwbGUgdGF4b25vbWllcyBhcmUgcGFzc2VkLCAkY2hpbGRfb2YgaXMgaWdub3JlZC4gRGVmYXVsdCAwLiAqL1xuICBjaGlsZE9mPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUcnVlIHRvIGxpbWl0IHJlc3VsdHMgdG8gdGVybXMgdGhhdCBoYXZlIG5vIGNoaWxkcmVuLiBUaGlzIHBhcmFtZXRlciBoYXMgbm8gZWZmZWN0IG9uIG5vbi1oaWVyYXJjaGljYWwgdGF4b25vbWllcy4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgY2hpbGRsZXNzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgdGVybXMgd2hlcmUgdGhlIGRlc2NyaXB0aW9uIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBkZXNjcmlwdGlvbkxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUuIElmICRpbmNsdWRlIGlzIG5vbi1lbXB0eSwgJGV4Y2x1ZGUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSBpZHMgdG8gZXhjbHVkZSBhbG9uZyB3aXRoIGFsbCBvZiB0aGVpciBkZXNjZW5kYW50IHRlcm1zLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlX3RyZWUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZVRyZWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoZXRoZXIgdG8gaGlkZSB0ZXJtcyBub3QgYXNzaWduZWQgdG8gYW55IHBvc3RzLiBBY2NlcHRzIHRydWUgb3IgZmFsc2UuIERlZmF1bHQgZmFsc2UgKi9cbiAgaGlkZUVtcHR5PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogV2hldGhlciB0byBpbmNsdWRlIHRlcm1zIHRoYXQgaGF2ZSBub24tZW1wdHkgZGVzY2VuZGFudHMgKGV2ZW4gaWYgJGhpZGVfZW1wdHkgaXMgc2V0IHRvIHRydWUpLiBEZWZhdWx0IHRydWUuICovXG4gIGhpZXJhcmNoaWNhbD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGluY2x1ZGUuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGluY2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIG5hbWVzIHRvIHJldHVybiB0ZXJtKHMpIGZvci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBuYW1lIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBuYW1lTGlrZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygb2JqZWN0IElEcy4gUmVzdWx0cyB3aWxsIGJlIGxpbWl0ZWQgdG8gdGVybXMgYXNzb2NpYXRlZCB3aXRoIHRoZXNlIG9iamVjdHMuICovXG4gIG9iamVjdElkcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRGlyZWN0aW9uIHRoZSBjb25uZWN0aW9uIHNob3VsZCBiZSBvcmRlcmVkIGluICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQocykgdG8gb3JkZXIgdGVybXMgYnkuIERlZmF1bHRzIHRvICduYW1lJy4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8VGVybU9iamVjdHNDb25uZWN0aW9uT3JkZXJieUVudW0+O1xuICAvKiogV2hldGhlciB0byBwYWQgdGhlIHF1YW50aXR5IG9mIGEgdGVybSdzIGNoaWxkcmVuIGluIHRoZSBxdWFudGl0eSBvZiBlYWNoIHRlcm0ncyBcImNvdW50XCIgb2JqZWN0IHZhcmlhYmxlLiBEZWZhdWx0IGZhbHNlLiAqL1xuICBwYWRDb3VudHM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBQYXJlbnQgdGVybSBJRCB0byByZXRyaWV2ZSBkaXJlY3QtY2hpbGQgdGVybXMgb2YuIERlZmF1bHQgZW1wdHkuICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogU2VhcmNoIGNyaXRlcmlhIHRvIG1hdGNoIHRlcm1zLiBXaWxsIGJlIFNRTC1mb3JtYXR0ZWQgd2l0aCB3aWxkY2FyZHMgYmVmb3JlIGFuZCBhZnRlci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBzbHVncyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIHRheG9ub215IElEcywgdG8gbWF0Y2ggd2hlbiBxdWVyeWluZyB0ZXJtcy4gKi9cbiAgdGVybVRheG9ub21JZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9teUlkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIHByaW1lIG1ldGEgY2FjaGVzIGZvciBtYXRjaGVkIHRlcm1zLiBEZWZhdWx0IHRydWUuICovXG4gIHVwZGF0ZVRlcm1NZXRhQ2FjaGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBDb21tZW50IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUb0NvbW1lbnRDb25uZWN0aW9uID0gQ29tbWVudENvbm5lY3Rpb24gJiBDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb0NvbW1lbnRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUG9zdFRvQ29tbWVudENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8UG9zdFRvQ29tbWVudENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbW1lbnQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBQb3N0VG9Db21tZW50Q29ubmVjdGlvbkVkZ2UgPSBDb21tZW50Q29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb0NvbW1lbnRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ29tbWVudDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Bvc3RUb0NvbW1lbnRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBQb3N0VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvID0gQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUG9zdFRvQ29tbWVudENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvQ29tbWVudENvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBDb21tZW50IGF1dGhvciBlbWFpbCBhZGRyZXNzLiAqL1xuICBhdXRob3JFbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyB0byBpbmNsdWRlIGNvbW1lbnRzIGZvci4gKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gZXhjbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDb21tZW50IGF1dGhvciBVUkwuICovXG4gIGF1dGhvclVybD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY29tbWVudCBJRHMgdG8gaW5jbHVkZS4gKi9cbiAgY29tbWVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb2YgdXNlcnMgd2hvc2UgdW5hcHByb3ZlZCBjb21tZW50cyB3aWxsIGJlIHJldHVybmVkIGJ5IHRoZSBxdWVyeSByZWdhcmRsZXNzIG9mIHN0YXR1cy4gKi9cbiAgY29tbWVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIG9mIGEgZ2l2ZW4gdHlwZS4gKi9cbiAgY29tbWVudFR5cGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEluY2x1ZGUgY29tbWVudHMgZnJvbSBhIGdpdmVuIGFycmF5IG9mIGNvbW1lbnQgdHlwZXMuICovXG4gIGNvbW1lbnRUeXBlSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBFeGNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZU5vdEluPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IG9iamVjdCBhdXRob3IgSUQgdG8gbGltaXQgcmVzdWx0cyBieS4gKi9cbiAgY29udGVudEF1dGhvcj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyB0byByZXRyaWV2ZSBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRBdXRob3JJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyAqbm90KiB0byByZXRyaWV2ZSBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRBdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogTGltaXQgcmVzdWx0cyB0byB0aG9zZSBhZmZpbGlhdGVkIHdpdGggYSBnaXZlbiBjb250ZW50IG9iamVjdCBJRC4gKi9cbiAgY29udGVudElkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBpbmNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgY29udGVudCBvYmplY3QgSURzIHRvIGV4Y2x1ZGUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRJZE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDb250ZW50IG9iamVjdCBuYW1lIChpLmUuIHNsdWcgKSB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudE5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbnRlbnQgT2JqZWN0IHBhcmVudCBJRCB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudFBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY29udGVudCBvYmplY3Qgc3RhdHVzZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50U3RhdHVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgdHlwZSBvciBhcnJheSBvZiB0eXBlcyB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gUGFzcyAnYW55JyB0byBtYXRjaCBhbnkgdmFsdWUuICovXG4gIGNvbnRlbnRUeXBlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPENvbnRlbnRUeXBlRW51bT4+PjtcbiAgLyoqIEFycmF5IG9mIElEcyBvciBlbWFpbCBhZGRyZXNzZXMgb2YgdXNlcnMgd2hvc2UgdW5hcHByb3ZlZCBjb21tZW50cyB3aWxsIGJlIHJldHVybmVkIGJ5IHRoZSBxdWVyeSByZWdhcmRsZXNzIG9mICRzdGF0dXMuIERlZmF1bHQgZW1wdHkgKi9cbiAgaW5jbHVkZVVuYXBwcm92ZWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEthcm1hIHNjb3JlIHRvIHJldHJpZXZlIG1hdGNoaW5nIGNvbW1lbnRzIGZvci4gKi9cbiAga2FybWE/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjYXJkaW5hbGl0eSBvZiB0aGUgb3JkZXIgb2YgdGhlIGNvbm5lY3Rpb24gKi9cbiAgb3JkZXI/OiBJbnB1dE1heWJlPE9yZGVyRW51bT47XG4gIC8qKiBGaWVsZCB0byBvcmRlciB0aGUgY29tbWVudHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPENvbW1lbnRzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFBhcmVudCBJRCBvZiBjb21tZW50IHRvIHJldHJpZXZlIGNoaWxkcmVuIG9mLiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgcGFyZW50IElEcyBvZiBjb21tZW50cyAqbm90KiB0byByZXRyaWV2ZSBjaGlsZHJlbiBmb3IuICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTZWFyY2ggdGVybShzKSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29tbWVudCBzdGF0dXMgdG8gbGltaXQgcmVzdWx0cyBieS4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZvciBhIHNwZWNpZmljIHVzZXIgSUQuICovXG4gIHVzZXJJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUb1BhcmVudENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIFBvc3RDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9QYXJlbnRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXNcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBjb250ZW50IHR5cGUgaXMgbm90IGhpZXJhcmNoaWNhbCBhbmQgdHlwaWNhbGx5IHdpbGwgbm90IGhhdmUgYSBwYXJlbnRcbiAgICovXG4gIG5vZGU6IFBvc3Q7XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBwb3N0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUb1Bvc3RDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFBvc3RDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1Bvc3RDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUG9zdFRvUG9zdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8UG9zdFRvUG9zdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBvc3Q+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0VG9Qb3N0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBQb3N0VG9Qb3N0Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgUG9zdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1Bvc3RDb25uZWN0aW9uRWRnZSc7XG4gIC8qKlxuICAgKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb25cbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBjb250ZW50IHR5cGUgaXMgbm90IGhpZXJhcmNoaWNhbCBhbmQgdHlwaWNhbGx5IHdpbGwgbm90IGhhdmUgYW5jZXN0b3JzXG4gICAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZVxuICAgKiBAZGVwcmVjYXRlZCBUaGlzIGNvbnRlbnQgdHlwZSBpcyBub3QgaGllcmFyY2hpY2FsIGFuZCB0eXBpY2FsbHkgd2lsbCBub3QgaGF2ZSBhbmNlc3RvcnNcbiAgICovXG4gIG5vZGU6IFBvc3Q7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtQb3N0VG9Qb3N0Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyA9IFBhZ2VJbmZvICYgUG9zdENvbm5lY3Rpb25QYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdFRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBwb3N0Rm9ybWF0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFBvc3RUb1Bvc3RGb3JtYXRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFBvc3RGb3JtYXRDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1Bvc3RGb3JtYXRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUG9zdFRvUG9zdEZvcm1hdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8UG9zdFRvUG9zdEZvcm1hdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBvc3RGb3JtYXQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBQb3N0VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgUG9zdEZvcm1hdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1Bvc3RGb3JtYXRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogUG9zdEZvcm1hdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Bvc3RUb1Bvc3RGb3JtYXRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBQb3N0VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBQb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUG9zdFRvUG9zdEZvcm1hdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvUG9zdEZvcm1hdENvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBVbmlxdWUgY2FjaGUga2V5IHRvIGJlIHByb2R1Y2VkIHdoZW4gdGhpcyBxdWVyeSBpcyBzdG9yZWQgaW4gYW4gb2JqZWN0IGNhY2hlLiBEZWZhdWx0IGlzICdjb3JlJy4gKi9cbiAgY2FjaGVEb21haW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRlcm0gSUQgdG8gcmV0cmlldmUgY2hpbGQgdGVybXMgb2YuIElmIG11bHRpcGxlIHRheG9ub21pZXMgYXJlIHBhc3NlZCwgJGNoaWxkX29mIGlzIGlnbm9yZWQuIERlZmF1bHQgMC4gKi9cbiAgY2hpbGRPZj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVHJ1ZSB0byBsaW1pdCByZXN1bHRzIHRvIHRlcm1zIHRoYXQgaGF2ZSBubyBjaGlsZHJlbi4gVGhpcyBwYXJhbWV0ZXIgaGFzIG5vIGVmZmVjdCBvbiBub24taGllcmFyY2hpY2FsIHRheG9ub21pZXMuIERlZmF1bHQgZmFsc2UuICovXG4gIGNoaWxkbGVzcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBkZXNjcmlwdGlvbiBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgZGVzY3JpcHRpb25MaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUgYWxvbmcgd2l0aCBhbGwgb2YgdGhlaXIgZGVzY2VuZGFudCB0ZXJtcy4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZV90cmVlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGVUcmVlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIGhpZGUgdGVybXMgbm90IGFzc2lnbmVkIHRvIGFueSBwb3N0cy4gQWNjZXB0cyB0cnVlIG9yIGZhbHNlLiBEZWZhdWx0IGZhbHNlICovXG4gIGhpZGVFbXB0eT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gaW5jbHVkZSB0ZXJtcyB0aGF0IGhhdmUgbm9uLWVtcHR5IGRlc2NlbmRhbnRzIChldmVuIGlmICRoaWRlX2VtcHR5IGlzIHNldCB0byB0cnVlKS4gRGVmYXVsdCB0cnVlLiAqL1xuICBoaWVyYXJjaGljYWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBpbmNsdWRlLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBpbmNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBuYW1lcyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgbmFtZSBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZUxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIG9iamVjdCBJRHMuIFJlc3VsdHMgd2lsbCBiZSBsaW1pdGVkIHRvIHRlcm1zIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBvYmplY3RzLiAqL1xuICBvYmplY3RJZHM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIERpcmVjdGlvbiB0aGUgY29ubmVjdGlvbiBzaG91bGQgYmUgb3JkZXJlZCBpbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkKHMpIHRvIG9yZGVyIHRlcm1zIGJ5LiBEZWZhdWx0cyB0byAnbmFtZScuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFdoZXRoZXIgdG8gcGFkIHRoZSBxdWFudGl0eSBvZiBhIHRlcm0ncyBjaGlsZHJlbiBpbiB0aGUgcXVhbnRpdHkgb2YgZWFjaCB0ZXJtJ3MgXCJjb3VudFwiIG9iamVjdCB2YXJpYWJsZS4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgcGFkQ291bnRzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUGFyZW50IHRlcm0gSUQgdG8gcmV0cmlldmUgZGlyZWN0LWNoaWxkIHRlcm1zIG9mLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFNlYXJjaCBjcml0ZXJpYSB0byBtYXRjaCB0ZXJtcy4gV2lsbCBiZSBTUUwtZm9ybWF0dGVkIHdpdGggd2lsZGNhcmRzIGJlZm9yZSBhbmQgYWZ0ZXIuIERlZmF1bHQgZW1wdHkuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygc2x1Z3MgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9tSWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gdGF4b25vbXkgSURzLCB0byBtYXRjaCB3aGVuIHF1ZXJ5aW5nIHRlcm1zLiAqL1xuICB0ZXJtVGF4b25vbXlJZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hldGhlciB0byBwcmltZSBtZXRhIGNhY2hlcyBmb3IgbWF0Y2hlZCB0ZXJtcy4gRGVmYXVsdCB0cnVlLiAqL1xuICB1cGRhdGVUZXJtTWV0YUNhY2hlPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUG9zdCB0eXBlIGFuZCB0aGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0VG9QcmV2aWV3Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgT25lVG9PbmVDb25uZWN0aW9uICYgUG9zdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1ByZXZpZXdDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbm9kZSBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZTogUG9zdDtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvUmV2aXNpb25Db25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFBvc3RDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1JldmlzaW9uQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBvc3RUb1JldmlzaW9uQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxQb3N0VG9SZXZpc2lvbkNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBvc3Q+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBQb3N0VG9SZXZpc2lvbkNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvUmV2aXNpb25Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQb3N0Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdFRvUmV2aXNpb25Db25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogUG9zdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Bvc3RUb1JldmlzaW9uQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvUmV2aXNpb25Db25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFBvc3RDb25uZWN0aW9uUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1JldmlzaW9uQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUG9zdFRvUmV2aXNpb25Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBvc3RUb1JldmlzaW9uQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDYXRlZ29yeSBJRCAqL1xuICBjYXRlZ29yeUlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogVXNlIENhdGVnb3J5IFNsdWcgKi9cbiAgY2F0ZWdvcnlOYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGRhdGVzICovXG4gIGRhdGVRdWVyeT86IElucHV0TWF5YmU8RGF0ZVF1ZXJ5SW5wdXQ+O1xuICAvKiogVHJ1ZSBmb3Igb2JqZWN0cyB3aXRoIHBhc3N3b3JkczsgRmFsc2UgZm9yIG9iamVjdHMgd2l0aG91dCBwYXNzd29yZHM7IG51bGwgZm9yIGFsbCBvYmplY3RzIHdpdGggb3Igd2l0aG91dCBwYXNzd29yZHMgKi9cbiAgaGFzUGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZpYyBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBJRHMgZm9yIHRoZSBvYmplY3RzIHRvIHJldHJpZXZlICovXG4gIGluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBHZXQgb2JqZWN0cyB3aXRoIGEgc3BlY2lmaWMgbWltZVR5cGUgcHJvcGVydHkgKi9cbiAgbWltZVR5cGU/OiBJbnB1dE1heWJlPE1pbWVUeXBlRW51bT47XG4gIC8qKiBTbHVnIC8gcG9zdF9uYW1lIG9mIHRoZSBvYmplY3QgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHRvIHJldHJpZXZlLiBVc2Ugc2x1Z3MgKi9cbiAgbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBJRHMgTk9UIHRvIHJldHJpZXZlLiBJZiB0aGlzIGlzIHVzZWQgaW4gdGhlIHNhbWUgcXVlcnkgYXMgXCJpblwiLCBpdCB3aWxsIGJlIGlnbm9yZWQgKi9cbiAgbm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBVc2UgSUQgdG8gcmV0dXJuIG9ubHkgY2hpbGRyZW4uIFVzZSAwIHRvIHJldHVybiBvbmx5IHRvcC1sZXZlbCBpdGVtcyAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHdob3NlIHBhcmVudCBpcyBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBwb3N0cyB3aG9zZSBwYXJlbnQgaXMgbm90IGluIGFuIGFycmF5ICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBwYXNzd29yZC4gKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNob3cgUG9zdHMgYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaCAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHBvc3RzIHdoZXJlIHBvc3Qgc3RhdHVzIGlzIGluIGFuIGFycmF5LiAqL1xuICBzdGF0aT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT47XG4gIC8qKiBUYWcgU2x1ZyAqL1xuICB0YWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFVzZSBUYWcgSUQgKi9cbiAgdGFnSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRhZyBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBPUiBhbm90aGVyICovXG4gIHRhZ0luPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgT1IgYW5vdGhlciAqL1xuICB0YWdOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIHNsdWdzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgQU5EIGFub3RoZXIgKi9cbiAgdGFnU2x1Z0FuZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBzbHVncywgdXNlZCB0byBpbmNsdWRlIG9iamVjdHMgaW4gQU5ZIHNwZWNpZmllZCB0YWdzICovXG4gIHRhZ1NsdWdJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFBvc3QgdHlwZSBhbmQgdGhlIHRhZyB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0VG9UYWdDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFRhZ0Nvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUG9zdFRvVGFnQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBvc3RUb1RhZ0Nvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8UG9zdFRvVGFnQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8VGFnPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUG9zdFRvVGFnQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBQb3N0VG9UYWdDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBUYWdDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9UYWdDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogVGFnO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7UG9zdFRvVGFnQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvVGFnQ29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBUYWdDb25uZWN0aW9uUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1RhZ0Nvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFBvc3RUb1RhZ0Nvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvVGFnQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFVuaXF1ZSBjYWNoZSBrZXkgdG8gYmUgcHJvZHVjZWQgd2hlbiB0aGlzIHF1ZXJ5IGlzIHN0b3JlZCBpbiBhbiBvYmplY3QgY2FjaGUuIERlZmF1bHQgaXMgJ2NvcmUnLiAqL1xuICBjYWNoZURvbWFpbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGVybSBJRCB0byByZXRyaWV2ZSBjaGlsZCB0ZXJtcyBvZi4gSWYgbXVsdGlwbGUgdGF4b25vbWllcyBhcmUgcGFzc2VkLCAkY2hpbGRfb2YgaXMgaWdub3JlZC4gRGVmYXVsdCAwLiAqL1xuICBjaGlsZE9mPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUcnVlIHRvIGxpbWl0IHJlc3VsdHMgdG8gdGVybXMgdGhhdCBoYXZlIG5vIGNoaWxkcmVuLiBUaGlzIHBhcmFtZXRlciBoYXMgbm8gZWZmZWN0IG9uIG5vbi1oaWVyYXJjaGljYWwgdGF4b25vbWllcy4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgY2hpbGRsZXNzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgdGVybXMgd2hlcmUgdGhlIGRlc2NyaXB0aW9uIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBkZXNjcmlwdGlvbkxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUuIElmICRpbmNsdWRlIGlzIG5vbi1lbXB0eSwgJGV4Y2x1ZGUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSBpZHMgdG8gZXhjbHVkZSBhbG9uZyB3aXRoIGFsbCBvZiB0aGVpciBkZXNjZW5kYW50IHRlcm1zLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlX3RyZWUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZVRyZWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoZXRoZXIgdG8gaGlkZSB0ZXJtcyBub3QgYXNzaWduZWQgdG8gYW55IHBvc3RzLiBBY2NlcHRzIHRydWUgb3IgZmFsc2UuIERlZmF1bHQgZmFsc2UgKi9cbiAgaGlkZUVtcHR5PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogV2hldGhlciB0byBpbmNsdWRlIHRlcm1zIHRoYXQgaGF2ZSBub24tZW1wdHkgZGVzY2VuZGFudHMgKGV2ZW4gaWYgJGhpZGVfZW1wdHkgaXMgc2V0IHRvIHRydWUpLiBEZWZhdWx0IHRydWUuICovXG4gIGhpZXJhcmNoaWNhbD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGluY2x1ZGUuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGluY2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIG5hbWVzIHRvIHJldHVybiB0ZXJtKHMpIGZvci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBuYW1lIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBuYW1lTGlrZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygb2JqZWN0IElEcy4gUmVzdWx0cyB3aWxsIGJlIGxpbWl0ZWQgdG8gdGVybXMgYXNzb2NpYXRlZCB3aXRoIHRoZXNlIG9iamVjdHMuICovXG4gIG9iamVjdElkcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRGlyZWN0aW9uIHRoZSBjb25uZWN0aW9uIHNob3VsZCBiZSBvcmRlcmVkIGluICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQocykgdG8gb3JkZXIgdGVybXMgYnkuIERlZmF1bHRzIHRvICduYW1lJy4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8VGVybU9iamVjdHNDb25uZWN0aW9uT3JkZXJieUVudW0+O1xuICAvKiogV2hldGhlciB0byBwYWQgdGhlIHF1YW50aXR5IG9mIGEgdGVybSdzIGNoaWxkcmVuIGluIHRoZSBxdWFudGl0eSBvZiBlYWNoIHRlcm0ncyBcImNvdW50XCIgb2JqZWN0IHZhcmlhYmxlLiBEZWZhdWx0IGZhbHNlLiAqL1xuICBwYWRDb3VudHM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBQYXJlbnQgdGVybSBJRCB0byByZXRyaWV2ZSBkaXJlY3QtY2hpbGQgdGVybXMgb2YuIERlZmF1bHQgZW1wdHkuICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogU2VhcmNoIGNyaXRlcmlhIHRvIG1hdGNoIHRlcm1zLiBXaWxsIGJlIFNRTC1mb3JtYXR0ZWQgd2l0aCB3aWxkY2FyZHMgYmVmb3JlIGFuZCBhZnRlci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBzbHVncyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIHRheG9ub215IElEcywgdG8gbWF0Y2ggd2hlbiBxdWVyeWluZyB0ZXJtcy4gKi9cbiAgdGVybVRheG9ub21JZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9teUlkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIHByaW1lIG1ldGEgY2FjaGVzIGZvciBtYXRjaGVkIHRlcm1zLiBEZWZhdWx0IHRydWUuICovXG4gIHVwZGF0ZVRlcm1NZXRhQ2FjaGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBQb3N0IHR5cGUgYW5kIHRoZSBUZXJtTm9kZSB0eXBlICovXG5leHBvcnQgdHlwZSBQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgVGVybU5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Bvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFBvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFRlcm1Ob2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUG9zdFRvVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFBvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVGVybU5vZGVDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBUZXJtTm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Bvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUG9zdFRvVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFRlcm1Ob2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFBvc3RUb1Rlcm1Ob2RlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBQb3N0VG9UZXJtTm9kZUNvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBVbmlxdWUgY2FjaGUga2V5IHRvIGJlIHByb2R1Y2VkIHdoZW4gdGhpcyBxdWVyeSBpcyBzdG9yZWQgaW4gYW4gb2JqZWN0IGNhY2hlLiBEZWZhdWx0IGlzICdjb3JlJy4gKi9cbiAgY2FjaGVEb21haW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRlcm0gSUQgdG8gcmV0cmlldmUgY2hpbGQgdGVybXMgb2YuIElmIG11bHRpcGxlIHRheG9ub21pZXMgYXJlIHBhc3NlZCwgJGNoaWxkX29mIGlzIGlnbm9yZWQuIERlZmF1bHQgMC4gKi9cbiAgY2hpbGRPZj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVHJ1ZSB0byBsaW1pdCByZXN1bHRzIHRvIHRlcm1zIHRoYXQgaGF2ZSBubyBjaGlsZHJlbi4gVGhpcyBwYXJhbWV0ZXIgaGFzIG5vIGVmZmVjdCBvbiBub24taGllcmFyY2hpY2FsIHRheG9ub21pZXMuIERlZmF1bHQgZmFsc2UuICovXG4gIGNoaWxkbGVzcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBkZXNjcmlwdGlvbiBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgZGVzY3JpcHRpb25MaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUgYWxvbmcgd2l0aCBhbGwgb2YgdGhlaXIgZGVzY2VuZGFudCB0ZXJtcy4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZV90cmVlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGVUcmVlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIGhpZGUgdGVybXMgbm90IGFzc2lnbmVkIHRvIGFueSBwb3N0cy4gQWNjZXB0cyB0cnVlIG9yIGZhbHNlLiBEZWZhdWx0IGZhbHNlICovXG4gIGhpZGVFbXB0eT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gaW5jbHVkZSB0ZXJtcyB0aGF0IGhhdmUgbm9uLWVtcHR5IGRlc2NlbmRhbnRzIChldmVuIGlmICRoaWRlX2VtcHR5IGlzIHNldCB0byB0cnVlKS4gRGVmYXVsdCB0cnVlLiAqL1xuICBoaWVyYXJjaGljYWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBpbmNsdWRlLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBpbmNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBuYW1lcyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgbmFtZSBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZUxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIG9iamVjdCBJRHMuIFJlc3VsdHMgd2lsbCBiZSBsaW1pdGVkIHRvIHRlcm1zIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBvYmplY3RzLiAqL1xuICBvYmplY3RJZHM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIERpcmVjdGlvbiB0aGUgY29ubmVjdGlvbiBzaG91bGQgYmUgb3JkZXJlZCBpbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkKHMpIHRvIG9yZGVyIHRlcm1zIGJ5LiBEZWZhdWx0cyB0byAnbmFtZScuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFdoZXRoZXIgdG8gcGFkIHRoZSBxdWFudGl0eSBvZiBhIHRlcm0ncyBjaGlsZHJlbiBpbiB0aGUgcXVhbnRpdHkgb2YgZWFjaCB0ZXJtJ3MgXCJjb3VudFwiIG9iamVjdCB2YXJpYWJsZS4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgcGFkQ291bnRzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUGFyZW50IHRlcm0gSUQgdG8gcmV0cmlldmUgZGlyZWN0LWNoaWxkIHRlcm1zIG9mLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFNlYXJjaCBjcml0ZXJpYSB0byBtYXRjaCB0ZXJtcy4gV2lsbCBiZSBTUUwtZm9ybWF0dGVkIHdpdGggd2lsZGNhcmRzIGJlZm9yZSBhbmQgYWZ0ZXIuIERlZmF1bHQgZW1wdHkuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygc2x1Z3MgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogVGhlIFRheG9ub215IHRvIGZpbHRlciB0ZXJtcyBieSAqL1xuICB0YXhvbm9taWVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFRheG9ub215RW51bT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gdGF4b25vbXkgSURzLCB0byBtYXRjaCB3aGVuIHF1ZXJ5aW5nIHRlcm1zLiAqL1xuICB0ZXJtVGF4b25vbUlkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIHRheG9ub215IElEcywgdG8gbWF0Y2ggd2hlbiBxdWVyeWluZyB0ZXJtcy4gKi9cbiAgdGVybVRheG9ub215SWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoZXRoZXIgdG8gcHJpbWUgbWV0YSBjYWNoZXMgZm9yIG1hdGNoZWQgdGVybXMuIERlZmF1bHQgdHJ1ZS4gKi9cbiAgdXBkYXRlVGVybU1ldGFDYWNoZT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbn07XG5cbi8qKiBEZXRhaWxzIGZvciBsYWJlbHMgb2YgdGhlIFBvc3RUeXBlICovXG5leHBvcnQgdHlwZSBQb3N0VHlwZUxhYmVsRGV0YWlscyA9IHtcbiAgX190eXBlbmFtZT86ICdQb3N0VHlwZUxhYmVsRGV0YWlscyc7XG4gIC8qKiBEZWZhdWx0IGlzIOKAmEFkZCBOZXfigJkgZm9yIGJvdGggaGllcmFyY2hpY2FsIGFuZCBub24taGllcmFyY2hpY2FsIHR5cGVzLiAqL1xuICBhZGROZXc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgZm9yIGFkZGluZyBhIG5ldyBzaW5ndWxhciBpdGVtLiAqL1xuICBhZGROZXdJdGVtPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIHRvIHNpZ25pZnkgYWxsIGl0ZW1zIGluIGEgc3VibWVudSBsaW5rLiAqL1xuICBhbGxJdGVtcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3IgYXJjaGl2ZXMgaW4gbmF2IG1lbnVzICovXG4gIGFyY2hpdmVzPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB0aGUgYXR0cmlidXRlcyBtZXRhIGJveC4gKi9cbiAgYXR0cmlidXRlcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3IgZWRpdGluZyBhIHNpbmd1bGFyIGl0ZW0uICovXG4gIGVkaXRJdGVtPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB0aGUgRmVhdHVyZWQgSW1hZ2UgbWV0YSBib3ggdGl0bGUuICovXG4gIGZlYXR1cmVkSW1hZ2U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgZm9yIHRoZSB0YWJsZSB2aWV3cyBoaWRkZW4gaGVhZGluZy4gKi9cbiAgZmlsdGVySXRlbXNMaXN0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB0aGUgbWVkaWEgZnJhbWUgYnV0dG9uLiAqL1xuICBpbnNlcnRJbnRvSXRlbT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3IgdGhlIHRhYmxlIGhpZGRlbiBoZWFkaW5nLiAqL1xuICBpdGVtc0xpc3Q/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgZm9yIHRoZSB0YWJsZSBwYWdpbmF0aW9uIGhpZGRlbiBoZWFkaW5nLiAqL1xuICBpdGVtc0xpc3ROYXZpZ2F0aW9uPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB0aGUgbWVudSBuYW1lLiAqL1xuICBtZW51TmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBHZW5lcmFsIG5hbWUgZm9yIHRoZSBwb3N0IHR5cGUsIHVzdWFsbHkgcGx1cmFsLiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB0aGUgbmV3IGl0ZW0gcGFnZSB0aXRsZS4gKi9cbiAgbmV3SXRlbT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCB1c2VkIHdoZW4gbm8gaXRlbXMgYXJlIGZvdW5kLiAqL1xuICBub3RGb3VuZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCB1c2VkIHdoZW4gbm8gaXRlbXMgYXJlIGluIHRoZSB0cmFzaC4gKi9cbiAgbm90Rm91bmRJblRyYXNoPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIHVzZWQgdG8gcHJlZml4IHBhcmVudHMgb2YgaGllcmFyY2hpY2FsIGl0ZW1zLiAqL1xuICBwYXJlbnRJdGVtQ29sb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgZm9yIHJlbW92aW5nIHRoZSBmZWF0dXJlZCBpbWFnZS4gKi9cbiAgcmVtb3ZlRmVhdHVyZWRJbWFnZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3Igc2VhcmNoaW5nIHBsdXJhbCBpdGVtcy4gKi9cbiAgc2VhcmNoSXRlbXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogTGFiZWwgZm9yIHNldHRpbmcgdGhlIGZlYXR1cmVkIGltYWdlLiAqL1xuICBzZXRGZWF0dXJlZEltYWdlPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIE5hbWUgZm9yIG9uZSBvYmplY3Qgb2YgdGhpcyBwb3N0IHR5cGUuICovXG4gIHNpbmd1bGFyTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3IgdGhlIG1lZGlhIGZyYW1lIGZpbHRlci4gKi9cbiAgdXBsb2FkZWRUb1RoaXNJdGVtPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGluIHRoZSBtZWRpYSBmcmFtZSBmb3IgdXNpbmcgYSBmZWF0dXJlZCBpbWFnZS4gKi9cbiAgdXNlRmVhdHVyZWRJbWFnZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBMYWJlbCBmb3Igdmlld2luZyBhIHNpbmd1bGFyIGl0ZW0uICovXG4gIHZpZXdJdGVtPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIExhYmVsIGZvciB2aWV3aW5nIHBvc3QgdHlwZSBhcmNoaXZlcy4gKi9cbiAgdmlld0l0ZW1zPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBOb2RlcyB0aGF0IGNhbiBiZSBzZWVuIGluIGEgcHJldmlldyAodW5wdWJsaXNoZWQpIHN0YXRlLiAqL1xuZXhwb3J0IHR5cGUgUHJldmlld2FibGUgPSB7XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgYSBub2RlIGluIHRoZSBwcmV2aWV3IHN0YXRlICovXG4gIGlzUHJldmlldz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRhdGFiYXNlIGlkIG9mIHRoZSBwcmV2aWV3IG5vZGUgKi9cbiAgcHJldmlld1JldmlzaW9uRGF0YWJhc2VJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgYSBub2RlIGluIHRoZSBwcmV2aWV3IHN0YXRlICovXG4gIHByZXZpZXdSZXZpc2lvbklkPzogTWF5YmU8U2NhbGFyc1snSUQnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSByZWFkaW5nIHNldHRpbmcgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUmVhZGluZ1NldHRpbmdzID0ge1xuICBfX3R5cGVuYW1lPzogJ1JlYWRpbmdTZXR0aW5ncyc7XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhZ2UgdGhhdCBzaG91bGQgZGlzcGxheSB0aGUgbGF0ZXN0IHBvc3RzICovXG4gIHBhZ2VGb3JQb3N0cz86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhZ2UgdGhhdCBzaG91bGQgYmUgZGlzcGxheWVkIG9uIHRoZSBmcm9udCBwYWdlICovXG4gIHBhZ2VPbkZyb250PzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIEJsb2cgcGFnZXMgc2hvdyBhdCBtb3N0LiAqL1xuICBwb3N0c1BlclBhZ2U/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogV2hhdCB0byBzaG93IG9uIHRoZSBmcm9udCBwYWdlICovXG4gIHNob3dPbkZyb250PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIHJlZ2lzdGVyVXNlciBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFJlZ2lzdGVyVXNlcklucHV0ID0ge1xuICAvKiogVXNlcidzIEFPTCBJTSBhY2NvdW50LiAqL1xuICBhaW0/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgY29udGVudCBhYm91dCB0aGUgdXNlci4gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgd2lsbCBiZSBzaG93biBvbiB0aGUgc2l0ZS4gRGVmYXVsdHMgdG8gdXNlcidzIHVzZXJuYW1lLiBJdCBpcyBsaWtlbHkgdGhhdCB5b3Ugd2lsbCB3YW50IHRvIGNoYW5nZSB0aGlzLCBmb3IgYm90aCBhcHBlYXJhbmNlIGFuZCBzZWN1cml0eSB0aHJvdWdoIG9ic2N1cml0eSAodGhhdCBpcyBpZiB5b3UgZG9udCB1c2UgYW5kIGRlbGV0ZSB0aGUgZGVmYXVsdCBhZG1pbiB1c2VyKS4gKi9cbiAgZGlzcGxheU5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLiAqL1xuICBlbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogXHRUaGUgdXNlcidzIGZpcnN0IG5hbWUuICovXG4gIGZpcnN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIEphYmJlciBhY2NvdW50LiAqL1xuICBqYWJiZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSB1c2VyJ3MgbGFzdCBuYW1lLiAqL1xuICBsYXN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIGxvY2FsZS4gKi9cbiAgbG9jYWxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyB0aGF0IGNvbnRhaW5zIGEgVVJMLWZyaWVuZGx5IG5hbWUgZm9yIHRoZSB1c2VyLiBUaGUgZGVmYXVsdCBpcyB0aGUgdXNlcidzIHVzZXJuYW1lLiAqL1xuICBuaWNlbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHVzZXIncyBuaWNrbmFtZSwgZGVmYXVsdHMgdG8gdGhlIHVzZXIncyB1c2VybmFtZS4gKi9cbiAgbmlja25hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHBsYWluIHRleHQgcGFzc3dvcmQgZm9yIHRoZSB1c2VyLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgdGhlIHVzZXIgcmVnaXN0ZXJlZC4gRm9ybWF0IGlzIFktbS1kIEg6aTpzLiAqL1xuICByZWdpc3RlcmVkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyBmb3Igd2hldGhlciB0byBlbmFibGUgdGhlIHJpY2ggZWRpdG9yIG9yIG5vdC4gRmFsc2UgaWYgbm90IGVtcHR5LiAqL1xuICByaWNoRWRpdGluZz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQSBzdHJpbmcgdGhhdCBjb250YWlucyB0aGUgdXNlcidzIHVzZXJuYW1lLiAqL1xuICB1c2VybmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J107XG4gIC8qKiBBIHN0cmluZyBjb250YWluaW5nIHRoZSB1c2VyJ3MgVVJMIGZvciB0aGUgdXNlcidzIHdlYiBzaXRlLiAqL1xuICB3ZWJzaXRlVXJsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBVc2VyJ3MgWWFob28gSU0gYWNjb3VudC4gKi9cbiAgeWltPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSByZWdpc3RlclVzZXIgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBSZWdpc3RlclVzZXJQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ1JlZ2lzdGVyVXNlclBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBVc2VyIG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICB1c2VyPzogTWF5YmU8VXNlcj47XG59O1xuXG4vKiogVGhlIGxvZ2ljYWwgcmVsYXRpb24gYmV0d2VlbiBlYWNoIGl0ZW0gaW4gdGhlIGFycmF5IHdoZW4gdGhlcmUgYXJlIG1vcmUgdGhhbiBvbmUuICovXG5leHBvcnQgZW51bSBSZWxhdGlvbkVudW0ge1xuICAvKiogVGhlIGxvZ2ljYWwgQU5EIGNvbmRpdGlvbiByZXR1cm5zIHRydWUgaWYgYm90aCBvcGVyYW5kcyBhcmUgdHJ1ZSwgb3RoZXJ3aXNlLCBpdCByZXR1cm5zIGZhbHNlLiAqL1xuICBBbmQgPSAnQU5EJyxcbiAgLyoqIFRoZSBsb2dpY2FsIE9SIGNvbmRpdGlvbiByZXR1cm5zIGZhbHNlIGlmIGJvdGggb3BlcmFuZHMgYXJlIGZhbHNlLCBvdGhlcndpc2UsIGl0IHJldHVybnMgdHJ1ZS4gKi9cbiAgT3IgPSAnT1InXG59XG5cbi8qKiBJbnB1dCBmb3IgdGhlIHJlc2V0VXNlclBhc3N3b3JkIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgUmVzZXRVc2VyUGFzc3dvcmRJbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFBhc3N3b3JkIHJlc2V0IGtleSAqL1xuICBrZXk/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSB1c2VyJ3MgbG9naW4gKHVzZXJuYW1lKS4gKi9cbiAgbG9naW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBuZXcgcGFzc3dvcmQuICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSByZXNldFVzZXJQYXNzd29yZCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFJlc2V0VXNlclBhc3N3b3JkUGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdSZXNldFVzZXJQYXNzd29yZFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBVc2VyIG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICB1c2VyPzogTWF5YmU8VXNlcj47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSByZXN0b3JlQ29tbWVudCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFJlc3RvcmVDb21tZW50SW5wdXQgPSB7XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIGNvbW1lbnQgdG8gYmUgcmVzdG9yZWQgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSByZXN0b3JlQ29tbWVudCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFJlc3RvcmVDb21tZW50UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdSZXN0b3JlQ29tbWVudFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSByZXN0b3JlZCBjb21tZW50IG9iamVjdCAqL1xuICBjb21tZW50PzogTWF5YmU8Q29tbWVudD47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHJlc3RvcmVkIGNvbW1lbnQgKi9cbiAgcmVzdG9yZWRJZD86IE1heWJlPFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uID0ge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RNdXRhdGlvbic7XG4gIC8qKiBUaGUgY3JlYXRlQ2F0ZWdvcnkgbXV0YXRpb24gKi9cbiAgY3JlYXRlQ2F0ZWdvcnk/OiBNYXliZTxDcmVhdGVDYXRlZ29yeVBheWxvYWQ+O1xuICAvKiogVGhlIGNyZWF0ZUNvbW1lbnQgbXV0YXRpb24gKi9cbiAgY3JlYXRlQ29tbWVudD86IE1heWJlPENyZWF0ZUNvbW1lbnRQYXlsb2FkPjtcbiAgLyoqIFRoZSBjcmVhdGVNZWRpYUl0ZW0gbXV0YXRpb24gKi9cbiAgY3JlYXRlTWVkaWFJdGVtPzogTWF5YmU8Q3JlYXRlTWVkaWFJdGVtUGF5bG9hZD47XG4gIC8qKiBUaGUgY3JlYXRlUGFnZSBtdXRhdGlvbiAqL1xuICBjcmVhdGVQYWdlPzogTWF5YmU8Q3JlYXRlUGFnZVBheWxvYWQ+O1xuICAvKiogVGhlIGNyZWF0ZVBvc3QgbXV0YXRpb24gKi9cbiAgY3JlYXRlUG9zdD86IE1heWJlPENyZWF0ZVBvc3RQYXlsb2FkPjtcbiAgLyoqIFRoZSBjcmVhdGVQb3N0Rm9ybWF0IG11dGF0aW9uICovXG4gIGNyZWF0ZVBvc3RGb3JtYXQ/OiBNYXliZTxDcmVhdGVQb3N0Rm9ybWF0UGF5bG9hZD47XG4gIC8qKiBUaGUgY3JlYXRlVGFnIG11dGF0aW9uICovXG4gIGNyZWF0ZVRhZz86IE1heWJlPENyZWF0ZVRhZ1BheWxvYWQ+O1xuICAvKiogVGhlIGNyZWF0ZVVzZXIgbXV0YXRpb24gKi9cbiAgY3JlYXRlVXNlcj86IE1heWJlPENyZWF0ZVVzZXJQYXlsb2FkPjtcbiAgLyoqIFRoZSBkZWxldGVDYXRlZ29yeSBtdXRhdGlvbiAqL1xuICBkZWxldGVDYXRlZ29yeT86IE1heWJlPERlbGV0ZUNhdGVnb3J5UGF5bG9hZD47XG4gIC8qKiBUaGUgZGVsZXRlQ29tbWVudCBtdXRhdGlvbiAqL1xuICBkZWxldGVDb21tZW50PzogTWF5YmU8RGVsZXRlQ29tbWVudFBheWxvYWQ+O1xuICAvKiogVGhlIGRlbGV0ZU1lZGlhSXRlbSBtdXRhdGlvbiAqL1xuICBkZWxldGVNZWRpYUl0ZW0/OiBNYXliZTxEZWxldGVNZWRpYUl0ZW1QYXlsb2FkPjtcbiAgLyoqIFRoZSBkZWxldGVQYWdlIG11dGF0aW9uICovXG4gIGRlbGV0ZVBhZ2U/OiBNYXliZTxEZWxldGVQYWdlUGF5bG9hZD47XG4gIC8qKiBUaGUgZGVsZXRlUG9zdCBtdXRhdGlvbiAqL1xuICBkZWxldGVQb3N0PzogTWF5YmU8RGVsZXRlUG9zdFBheWxvYWQ+O1xuICAvKiogVGhlIGRlbGV0ZVBvc3RGb3JtYXQgbXV0YXRpb24gKi9cbiAgZGVsZXRlUG9zdEZvcm1hdD86IE1heWJlPERlbGV0ZVBvc3RGb3JtYXRQYXlsb2FkPjtcbiAgLyoqIFRoZSBkZWxldGVUYWcgbXV0YXRpb24gKi9cbiAgZGVsZXRlVGFnPzogTWF5YmU8RGVsZXRlVGFnUGF5bG9hZD47XG4gIC8qKiBUaGUgZGVsZXRlVXNlciBtdXRhdGlvbiAqL1xuICBkZWxldGVVc2VyPzogTWF5YmU8RGVsZXRlVXNlclBheWxvYWQ+O1xuICAvKiogVGhlIGdlbmVyYXRlQXV0aG9yaXphdGlvbkNvZGUgbXV0YXRpb24gKi9cbiAgZ2VuZXJhdGVBdXRob3JpemF0aW9uQ29kZT86IE1heWJlPEdlbmVyYXRlQXV0aG9yaXphdGlvbkNvZGVQYXlsb2FkPjtcbiAgLyoqIEluY3JlYXNlIHRoZSBjb3VudC4gKi9cbiAgaW5jcmVhc2VDb3VudD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVnaXN0ZXJVc2VyIG11dGF0aW9uICovXG4gIHJlZ2lzdGVyVXNlcj86IE1heWJlPFJlZ2lzdGVyVXNlclBheWxvYWQ+O1xuICAvKiogVGhlIHJlc2V0VXNlclBhc3N3b3JkIG11dGF0aW9uICovXG4gIHJlc2V0VXNlclBhc3N3b3JkPzogTWF5YmU8UmVzZXRVc2VyUGFzc3dvcmRQYXlsb2FkPjtcbiAgLyoqIFRoZSByZXN0b3JlQ29tbWVudCBtdXRhdGlvbiAqL1xuICByZXN0b3JlQ29tbWVudD86IE1heWJlPFJlc3RvcmVDb21tZW50UGF5bG9hZD47XG4gIC8qKiBTZW5kIHBhc3N3b3JkIHJlc2V0IGVtYWlsIHRvIHVzZXIgKi9cbiAgc2VuZFBhc3N3b3JkUmVzZXRFbWFpbD86IE1heWJlPFNlbmRQYXNzd29yZFJlc2V0RW1haWxQYXlsb2FkPjtcbiAgLyoqIFRoZSB1cGRhdGVDYXRlZ29yeSBtdXRhdGlvbiAqL1xuICB1cGRhdGVDYXRlZ29yeT86IE1heWJlPFVwZGF0ZUNhdGVnb3J5UGF5bG9hZD47XG4gIC8qKiBUaGUgdXBkYXRlQ29tbWVudCBtdXRhdGlvbiAqL1xuICB1cGRhdGVDb21tZW50PzogTWF5YmU8VXBkYXRlQ29tbWVudFBheWxvYWQ+O1xuICAvKiogVGhlIHVwZGF0ZU1lZGlhSXRlbSBtdXRhdGlvbiAqL1xuICB1cGRhdGVNZWRpYUl0ZW0/OiBNYXliZTxVcGRhdGVNZWRpYUl0ZW1QYXlsb2FkPjtcbiAgLyoqIFRoZSB1cGRhdGVQYWdlIG11dGF0aW9uICovXG4gIHVwZGF0ZVBhZ2U/OiBNYXliZTxVcGRhdGVQYWdlUGF5bG9hZD47XG4gIC8qKiBUaGUgdXBkYXRlUG9zdCBtdXRhdGlvbiAqL1xuICB1cGRhdGVQb3N0PzogTWF5YmU8VXBkYXRlUG9zdFBheWxvYWQ+O1xuICAvKiogVGhlIHVwZGF0ZVBvc3RGb3JtYXQgbXV0YXRpb24gKi9cbiAgdXBkYXRlUG9zdEZvcm1hdD86IE1heWJlPFVwZGF0ZVBvc3RGb3JtYXRQYXlsb2FkPjtcbiAgLyoqIFRoZSB1cGRhdGVTZXR0aW5ncyBtdXRhdGlvbiAqL1xuICB1cGRhdGVTZXR0aW5ncz86IE1heWJlPFVwZGF0ZVNldHRpbmdzUGF5bG9hZD47XG4gIC8qKiBUaGUgdXBkYXRlVGFnIG11dGF0aW9uICovXG4gIHVwZGF0ZVRhZz86IE1heWJlPFVwZGF0ZVRhZ1BheWxvYWQ+O1xuICAvKiogVGhlIHVwZGF0ZVVzZXIgbXV0YXRpb24gKi9cbiAgdXBkYXRlVXNlcj86IE1heWJlPFVwZGF0ZVVzZXJQYXlsb2FkPjtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25DcmVhdGVDYXRlZ29yeUFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVDYXRlZ29yeUlucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvbkNyZWF0ZUNvbW1lbnRBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlQ29tbWVudElucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvbkNyZWF0ZU1lZGlhSXRlbUFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVNZWRpYUl0ZW1JbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25DcmVhdGVQYWdlQXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVBhZ2VJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25DcmVhdGVQb3N0QXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVBvc3RJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25DcmVhdGVQb3N0Rm9ybWF0QXJncyA9IHtcbiAgaW5wdXQ6IENyZWF0ZVBvc3RGb3JtYXRJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25DcmVhdGVUYWdBcmdzID0ge1xuICBpbnB1dDogQ3JlYXRlVGFnSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uQ3JlYXRlVXNlckFyZ3MgPSB7XG4gIGlucHV0OiBDcmVhdGVVc2VySW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uRGVsZXRlQ2F0ZWdvcnlBcmdzID0ge1xuICBpbnB1dDogRGVsZXRlQ2F0ZWdvcnlJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25EZWxldGVDb21tZW50QXJncyA9IHtcbiAgaW5wdXQ6IERlbGV0ZUNvbW1lbnRJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25EZWxldGVNZWRpYUl0ZW1BcmdzID0ge1xuICBpbnB1dDogRGVsZXRlTWVkaWFJdGVtSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uRGVsZXRlUGFnZUFyZ3MgPSB7XG4gIGlucHV0OiBEZWxldGVQYWdlSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uRGVsZXRlUG9zdEFyZ3MgPSB7XG4gIGlucHV0OiBEZWxldGVQb3N0SW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uRGVsZXRlUG9zdEZvcm1hdEFyZ3MgPSB7XG4gIGlucHV0OiBEZWxldGVQb3N0Rm9ybWF0SW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uRGVsZXRlVGFnQXJncyA9IHtcbiAgaW5wdXQ6IERlbGV0ZVRhZ0lucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvbkRlbGV0ZVVzZXJBcmdzID0ge1xuICBpbnB1dDogRGVsZXRlVXNlcklucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvbkdlbmVyYXRlQXV0aG9yaXphdGlvbkNvZGVBcmdzID0ge1xuICBpbnB1dDogR2VuZXJhdGVBdXRob3JpemF0aW9uQ29kZUlucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvbkluY3JlYXNlQ291bnRBcmdzID0ge1xuICBjb3VudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvblJlZ2lzdGVyVXNlckFyZ3MgPSB7XG4gIGlucHV0OiBSZWdpc3RlclVzZXJJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25SZXNldFVzZXJQYXNzd29yZEFyZ3MgPSB7XG4gIGlucHV0OiBSZXNldFVzZXJQYXNzd29yZElucHV0O1xufTtcblxuXG4vKiogVGhlIHJvb3QgbXV0YXRpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RNdXRhdGlvblJlc3RvcmVDb21tZW50QXJncyA9IHtcbiAgaW5wdXQ6IFJlc3RvcmVDb21tZW50SW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uU2VuZFBhc3N3b3JkUmVzZXRFbWFpbEFyZ3MgPSB7XG4gIGlucHV0OiBTZW5kUGFzc3dvcmRSZXNldEVtYWlsSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlQ2F0ZWdvcnlBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlQ2F0ZWdvcnlJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25VcGRhdGVDb21tZW50QXJncyA9IHtcbiAgaW5wdXQ6IFVwZGF0ZUNvbW1lbnRJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25VcGRhdGVNZWRpYUl0ZW1BcmdzID0ge1xuICBpbnB1dDogVXBkYXRlTWVkaWFJdGVtSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlUGFnZUFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVQYWdlSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlUG9zdEFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVQb3N0SW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlUG9zdEZvcm1hdEFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVQb3N0Rm9ybWF0SW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlU2V0dGluZ3NBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlU2V0dGluZ3NJbnB1dDtcbn07XG5cblxuLyoqIFRoZSByb290IG11dGF0aW9uICovXG5leHBvcnQgdHlwZSBSb290TXV0YXRpb25VcGRhdGVUYWdBcmdzID0ge1xuICBpbnB1dDogVXBkYXRlVGFnSW5wdXQ7XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBtdXRhdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdE11dGF0aW9uVXBkYXRlVXNlckFyZ3MgPSB7XG4gIGlucHV0OiBVcGRhdGVVc2VySW5wdXQ7XG59O1xuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeSA9IFdpdGhBY2ZPcHRpb25zUGFnZU5pY2tlbEJyb254R2xvYmFsU2V0dGluZ3MgJiBXaXRoQWNmT3B0aW9uc1BhZ2VOaWNrZWxCcm9ueEhlYWRlciAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnknO1xuICAvKiogRW50cnkgcG9pbnQgdG8gZ2V0IGFsbCBzZXR0aW5ncyBmb3IgdGhlIHNpdGUgKi9cbiAgYWxsU2V0dGluZ3M/OiBNYXliZTxTZXR0aW5ncz47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgY2F0ZWdvcnkgdHlwZSAqL1xuICBjYXRlZ29yaWVzPzogTWF5YmU8Um9vdFF1ZXJ5VG9DYXRlZ29yeUNvbm5lY3Rpb24+O1xuICAvKiogQSAwYmplY3QgKi9cbiAgY2F0ZWdvcnk/OiBNYXliZTxDYXRlZ29yeT47XG4gIC8qKiBSZXR1cm5zIGEgQ29tbWVudCAqL1xuICBjb21tZW50PzogTWF5YmU8Q29tbWVudD47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG4gIGNvbW1lbnRzPzogTWF5YmU8Um9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvbj47XG4gIC8qKiBBIG5vZGUgdXNlZCB0byBtYW5hZ2UgY29udGVudCAqL1xuICBjb250ZW50Tm9kZT86IE1heWJlPENvbnRlbnROb2RlPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG4gIGNvbnRlbnROb2Rlcz86IE1heWJlPFJvb3RRdWVyeVRvQ29udGVudE5vZGVDb25uZWN0aW9uPjtcbiAgLyoqIEZldGNoIGEgQ29udGVudCBUeXBlIG5vZGUgYnkgdW5pcXVlIElkZW50aWZpZXIgKi9cbiAgY29udGVudFR5cGU/OiBNYXliZTxDb250ZW50VHlwZT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgQ29udGVudFR5cGUgdHlwZSAqL1xuICBjb250ZW50VHlwZXM/OiBNYXliZTxSb290UXVlcnlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbj47XG4gIC8qKiBGaWVsZHMgb2YgdGhlICYjMDM5O0Rpc2N1c3Npb25TZXR0aW5ncyYjMDM5OyBzZXR0aW5ncyBncm91cCAqL1xuICBkaXNjdXNzaW9uU2V0dGluZ3M/OiBNYXliZTxEaXNjdXNzaW9uU2V0dGluZ3M+O1xuICAvKiogRmllbGRzIG9mIHRoZSAmIzAzOTtHZW5lcmFsU2V0dGluZ3MmIzAzOTsgc2V0dGluZ3MgZ3JvdXAgKi9cbiAgZ2VuZXJhbFNldHRpbmdzPzogTWF5YmU8R2VuZXJhbFNldHRpbmdzPjtcbiAgLyoqIFJldHVybnMgdGhlIHN0eWxlc2hlZXQgcmVzdWx0aW5nIG9mIG1lcmdpbmcgY29yZSwgdGhlbWUsIGFuZCB1c2VyIGRhdGEuICovXG4gIGdsb2JhbFN0eWxlc2hlZXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQW4gb2JqZWN0IG9mIHRoZSBtZWRpYUl0ZW0gVHlwZS4gICovXG4gIG1lZGlhSXRlbT86IE1heWJlPE1lZGlhSXRlbT47XG4gIC8qKlxuICAgKiBBIG1lZGlhSXRlbSBvYmplY3RcbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyB0aGUgc2luZ2xlIGVudHJ5IHBvaW50IGZvciB0aGlzIHR5cGUgd2l0aCBJRCBhbmQgSURUeXBlIGZpZWxkcy4gRm9yIGV4YW1wbGUsIGluc3RlYWQgb2YgcG9zdEJ5KCBpZDogJnF1b3Q7JnF1b3Q7ICksIHVzZSBwb3N0KGlkOiAmcXVvdDsmcXVvdDsgaWRUeXBlOiAmcXVvdDsmcXVvdDspXG4gICAqL1xuICBtZWRpYUl0ZW1CeT86IE1heWJlPE1lZGlhSXRlbT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgbWVkaWFJdGVtIHR5cGUgKi9cbiAgbWVkaWFJdGVtcz86IE1heWJlPFJvb3RRdWVyeVRvTWVkaWFJdGVtQ29ubmVjdGlvbj47XG4gIC8qKiBBIFdvcmRQcmVzcyBuYXZpZ2F0aW9uIG1lbnUgKi9cbiAgbWVudT86IE1heWJlPE1lbnU+O1xuICAvKiogQSBXb3JkUHJlc3MgbmF2aWdhdGlvbiBtZW51IGl0ZW0gKi9cbiAgbWVudUl0ZW0/OiBNYXliZTxNZW51SXRlbT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgTWVudUl0ZW0gdHlwZSAqL1xuICBtZW51SXRlbXM/OiBNYXliZTxSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgTWVudSB0eXBlICovXG4gIG1lbnVzPzogTWF5YmU8Um9vdFF1ZXJ5VG9NZW51Q29ubmVjdGlvbj47XG4gIG5pY2tlbEJyb254R2xvYmFsU2V0dGluZ3M/OiBNYXliZTxOaWNrZWxCcm9ueEdsb2JhbFNldHRpbmdzPjtcbiAgbmlja2VsQnJvbnhIZWFkZXI/OiBNYXliZTxOaWNrZWxCcm9ueEhlYWRlcj47XG4gIC8qKiBGZXRjaGVzIGFuIG9iamVjdCBnaXZlbiBpdHMgSUQgKi9cbiAgbm9kZT86IE1heWJlPE5vZGU+O1xuICAvKiogRmV0Y2hlcyBhbiBvYmplY3QgZ2l2ZW4gaXRzIFVuaXF1ZSBSZXNvdXJjZSBJZGVudGlmaWVyICovXG4gIG5vZGVCeVVyaT86IE1heWJlPFVuaWZvcm1SZXNvdXJjZUlkZW50aWZpYWJsZT47XG4gIC8qKiBBbiBvYmplY3Qgb2YgdGhlIHBhZ2UgVHlwZS4gICovXG4gIHBhZ2U/OiBNYXliZTxQYWdlPjtcbiAgLyoqXG4gICAqIEEgcGFnZSBvYmplY3RcbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyB0aGUgc2luZ2xlIGVudHJ5IHBvaW50IGZvciB0aGlzIHR5cGUgd2l0aCBJRCBhbmQgSURUeXBlIGZpZWxkcy4gRm9yIGV4YW1wbGUsIGluc3RlYWQgb2YgcG9zdEJ5KCBpZDogJnF1b3Q7JnF1b3Q7ICksIHVzZSBwb3N0KGlkOiAmcXVvdDsmcXVvdDsgaWRUeXBlOiAmcXVvdDsmcXVvdDspXG4gICAqL1xuICBwYWdlQnk/OiBNYXliZTxQYWdlPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBwYWdlIHR5cGUgKi9cbiAgcGFnZXM/OiBNYXliZTxSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uPjtcbiAgLyoqIEEgV29yZFByZXNzIHBsdWdpbiAqL1xuICBwbHVnaW4/OiBNYXliZTxQbHVnaW4+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIFBsdWdpbiB0eXBlICovXG4gIHBsdWdpbnM/OiBNYXliZTxSb290UXVlcnlUb1BsdWdpbkNvbm5lY3Rpb24+O1xuICAvKiogQW4gb2JqZWN0IG9mIHRoZSBwb3N0IFR5cGUuICAqL1xuICBwb3N0PzogTWF5YmU8UG9zdD47XG4gIC8qKlxuICAgKiBBIHBvc3Qgb2JqZWN0XG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgdGhlIHNpbmdsZSBlbnRyeSBwb2ludCBmb3IgdGhpcyB0eXBlIHdpdGggSUQgYW5kIElEVHlwZSBmaWVsZHMuIEZvciBleGFtcGxlLCBpbnN0ZWFkIG9mIHBvc3RCeSggaWQ6ICZxdW90OyZxdW90OyApLCB1c2UgcG9zdChpZDogJnF1b3Q7JnF1b3Q7IGlkVHlwZTogJnF1b3Q7JnF1b3Q7KVxuICAgKi9cbiAgcG9zdEJ5PzogTWF5YmU8UG9zdD47XG4gIC8qKiBBIDBiamVjdCAqL1xuICBwb3N0Rm9ybWF0PzogTWF5YmU8UG9zdEZvcm1hdD47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgcG9zdEZvcm1hdCB0eXBlICovXG4gIHBvc3RGb3JtYXRzPzogTWF5YmU8Um9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgcG9zdCB0eXBlICovXG4gIHBvc3RzPzogTWF5YmU8Um9vdFF1ZXJ5VG9Qb3N0Q29ubmVjdGlvbj47XG4gIC8qKiBGaWVsZHMgb2YgdGhlICYjMDM5O1JlYWRpbmdTZXR0aW5ncyYjMDM5OyBzZXR0aW5ncyBncm91cCAqL1xuICByZWFkaW5nU2V0dGluZ3M/OiBNYXliZTxSZWFkaW5nU2V0dGluZ3M+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIEVucXVldWVkU2NyaXB0IHR5cGUgKi9cbiAgcmVnaXN0ZXJlZFNjcmlwdHM/OiBNYXliZTxSb290UXVlcnlUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbiAgcmVnaXN0ZXJlZFN0eWxlc2hlZXRzPzogTWF5YmU8Um9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG4gIHJldmlzaW9ucz86IE1heWJlPFJvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbj47XG4gIC8qKiBBIDBiamVjdCAqL1xuICB0YWc/OiBNYXliZTxUYWc+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIHRhZyB0eXBlICovXG4gIHRhZ3M/OiBNYXliZTxSb290UXVlcnlUb1RhZ0Nvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIFRheG9ub215IHR5cGUgKi9cbiAgdGF4b25vbWllcz86IE1heWJlPFJvb3RRdWVyeVRvVGF4b25vbXlDb25uZWN0aW9uPjtcbiAgLyoqIEZldGNoIGEgVGF4b25vbXkgbm9kZSBieSB1bmlxdWUgSWRlbnRpZmllciAqL1xuICB0YXhvbm9teT86IE1heWJlPFRheG9ub215PjtcbiAgLyoqIEEgbm9kZSBpbiBhIHRheG9ub215IHVzZWQgdG8gZ3JvdXAgYW5kIHJlbGF0ZSBjb250ZW50IG5vZGVzICovXG4gIHRlcm1Ob2RlPzogTWF5YmU8VGVybU5vZGU+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIFRlcm1Ob2RlIHR5cGUgKi9cbiAgdGVybXM/OiBNYXliZTxSb290UXVlcnlUb1Rlcm1Ob2RlQ29ubmVjdGlvbj47XG4gIC8qKiBBIFRoZW1lIG9iamVjdCAqL1xuICB0aGVtZT86IE1heWJlPFRoZW1lPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBUaGVtZSB0eXBlICovXG4gIHRoZW1lcz86IE1heWJlPFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uPjtcbiAgLyoqIFJldHVybnMgYSB1c2VyICovXG4gIHVzZXI/OiBNYXliZTxVc2VyPjtcbiAgLyoqIFJldHVybnMgYSB1c2VyIHJvbGUgKi9cbiAgdXNlclJvbGU/OiBNYXliZTxVc2VyUm9sZT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgVXNlclJvbGUgdHlwZSAqL1xuICB1c2VyUm9sZXM/OiBNYXliZTxSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgVXNlciB0eXBlICovXG4gIHVzZXJzPzogTWF5YmU8Um9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbj47XG4gIC8qKiBSZXR1cm5zIHRoZSBjdXJyZW50IHVzZXIgKi9cbiAgdmlld2VyPzogTWF5YmU8VXNlcj47XG4gIC8qKiBGaWVsZHMgb2YgdGhlICYjMDM5O1dyaXRpbmdTZXR0aW5ncyYjMDM5OyBzZXR0aW5ncyBncm91cCAqL1xuICB3cml0aW5nU2V0dGluZ3M/OiBNYXliZTxXcml0aW5nU2V0dGluZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNhdGVnb3JpZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9DYXRlZ29yeUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNhdGVnb3J5QXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8Q2F0ZWdvcnlJZFR5cGU+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNvbW1lbnRBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgaWRUeXBlPzogSW5wdXRNYXliZTxDb21tZW50Tm9kZUlkVHlwZUVudW0+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNvbW1lbnRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvQ29tbWVudENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNvbnRlbnROb2RlQXJncyA9IHtcbiAgYXNQcmV2aWV3PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICBjb250ZW50VHlwZT86IElucHV0TWF5YmU8Q29udGVudFR5cGVFbnVtPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8Q29udGVudE5vZGVJZFR5cGVFbnVtPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlDb250ZW50Tm9kZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUNvbnRlbnRUeXBlQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8Q29udGVudFR5cGVJZFR5cGVFbnVtPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlDb250ZW50VHlwZXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeUdsb2JhbFN0eWxlc2hlZXRBcmdzID0ge1xuICB0eXBlcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxHbG9iYWxTdHlsZXNoZWV0VHlwZXNFbnVtPj4+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeU1lZGlhSXRlbUFyZ3MgPSB7XG4gIGFzUHJldmlldz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8TWVkaWFJdGVtSWRUeXBlPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlNZWRpYUl0ZW1CeUFyZ3MgPSB7XG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgbWVkaWFJdGVtSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgc2x1Zz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICB1cmk/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlNZWRpYUl0ZW1zQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvTWVkaWFJdGVtQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5TWVudUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICBpZFR5cGU/OiBJbnB1dE1heWJlPE1lbnVOb2RlSWRUeXBlRW51bT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5TWVudUl0ZW1BcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgaWRUeXBlPzogSW5wdXRNYXliZTxNZW51SXRlbU5vZGVJZFR5cGVFbnVtPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlNZW51SXRlbXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9NZW51SXRlbUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeU1lbnVzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeU5vZGVBcmdzID0ge1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5Tm9kZUJ5VXJpQXJncyA9IHtcbiAgdXJpOiBTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXTtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQYWdlQXJncyA9IHtcbiAgYXNQcmV2aWV3PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgaWRUeXBlPzogSW5wdXRNYXliZTxQYWdlSWRUeXBlPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQYWdlQnlBcmdzID0ge1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIHBhZ2VJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB1cmk/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQYWdlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQbHVnaW5BcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQbHVnaW5zQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UG9zdEFyZ3MgPSB7XG4gIGFzUHJldmlldz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8UG9zdElkVHlwZT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UG9zdEJ5QXJncyA9IHtcbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICBwb3N0SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgc2x1Zz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICB1cmk/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlQb3N0Rm9ybWF0QXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8UG9zdEZvcm1hdElkVHlwZT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UG9zdEZvcm1hdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UG9zdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9Qb3N0Q29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UmVnaXN0ZXJlZFNjcmlwdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVJlZ2lzdGVyZWRTdHlsZXNoZWV0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5UmV2aXNpb25zQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VGFnQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8VGFnSWRUeXBlPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUYWdzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFJvb3RRdWVyeVRvVGFnQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VGF4b25vbWllc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VGF4b25vbXlBcmdzID0ge1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgaWRUeXBlPzogSW5wdXRNYXliZTxUYXhvbm9teUlkVHlwZUVudW0+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRlcm1Ob2RlQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8VGVybU5vZGVJZFR5cGVFbnVtPjtcbiAgdGF4b25vbXk/OiBJbnB1dE1heWJlPFRheG9ub215RW51bT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VGVybXNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRoZW1lQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VGhlbWVzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlVc2VyQXJncyA9IHtcbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGlkVHlwZT86IElucHV0TWF5YmU8VXNlck5vZGVJZFR5cGVFbnVtPjtcbn07XG5cblxuLyoqIFRoZSByb290IGVudHJ5IHBvaW50IGludG8gdGhlIEdyYXBoICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlVc2VyUm9sZUFyZ3MgPSB7XG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xufTtcblxuXG4vKiogVGhlIHJvb3QgZW50cnkgcG9pbnQgaW50byB0aGUgR3JhcGggKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVVzZXJSb2xlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgcm9vdCBlbnRyeSBwb2ludCBpbnRvIHRoZSBHcmFwaCAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VXNlcnNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8Um9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIGNhdGVnb3J5IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uID0gQ2F0ZWdvcnlDb25uZWN0aW9uICYgQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb0NhdGVnb3J5Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDYXRlZ29yeT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSA9IENhdGVnb3J5Q29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ2F0ZWdvcnk7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb0NhdGVnb3J5Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9DYXRlZ29yeUNvbm5lY3Rpb25QYWdlSW5mbyA9IENhdGVnb3J5Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvQ2F0ZWdvcnlDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBSb290UXVlcnlUb0NhdGVnb3J5Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0NhdGVnb3J5Q29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFVuaXF1ZSBjYWNoZSBrZXkgdG8gYmUgcHJvZHVjZWQgd2hlbiB0aGlzIHF1ZXJ5IGlzIHN0b3JlZCBpbiBhbiBvYmplY3QgY2FjaGUuIERlZmF1bHQgaXMgJ2NvcmUnLiAqL1xuICBjYWNoZURvbWFpbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGVybSBJRCB0byByZXRyaWV2ZSBjaGlsZCB0ZXJtcyBvZi4gSWYgbXVsdGlwbGUgdGF4b25vbWllcyBhcmUgcGFzc2VkLCAkY2hpbGRfb2YgaXMgaWdub3JlZC4gRGVmYXVsdCAwLiAqL1xuICBjaGlsZE9mPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUcnVlIHRvIGxpbWl0IHJlc3VsdHMgdG8gdGVybXMgdGhhdCBoYXZlIG5vIGNoaWxkcmVuLiBUaGlzIHBhcmFtZXRlciBoYXMgbm8gZWZmZWN0IG9uIG5vbi1oaWVyYXJjaGljYWwgdGF4b25vbWllcy4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgY2hpbGRsZXNzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgdGVybXMgd2hlcmUgdGhlIGRlc2NyaXB0aW9uIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBkZXNjcmlwdGlvbkxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUuIElmICRpbmNsdWRlIGlzIG5vbi1lbXB0eSwgJGV4Y2x1ZGUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSBpZHMgdG8gZXhjbHVkZSBhbG9uZyB3aXRoIGFsbCBvZiB0aGVpciBkZXNjZW5kYW50IHRlcm1zLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlX3RyZWUgaXMgaWdub3JlZC4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgZXhjbHVkZVRyZWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoZXRoZXIgdG8gaGlkZSB0ZXJtcyBub3QgYXNzaWduZWQgdG8gYW55IHBvc3RzLiBBY2NlcHRzIHRydWUgb3IgZmFsc2UuIERlZmF1bHQgZmFsc2UgKi9cbiAgaGlkZUVtcHR5PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogV2hldGhlciB0byBpbmNsdWRlIHRlcm1zIHRoYXQgaGF2ZSBub24tZW1wdHkgZGVzY2VuZGFudHMgKGV2ZW4gaWYgJGhpZGVfZW1wdHkgaXMgc2V0IHRvIHRydWUpLiBEZWZhdWx0IHRydWUuICovXG4gIGhpZXJhcmNoaWNhbD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGluY2x1ZGUuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGluY2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIG5hbWVzIHRvIHJldHVybiB0ZXJtKHMpIGZvci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBuYW1lIGlzIExJS0UgdGhlIGlucHV0IHZhbHVlLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBuYW1lTGlrZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygb2JqZWN0IElEcy4gUmVzdWx0cyB3aWxsIGJlIGxpbWl0ZWQgdG8gdGVybXMgYXNzb2NpYXRlZCB3aXRoIHRoZXNlIG9iamVjdHMuICovXG4gIG9iamVjdElkcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRGlyZWN0aW9uIHRoZSBjb25uZWN0aW9uIHNob3VsZCBiZSBvcmRlcmVkIGluICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQocykgdG8gb3JkZXIgdGVybXMgYnkuIERlZmF1bHRzIHRvICduYW1lJy4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8VGVybU9iamVjdHNDb25uZWN0aW9uT3JkZXJieUVudW0+O1xuICAvKiogV2hldGhlciB0byBwYWQgdGhlIHF1YW50aXR5IG9mIGEgdGVybSdzIGNoaWxkcmVuIGluIHRoZSBxdWFudGl0eSBvZiBlYWNoIHRlcm0ncyBcImNvdW50XCIgb2JqZWN0IHZhcmlhYmxlLiBEZWZhdWx0IGZhbHNlLiAqL1xuICBwYWRDb3VudHM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBQYXJlbnQgdGVybSBJRCB0byByZXRyaWV2ZSBkaXJlY3QtY2hpbGQgdGVybXMgb2YuIERlZmF1bHQgZW1wdHkuICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogU2VhcmNoIGNyaXRlcmlhIHRvIG1hdGNoIHRlcm1zLiBXaWxsIGJlIFNRTC1mb3JtYXR0ZWQgd2l0aCB3aWxkY2FyZHMgYmVmb3JlIGFuZCBhZnRlci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBzbHVncyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIHRheG9ub215IElEcywgdG8gbWF0Y2ggd2hlbiBxdWVyeWluZyB0ZXJtcy4gKi9cbiAgdGVybVRheG9ub21JZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9teUlkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIHByaW1lIG1ldGEgY2FjaGVzIGZvciBtYXRjaGVkIHRlcm1zLiBEZWZhdWx0IHRydWUuICovXG4gIHVwZGF0ZVRlcm1NZXRhQ2FjaGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIENvbW1lbnQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvbiA9IENvbW1lbnRDb25uZWN0aW9uICYgQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb0NvbW1lbnRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb0NvbW1lbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDb21tZW50PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0NvbW1lbnRDb25uZWN0aW9uRWRnZSA9IENvbW1lbnRDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbW1lbnQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb0NvbW1lbnRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0NvbW1lbnRDb25uZWN0aW9uUGFnZUluZm8gPSBDb21tZW50Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvQ29tbWVudENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db21tZW50Q29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIENvbW1lbnQgYXV0aG9yIGVtYWlsIGFkZHJlc3MuICovXG4gIGF1dGhvckVtYWlsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIGluY2x1ZGUgY29tbWVudHMgZm9yLiAqL1xuICBhdXRob3JJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgYXV0aG9yIElEcyB0byBleGNsdWRlIGNvbW1lbnRzIGZvci4gKi9cbiAgYXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIENvbW1lbnQgYXV0aG9yIFVSTC4gKi9cbiAgYXV0aG9yVXJsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb21tZW50IElEcyB0byBpbmNsdWRlLiAqL1xuICBjb21tZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIElEcyBvZiB1c2VycyB3aG9zZSB1bmFwcHJvdmVkIGNvbW1lbnRzIHdpbGwgYmUgcmV0dXJuZWQgYnkgdGhlIHF1ZXJ5IHJlZ2FyZGxlc3Mgb2Ygc3RhdHVzLiAqL1xuICBjb21tZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEluY2x1ZGUgY29tbWVudHMgb2YgYSBnaXZlbiB0eXBlLiAqL1xuICBjb21tZW50VHlwZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBmcm9tIGEgZ2l2ZW4gYXJyYXkgb2YgY29tbWVudCB0eXBlcy4gKi9cbiAgY29tbWVudFR5cGVJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEV4Y2x1ZGUgY29tbWVudHMgZnJvbSBhIGdpdmVuIGFycmF5IG9mIGNvbW1lbnQgdHlwZXMuICovXG4gIGNvbW1lbnRUeXBlTm90SW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IGF1dGhvciBJRCB0byBsaW1pdCByZXN1bHRzIGJ5LiAqL1xuICBjb250ZW50QXV0aG9yPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIHJldHJpZXZlIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudEF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzICpub3QqIHRvIHJldHJpZXZlIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudEF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBMaW1pdCByZXN1bHRzIHRvIHRob3NlIGFmZmlsaWF0ZWQgd2l0aCBhIGdpdmVuIGNvbnRlbnQgb2JqZWN0IElELiAqL1xuICBjb250ZW50SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgY29udGVudCBvYmplY3QgSURzIHRvIGluY2x1ZGUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRJZEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBJRHMgdG8gZXhjbHVkZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudElkTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IG5hbWUgKGkuZS4gc2x1ZyApIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBPYmplY3QgcGFyZW50IElEIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50UGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBzdGF0dXNlcyB0byByZXRyaWV2ZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gUGFzcyAnYW55JyB0byBtYXRjaCBhbnkgdmFsdWUuICovXG4gIGNvbnRlbnRTdGF0dXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+Pj47XG4gIC8qKiBDb250ZW50IG9iamVjdCB0eXBlIG9yIGFycmF5IG9mIHR5cGVzIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiBQYXNzICdhbnknIHRvIG1hdGNoIGFueSB2YWx1ZS4gKi9cbiAgY29udGVudFR5cGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8Q29udGVudFR5cGVFbnVtPj4+O1xuICAvKiogQXJyYXkgb2YgSURzIG9yIGVtYWlsIGFkZHJlc3NlcyBvZiB1c2VycyB3aG9zZSB1bmFwcHJvdmVkIGNvbW1lbnRzIHdpbGwgYmUgcmV0dXJuZWQgYnkgdGhlIHF1ZXJ5IHJlZ2FyZGxlc3Mgb2YgJHN0YXR1cy4gRGVmYXVsdCBlbXB0eSAqL1xuICBpbmNsdWRlVW5hcHByb3ZlZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogS2FybWEgc2NvcmUgdG8gcmV0cmlldmUgbWF0Y2hpbmcgY29tbWVudHMgZm9yLiAqL1xuICBrYXJtYT86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVGhlIGNhcmRpbmFsaXR5IG9mIHRoZSBvcmRlciBvZiB0aGUgY29ubmVjdGlvbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkIHRvIG9yZGVyIHRoZSBjb21tZW50cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8Q29tbWVudHNDb25uZWN0aW9uT3JkZXJieUVudW0+O1xuICAvKiogUGFyZW50IElEIG9mIGNvbW1lbnQgdG8gcmV0cmlldmUgY2hpbGRyZW4gb2YuICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgcGFyZW50IElEcyBvZiBjb21tZW50cyB0byByZXRyaWV2ZSBjaGlsZHJlbiBmb3IuICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBwYXJlbnQgSURzIG9mIGNvbW1lbnRzICpub3QqIHRvIHJldHJpZXZlIGNoaWxkcmVuIGZvci4gKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNlYXJjaCB0ZXJtKHMpIHRvIHJldHJpZXZlIG1hdGNoaW5nIGNvbW1lbnRzIGZvci4gKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb21tZW50IHN0YXR1cyB0byBsaW1pdCByZXN1bHRzIGJ5LiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEluY2x1ZGUgY29tbWVudHMgZm9yIGEgc3BlY2lmaWMgdXNlciBJRC4gKi9cbiAgdXNlcklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgQ29udGVudE5vZGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudE5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvQ29udGVudE5vZGVDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnROb2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvQ29udGVudE5vZGVDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0NvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvID0gQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvQ29udGVudE5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvQ29udGVudE5vZGVDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIFR5cGVzIG9mIGNvbnRlbnQgdG8gZmlsdGVyICovXG4gIGNvbnRlbnRUeXBlcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgQ29udGVudFR5cGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudFR5cGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvQ29udGVudFR5cGVDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnRUeXBlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudFR5cGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50VHlwZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvQ29udGVudFR5cGVDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvblBhZ2VJbmZvID0gQ29udGVudFR5cGVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Db250ZW50VHlwZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIEVucXVldWVkU2NyaXB0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIEVucXVldWVkU2NyaXB0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxFbnF1ZXVlZFNjcmlwdD47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogRW5xdWV1ZWRTY3JpcHQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyA9IEVucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFN0eWxlc2hlZXQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8RW5xdWV1ZWRTdHlsZXNoZWV0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogRW5xdWV1ZWRTdHlsZXNoZWV0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbyA9IEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgTWVkaWFJdGVtQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxNZWRpYUl0ZW0+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBNZWRpYUl0ZW07XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb01lZGlhSXRlbUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvID0gTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUm9vdFF1ZXJ5VG9NZWRpYUl0ZW1Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVkaWFJdGVtQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgTWVudSB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb01lbnVDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIE1lbnVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBSb290UXVlcnlUb01lbnVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PE1lbnU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBSb290UXVlcnlUb01lbnVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE1lbnVDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb01lbnVDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogTWVudTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVudUNvbm5lY3Rpb25QYWdlSW5mbyA9IE1lbnVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9NZW51Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUm9vdFF1ZXJ5VG9NZW51Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb01lbnVDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBtZW51IGxvY2F0aW9uIGZvciB0aGUgbWVudSBiZWluZyBxdWVyaWVkICovXG4gIGxvY2F0aW9uPzogSW5wdXRNYXliZTxNZW51TG9jYXRpb25FbnVtPjtcbiAgLyoqIFRoZSBzbHVnIG9mIHRoZSBtZW51IHRvIHF1ZXJ5IGl0ZW1zIGZvciAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIE1lbnVJdGVtIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIE1lbnVJdGVtQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxNZW51SXRlbT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZW51SXRlbUNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogTWVudUl0ZW07XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9NZW51SXRlbUNvbm5lY3Rpb25QYWdlSW5mbyA9IE1lbnVJdGVtQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgbWVudSBsb2NhdGlvbiBmb3IgdGhlIG1lbnUgYmVpbmcgcXVlcmllZCAqL1xuICBsb2NhdGlvbj86IElucHV0TWF5YmU8TWVudUxvY2F0aW9uRW51bT47XG4gIC8qKiBUaGUgZGF0YWJhc2UgSUQgb2YgdGhlIHBhcmVudCBtZW51IG9iamVjdCAqL1xuICBwYXJlbnREYXRhYmFzZUlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhcmVudCBtZW51IG9iamVjdCAqL1xuICBwYXJlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9QYWdlQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBQYWdlQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9QYWdlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxQYWdlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9QYWdlQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQYWdlQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9QYWdlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFBhZ2U7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1BhZ2VDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUGFnZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvUGFnZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9QYWdlQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgUGx1Z2luIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBQbHVnaW5Db25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb1BsdWdpbkNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBsdWdpbj47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1BsdWdpbkNvbm5lY3Rpb25FZGdlID0gRWRnZSAmIFBsdWdpbkNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFBsdWdpbjtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvUGx1Z2luQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9QbHVnaW5Db25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFBsdWdpbkNvbm5lY3Rpb25QYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9QbHVnaW5Db25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBSb290UXVlcnlUb1BsdWdpbkNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9QbHVnaW5Db25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogU2hvdyBwbHVnaW4gYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaC4gKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSBwbHVnaW5zIHdoZXJlIHBsdWdpbiBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBsdWdpblN0YXR1c0VudW0+Pj47XG4gIC8qKiBTaG93IHBsdWdpbnMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQbHVnaW5TdGF0dXNFbnVtPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgcG9zdCB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1Bvc3RDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFBvc3RDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUG9zdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBSb290UXVlcnlUb1Bvc3RDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvUG9zdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFBvc3Q+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBSb290UXVlcnlUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUG9zdENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIFBvc3RDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1Bvc3RDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogUG9zdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvUG9zdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyA9IFBhZ2VJbmZvICYgUG9zdENvbm5lY3Rpb25QYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Qb3N0Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBcmd1bWVudHMgZm9yIGZpbHRlcmluZyB0aGUgUm9vdFF1ZXJ5VG9Qb3N0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1Bvc3RDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVGhlIHVzZXIgdGhhdCdzIGNvbm5lY3RlZCBhcyB0aGUgYXV0aG9yIG9mIHRoZSBvYmplY3QuIFVzZSB0aGUgdXNlcklkIGZvciB0aGUgYXV0aG9yIG9iamVjdC4gKi9cbiAgYXV0aG9yPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBGaW5kIG9iamVjdHMgY29ubmVjdGVkIHRvIGF1dGhvcihzKSBpbiB0aGUgYXJyYXkgb2YgYXV0aG9yJ3MgdXNlcklkcyAqL1xuICBhdXRob3JJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byB0aGUgYXV0aG9yIGJ5IHRoZSBhdXRob3IncyBuaWNlbmFtZSAqL1xuICBhdXRob3JOYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBGaW5kIG9iamVjdHMgTk9UIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIENhdGVnb3J5IElEICovXG4gIGNhdGVnb3J5SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNhdGVnb3J5IElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgY2F0ZWdvcnkgT1IgYW5vdGhlciAqL1xuICBjYXRlZ29yeUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBVc2UgQ2F0ZWdvcnkgU2x1ZyAqL1xuICBjYXRlZ29yeU5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNhdGVnb3J5IElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgY2F0ZWdvcnkgT1IgYW5vdGhlciAqL1xuICBjYXRlZ29yeU5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRhZyBTbHVnICovXG4gIHRhZz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlIFRhZyBJRCAqL1xuICB0YWdJZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgdGFnIElEcywgdXNlZCB0byBkaXNwbGF5IG9iamVjdHMgZnJvbSBvbmUgdGFnIE9SIGFub3RoZXIgKi9cbiAgdGFnSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBPUiBhbm90aGVyICovXG4gIHRhZ05vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgc2x1Z3MsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBBTkQgYW5vdGhlciAqL1xuICB0YWdTbHVnQW5kPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIHNsdWdzLCB1c2VkIHRvIGluY2x1ZGUgb2JqZWN0cyBpbiBBTlkgc3BlY2lmaWVkIHRhZ3MgKi9cbiAgdGFnU2x1Z0luPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogVGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBwb3N0Rm9ybWF0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUG9zdEZvcm1hdENvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgUG9zdEZvcm1hdENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvUG9zdEZvcm1hdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8UG9zdEZvcm1hdD47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvUG9zdEZvcm1hdENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgUG9zdEZvcm1hdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUG9zdEZvcm1hdENvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBQb3N0Rm9ybWF0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Qb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBQb3N0Rm9ybWF0Q29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1Bvc3RGb3JtYXRDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBSb290UXVlcnlUb1Bvc3RGb3JtYXRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUG9zdEZvcm1hdENvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBVbmlxdWUgY2FjaGUga2V5IHRvIGJlIHByb2R1Y2VkIHdoZW4gdGhpcyBxdWVyeSBpcyBzdG9yZWQgaW4gYW4gb2JqZWN0IGNhY2hlLiBEZWZhdWx0IGlzICdjb3JlJy4gKi9cbiAgY2FjaGVEb21haW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRlcm0gSUQgdG8gcmV0cmlldmUgY2hpbGQgdGVybXMgb2YuIElmIG11bHRpcGxlIHRheG9ub21pZXMgYXJlIHBhc3NlZCwgJGNoaWxkX29mIGlzIGlnbm9yZWQuIERlZmF1bHQgMC4gKi9cbiAgY2hpbGRPZj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVHJ1ZSB0byBsaW1pdCByZXN1bHRzIHRvIHRlcm1zIHRoYXQgaGF2ZSBubyBjaGlsZHJlbi4gVGhpcyBwYXJhbWV0ZXIgaGFzIG5vIGVmZmVjdCBvbiBub24taGllcmFyY2hpY2FsIHRheG9ub21pZXMuIERlZmF1bHQgZmFsc2UuICovXG4gIGNoaWxkbGVzcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBkZXNjcmlwdGlvbiBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgZGVzY3JpcHRpb25MaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUgYWxvbmcgd2l0aCBhbGwgb2YgdGhlaXIgZGVzY2VuZGFudCB0ZXJtcy4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZV90cmVlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGVUcmVlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIGhpZGUgdGVybXMgbm90IGFzc2lnbmVkIHRvIGFueSBwb3N0cy4gQWNjZXB0cyB0cnVlIG9yIGZhbHNlLiBEZWZhdWx0IGZhbHNlICovXG4gIGhpZGVFbXB0eT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gaW5jbHVkZSB0ZXJtcyB0aGF0IGhhdmUgbm9uLWVtcHR5IGRlc2NlbmRhbnRzIChldmVuIGlmICRoaWRlX2VtcHR5IGlzIHNldCB0byB0cnVlKS4gRGVmYXVsdCB0cnVlLiAqL1xuICBoaWVyYXJjaGljYWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBpbmNsdWRlLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBpbmNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBuYW1lcyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgbmFtZSBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZUxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIG9iamVjdCBJRHMuIFJlc3VsdHMgd2lsbCBiZSBsaW1pdGVkIHRvIHRlcm1zIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBvYmplY3RzLiAqL1xuICBvYmplY3RJZHM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIERpcmVjdGlvbiB0aGUgY29ubmVjdGlvbiBzaG91bGQgYmUgb3JkZXJlZCBpbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkKHMpIHRvIG9yZGVyIHRlcm1zIGJ5LiBEZWZhdWx0cyB0byAnbmFtZScuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFdoZXRoZXIgdG8gcGFkIHRoZSBxdWFudGl0eSBvZiBhIHRlcm0ncyBjaGlsZHJlbiBpbiB0aGUgcXVhbnRpdHkgb2YgZWFjaCB0ZXJtJ3MgXCJjb3VudFwiIG9iamVjdCB2YXJpYWJsZS4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgcGFkQ291bnRzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUGFyZW50IHRlcm0gSUQgdG8gcmV0cmlldmUgZGlyZWN0LWNoaWxkIHRlcm1zIG9mLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFNlYXJjaCBjcml0ZXJpYSB0byBtYXRjaCB0ZXJtcy4gV2lsbCBiZSBTUUwtZm9ybWF0dGVkIHdpdGggd2lsZGNhcmRzIGJlZm9yZSBhbmQgYWZ0ZXIuIERlZmF1bHQgZW1wdHkuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygc2x1Z3MgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9tSWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gdGF4b25vbXkgSURzLCB0byBtYXRjaCB3aGVuIHF1ZXJ5aW5nIHRlcm1zLiAqL1xuICB0ZXJtVGF4b25vbXlJZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hldGhlciB0byBwcmltZSBtZXRhIGNhY2hlcyBmb3IgbWF0Y2hlZCB0ZXJtcy4gRGVmYXVsdCB0cnVlLiAqL1xuICB1cGRhdGVUZXJtTWV0YUNhY2hlPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1JldmlzaW9uc0Nvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudE5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb1JldmlzaW9uc0Nvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnROb2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9SZXZpc2lvbnNDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbkVkZ2UgPSBDb250ZW50Tm9kZUNvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1JldmlzaW9uc0Nvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9SZXZpc2lvbnNDb25uZWN0aW9uUGFnZUluZm8gPSBDb250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyAmIFBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1JldmlzaW9uc0Nvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvUmV2aXNpb25zQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1JldmlzaW9uc0Nvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBUaGUgVHlwZXMgb2YgY29udGVudCB0byBmaWx0ZXIgKi9cbiAgY29udGVudFR5cGVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPENvbnRlbnRUeXBlRW51bT4+PjtcbiAgLyoqIEZpbHRlciB0aGUgY29ubmVjdGlvbiBiYXNlZCBvbiBkYXRlcyAqL1xuICBkYXRlUXVlcnk/OiBJbnB1dE1heWJlPERhdGVRdWVyeUlucHV0PjtcbiAgLyoqIFRydWUgZm9yIG9iamVjdHMgd2l0aCBwYXNzd29yZHM7IEZhbHNlIGZvciBvYmplY3RzIHdpdGhvdXQgcGFzc3dvcmRzOyBudWxsIGZvciBhbGwgb2JqZWN0cyB3aXRoIG9yIHdpdGhvdXQgcGFzc3dvcmRzICovXG4gIGhhc1Bhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmaWMgZGF0YWJhc2UgSUQgb2YgdGhlIG9iamVjdCAqL1xuICBpZD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgSURzIGZvciB0aGUgb2JqZWN0cyB0byByZXRyaWV2ZSAqL1xuICBpbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogR2V0IG9iamVjdHMgd2l0aCBhIHNwZWNpZmljIG1pbWVUeXBlIHByb3BlcnR5ICovXG4gIG1pbWVUeXBlPzogSW5wdXRNYXliZTxNaW1lVHlwZUVudW0+O1xuICAvKiogU2x1ZyAvIHBvc3RfbmFtZSBvZiB0aGUgb2JqZWN0ICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB0byByZXRyaWV2ZS4gVXNlIHNsdWdzICovXG4gIG5hbWVJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgSURzIE5PVCB0byByZXRyaWV2ZS4gSWYgdGhpcyBpcyB1c2VkIGluIHRoZSBzYW1lIHF1ZXJ5IGFzIFwiaW5cIiwgaXQgd2lsbCBiZSBpZ25vcmVkICovXG4gIG5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGF0IHBhcmFtZXRlciB0byB1c2UgdG8gb3JkZXIgdGhlIG9iamVjdHMgYnkuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdE9iamVjdHNDb25uZWN0aW9uT3JkZXJieUlucHV0Pj4+O1xuICAvKiogVXNlIElEIHRvIHJldHVybiBvbmx5IGNoaWxkcmVuLiBVc2UgMCB0byByZXR1cm4gb25seSB0b3AtbGV2ZWwgaXRlbXMgKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZnkgb2JqZWN0cyB3aG9zZSBwYXJlbnQgaXMgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNwZWNpZnkgcG9zdHMgd2hvc2UgcGFyZW50IGlzIG5vdCBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgcGFzc3dvcmQuICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaG93IFBvc3RzIGJhc2VkIG9uIGEga2V5d29yZCBzZWFyY2ggKi9cbiAgc2VhcmNoPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSBwb3N0cyB3aGVyZSBwb3N0IHN0YXR1cyBpcyBpbiBhbiBhcnJheS4gKi9cbiAgc3RhdGk/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBzdGF0dXMuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8UG9zdFN0YXR1c0VudW0+O1xuICAvKiogVGl0bGUgb2YgdGhlIG9iamVjdCAqL1xuICB0aXRsZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSB0YWcgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFRhZ0Nvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvVGFnQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8VGFnPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVGFnQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVGFnQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogVGFnO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9UYWdDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1RhZ0Nvbm5lY3Rpb25QYWdlSW5mbyA9IFBhZ2VJbmZvICYgVGFnQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1RhZ0Nvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvVGFnQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1RhZ0Nvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBVbmlxdWUgY2FjaGUga2V5IHRvIGJlIHByb2R1Y2VkIHdoZW4gdGhpcyBxdWVyeSBpcyBzdG9yZWQgaW4gYW4gb2JqZWN0IGNhY2hlLiBEZWZhdWx0IGlzICdjb3JlJy4gKi9cbiAgY2FjaGVEb21haW4/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRlcm0gSUQgdG8gcmV0cmlldmUgY2hpbGQgdGVybXMgb2YuIElmIG11bHRpcGxlIHRheG9ub21pZXMgYXJlIHBhc3NlZCwgJGNoaWxkX29mIGlzIGlnbm9yZWQuIERlZmF1bHQgMC4gKi9cbiAgY2hpbGRPZj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVHJ1ZSB0byBsaW1pdCByZXN1bHRzIHRvIHRlcm1zIHRoYXQgaGF2ZSBubyBjaGlsZHJlbi4gVGhpcyBwYXJhbWV0ZXIgaGFzIG5vIGVmZmVjdCBvbiBub24taGllcmFyY2hpY2FsIHRheG9ub21pZXMuIERlZmF1bHQgZmFsc2UuICovXG4gIGNoaWxkbGVzcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHRlcm1zIHdoZXJlIHRoZSBkZXNjcmlwdGlvbiBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgZGVzY3JpcHRpb25MaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlLiBJZiAkaW5jbHVkZSBpcyBub24tZW1wdHksICRleGNsdWRlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gaWRzIHRvIGV4Y2x1ZGUgYWxvbmcgd2l0aCBhbGwgb2YgdGhlaXIgZGVzY2VuZGFudCB0ZXJtcy4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZV90cmVlIGlzIGlnbm9yZWQuIERlZmF1bHQgZW1wdHkgYXJyYXkuICovXG4gIGV4Y2x1ZGVUcmVlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIGhpZGUgdGVybXMgbm90IGFzc2lnbmVkIHRvIGFueSBwb3N0cy4gQWNjZXB0cyB0cnVlIG9yIGZhbHNlLiBEZWZhdWx0IGZhbHNlICovXG4gIGhpZGVFbXB0eT86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gaW5jbHVkZSB0ZXJtcyB0aGF0IGhhdmUgbm9uLWVtcHR5IGRlc2NlbmRhbnRzIChldmVuIGlmICRoaWRlX2VtcHR5IGlzIHNldCB0byB0cnVlKS4gRGVmYXVsdCB0cnVlLiAqL1xuICBoaWVyYXJjaGljYWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBpbmNsdWRlLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBpbmNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBuYW1lcyB0byByZXR1cm4gdGVybShzKSBmb3IuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgbmFtZSBpcyBMSUtFIHRoZSBpbnB1dCB2YWx1ZS4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgbmFtZUxpa2U/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIG9iamVjdCBJRHMuIFJlc3VsdHMgd2lsbCBiZSBsaW1pdGVkIHRvIHRlcm1zIGFzc29jaWF0ZWQgd2l0aCB0aGVzZSBvYmplY3RzLiAqL1xuICBvYmplY3RJZHM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIERpcmVjdGlvbiB0aGUgY29ubmVjdGlvbiBzaG91bGQgYmUgb3JkZXJlZCBpbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbiAgLyoqIEZpZWxkKHMpIHRvIG9yZGVyIHRlcm1zIGJ5LiBEZWZhdWx0cyB0byAnbmFtZScuICovXG4gIG9yZGVyYnk/OiBJbnB1dE1heWJlPFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtPjtcbiAgLyoqIFdoZXRoZXIgdG8gcGFkIHRoZSBxdWFudGl0eSBvZiBhIHRlcm0ncyBjaGlsZHJlbiBpbiB0aGUgcXVhbnRpdHkgb2YgZWFjaCB0ZXJtJ3MgXCJjb3VudFwiIG9iamVjdCB2YXJpYWJsZS4gRGVmYXVsdCBmYWxzZS4gKi9cbiAgcGFkQ291bnRzPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogUGFyZW50IHRlcm0gSUQgdG8gcmV0cmlldmUgZGlyZWN0LWNoaWxkIHRlcm1zIG9mLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFNlYXJjaCBjcml0ZXJpYSB0byBtYXRjaCB0ZXJtcy4gV2lsbCBiZSBTUUwtZm9ybWF0dGVkIHdpdGggd2lsZGNhcmRzIGJlZm9yZSBhbmQgYWZ0ZXIuIERlZmF1bHQgZW1wdHkuICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2Ygc2x1Z3MgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9tSWQ/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRlcm0gdGF4b25vbXkgSURzLCB0byBtYXRjaCB3aGVuIHF1ZXJ5aW5nIHRlcm1zLiAqL1xuICB0ZXJtVGF4b25vbXlJZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hldGhlciB0byBwcmltZSBtZXRhIGNhY2hlcyBmb3IgbWF0Y2hlZCB0ZXJtcy4gRGVmYXVsdCB0cnVlLiAqL1xuICB1cGRhdGVUZXJtTWV0YUNhY2hlPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBUYXhvbm9teSB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBUYXhvbm9teUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9UYXhvbm9teUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8VGF4b25vbXk+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVGF4b25vbXlDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFRheG9ub215O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9UYXhvbm9teUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVGF4b25vbXlDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFRheG9ub215Q29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1RheG9ub215Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFJvb3RRdWVyeSB0eXBlIGFuZCB0aGUgVGVybU5vZGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgVGVybU5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvVGVybU5vZGVDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFRlcm1Ob2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25FZGdlID0gRWRnZSAmIFRlcm1Ob2RlQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBUZXJtTm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Jvb3RRdWVyeVRvVGVybU5vZGVDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1Rlcm1Ob2RlQ29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBUZXJtTm9kZUNvbm5lY3Rpb25QYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9UZXJtTm9kZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFJvb3RRdWVyeVRvVGVybU5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVGVybU5vZGVDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogVW5pcXVlIGNhY2hlIGtleSB0byBiZSBwcm9kdWNlZCB3aGVuIHRoaXMgcXVlcnkgaXMgc3RvcmVkIGluIGFuIG9iamVjdCBjYWNoZS4gRGVmYXVsdCBpcyAnY29yZScuICovXG4gIGNhY2hlRG9tYWluPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUZXJtIElEIHRvIHJldHJpZXZlIGNoaWxkIHRlcm1zIG9mLiBJZiBtdWx0aXBsZSB0YXhvbm9taWVzIGFyZSBwYXNzZWQsICRjaGlsZF9vZiBpcyBpZ25vcmVkLiBEZWZhdWx0IDAuICovXG4gIGNoaWxkT2Y/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIFRydWUgdG8gbGltaXQgcmVzdWx0cyB0byB0ZXJtcyB0aGF0IGhhdmUgbm8gY2hpbGRyZW4uIFRoaXMgcGFyYW1ldGVyIGhhcyBubyBlZmZlY3Qgb24gbm9uLWhpZXJhcmNoaWNhbCB0YXhvbm9taWVzLiBEZWZhdWx0IGZhbHNlLiAqL1xuICBjaGlsZGxlc3M/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBSZXRyaWV2ZSB0ZXJtcyB3aGVyZSB0aGUgZGVzY3JpcHRpb24gaXMgTElLRSB0aGUgaW5wdXQgdmFsdWUuIERlZmF1bHQgZW1wdHkuICovXG4gIGRlc2NyaXB0aW9uTGlrZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgdGVybSBpZHMgdG8gZXhjbHVkZS4gSWYgJGluY2x1ZGUgaXMgbm9uLWVtcHR5LCAkZXhjbHVkZSBpcyBpZ25vcmVkLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBleGNsdWRlPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIGlkcyB0byBleGNsdWRlIGFsb25nIHdpdGggYWxsIG9mIHRoZWlyIGRlc2NlbmRhbnQgdGVybXMuIElmICRpbmNsdWRlIGlzIG5vbi1lbXB0eSwgJGV4Y2x1ZGVfdHJlZSBpcyBpZ25vcmVkLiBEZWZhdWx0IGVtcHR5IGFycmF5LiAqL1xuICBleGNsdWRlVHJlZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hldGhlciB0byBoaWRlIHRlcm1zIG5vdCBhc3NpZ25lZCB0byBhbnkgcG9zdHMuIEFjY2VwdHMgdHJ1ZSBvciBmYWxzZS4gRGVmYXVsdCBmYWxzZSAqL1xuICBoaWRlRW1wdHk/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIGluY2x1ZGUgdGVybXMgdGhhdCBoYXZlIG5vbi1lbXB0eSBkZXNjZW5kYW50cyAoZXZlbiBpZiAkaGlkZV9lbXB0eSBpcyBzZXQgdG8gdHJ1ZSkuIERlZmF1bHQgdHJ1ZS4gKi9cbiAgaGllcmFyY2hpY2FsPzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICAvKiogQXJyYXkgb2YgdGVybSBpZHMgdG8gaW5jbHVkZS4gRGVmYXVsdCBlbXB0eSBhcnJheS4gKi9cbiAgaW5jbHVkZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgbmFtZXMgdG8gcmV0dXJuIHRlcm0ocykgZm9yLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogUmV0cmlldmUgdGVybXMgd2hlcmUgdGhlIG5hbWUgaXMgTElLRSB0aGUgaW5wdXQgdmFsdWUuIERlZmF1bHQgZW1wdHkuICovXG4gIG5hbWVMaWtlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBvYmplY3QgSURzLiBSZXN1bHRzIHdpbGwgYmUgbGltaXRlZCB0byB0ZXJtcyBhc3NvY2lhdGVkIHdpdGggdGhlc2Ugb2JqZWN0cy4gKi9cbiAgb2JqZWN0SWRzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBEaXJlY3Rpb24gdGhlIGNvbm5lY3Rpb24gc2hvdWxkIGJlIG9yZGVyZWQgaW4gKi9cbiAgb3JkZXI/OiBJbnB1dE1heWJlPE9yZGVyRW51bT47XG4gIC8qKiBGaWVsZChzKSB0byBvcmRlciB0ZXJtcyBieS4gRGVmYXVsdHMgdG8gJ25hbWUnLiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxUZXJtT2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bT47XG4gIC8qKiBXaGV0aGVyIHRvIHBhZCB0aGUgcXVhbnRpdHkgb2YgYSB0ZXJtJ3MgY2hpbGRyZW4gaW4gdGhlIHF1YW50aXR5IG9mIGVhY2ggdGVybSdzIFwiY291bnRcIiBvYmplY3QgdmFyaWFibGUuIERlZmF1bHQgZmFsc2UuICovXG4gIHBhZENvdW50cz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFBhcmVudCB0ZXJtIElEIHRvIHJldHJpZXZlIGRpcmVjdC1jaGlsZCB0ZXJtcyBvZi4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBTZWFyY2ggY3JpdGVyaWEgdG8gbWF0Y2ggdGVybXMuIFdpbGwgYmUgU1FMLWZvcm1hdHRlZCB3aXRoIHdpbGRjYXJkcyBiZWZvcmUgYW5kIGFmdGVyLiBEZWZhdWx0IGVtcHR5LiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHNsdWdzIHRvIHJldHVybiB0ZXJtKHMpIGZvci4gRGVmYXVsdCBlbXB0eS4gKi9cbiAgc2x1Zz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRoZSBUYXhvbm9teSB0byBmaWx0ZXIgdGVybXMgYnkgKi9cbiAgdGF4b25vbWllcz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxUYXhvbm9teUVudW0+Pj47XG4gIC8qKiBBcnJheSBvZiB0ZXJtIHRheG9ub215IElEcywgdG8gbWF0Y2ggd2hlbiBxdWVyeWluZyB0ZXJtcy4gKi9cbiAgdGVybVRheG9ub21JZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGVybSB0YXhvbm9teSBJRHMsIHRvIG1hdGNoIHdoZW4gcXVlcnlpbmcgdGVybXMuICovXG4gIHRlcm1UYXhvbm9teUlkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBXaGV0aGVyIHRvIHByaW1lIG1ldGEgY2FjaGVzIGZvciBtYXRjaGVkIHRlcm1zLiBEZWZhdWx0IHRydWUuICovXG4gIHVwZGF0ZVRlcm1NZXRhQ2FjaGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBSb290UXVlcnkgdHlwZSBhbmQgdGhlIFRoZW1lIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFRoZW1lQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1RoZW1lQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxUaGVtZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBUaGVtZUNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogVGhlbWU7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtSb290UXVlcnlUb1RoZW1lQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9UaGVtZUNvbm5lY3Rpb25QYWdlSW5mbyA9IFBhZ2VJbmZvICYgVGhlbWVDb25uZWN0aW9uUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvVGhlbWVDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBVc2VyIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVXNlckNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgVXNlckNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFJvb3RRdWVyeVRvVXNlckNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8Um9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8VXNlcj47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFJvb3RRdWVyeVRvVXNlckNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVXNlckNvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvVXNlckNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBVc2VyO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgUm9vdFF1ZXJ5VG9Vc2VyQ29ubmVjdGlvblBhZ2VJbmZvID0gUGFnZUluZm8gJiBVc2VyQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1VzZXJDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBSb290UXVlcnlUb1VzZXJDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVXNlckNvbm5lY3Rpb25XaGVyZUFyZ3MgPSB7XG4gIC8qKiBBcnJheSBvZiB1c2VySWRzIHRvIGV4Y2x1ZGUuICovXG4gIGV4Y2x1ZGU/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+Pj47XG4gIC8qKiBQYXNzIGFuIGFycmF5IG9mIHBvc3QgdHlwZXMgdG8gZmlsdGVyIHJlc3VsdHMgdG8gdXNlcnMgd2hvIGhhdmUgcHVibGlzaGVkIHBvc3RzIGluIHRob3NlIHBvc3QgdHlwZXMuICovXG4gIGhhc1B1Ymxpc2hlZFBvc3RzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPENvbnRlbnRUeXBlRW51bT4+PjtcbiAgLyoqIEFycmF5IG9mIHVzZXJJZHMgdG8gaW5jbHVkZS4gKi9cbiAgaW5jbHVkZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRoZSB1c2VyIGxvZ2luLiAqL1xuICBsb2dpbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQW4gYXJyYXkgb2YgbG9naW5zIHRvIGluY2x1ZGUuIFVzZXJzIG1hdGNoaW5nIG9uZSBvZiB0aGVzZSBsb2dpbnMgd2lsbCBiZSBpbmNsdWRlZCBpbiByZXN1bHRzLiAqL1xuICBsb2dpbkluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQW4gYXJyYXkgb2YgbG9naW5zIHRvIGV4Y2x1ZGUuIFVzZXJzIG1hdGNoaW5nIG9uZSBvZiB0aGVzZSBsb2dpbnMgd2lsbCBub3QgYmUgaW5jbHVkZWQgaW4gcmVzdWx0cy4gKi9cbiAgbG9naW5Ob3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRoZSB1c2VyIG5pY2VuYW1lLiAqL1xuICBuaWNlbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQW4gYXJyYXkgb2YgbmljZW5hbWVzIHRvIGluY2x1ZGUuIFVzZXJzIG1hdGNoaW5nIG9uZSBvZiB0aGVzZSBuaWNlbmFtZXMgd2lsbCBiZSBpbmNsdWRlZCBpbiByZXN1bHRzLiAqL1xuICBuaWNlbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQW4gYXJyYXkgb2YgbmljZW5hbWVzIHRvIGV4Y2x1ZGUuIFVzZXJzIG1hdGNoaW5nIG9uZSBvZiB0aGVzZSBuaWNlbmFtZXMgd2lsbCBub3QgYmUgaW5jbHVkZWQgaW4gcmVzdWx0cy4gKi9cbiAgbmljZW5hbWVOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxVc2Vyc0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBBbiBhcnJheSBvZiByb2xlIG5hbWVzIHRoYXQgdXNlcnMgbXVzdCBtYXRjaCB0byBiZSBpbmNsdWRlZCBpbiByZXN1bHRzLiBOb3RlIHRoYXQgdGhpcyBpcyBhbiBpbmNsdXNpdmUgbGlzdDogdXNlcnMgbXVzdCBtYXRjaCAqZWFjaCogcm9sZS4gKi9cbiAgcm9sZT86IElucHV0TWF5YmU8VXNlclJvbGVFbnVtPjtcbiAgLyoqIEFuIGFycmF5IG9mIHJvbGUgbmFtZXMuIE1hdGNoZWQgdXNlcnMgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBvZiB0aGVzZSByb2xlcy4gKi9cbiAgcm9sZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFVzZXJSb2xlRW51bT4+PjtcbiAgLyoqIEFuIGFycmF5IG9mIHJvbGUgbmFtZXMgdG8gZXhjbHVkZS4gVXNlcnMgbWF0Y2hpbmcgb25lIG9yIG1vcmUgb2YgdGhlc2Ugcm9sZXMgd2lsbCBub3QgYmUgaW5jbHVkZWQgaW4gcmVzdWx0cy4gKi9cbiAgcm9sZU5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFVzZXJSb2xlRW51bT4+PjtcbiAgLyoqIFNlYXJjaCBrZXl3b3JkLiBTZWFyY2hlcyBmb3IgcG9zc2libGUgc3RyaW5nIG1hdGNoZXMgb24gY29sdW1ucy4gV2hlbiBcInNlYXJjaENvbHVtbnNcIiBpcyBsZWZ0IGVtcHR5LCBpdCB0cmllcyB0byBkZXRlcm1pbmUgd2hpY2ggY29sdW1uIHRvIHNlYXJjaCBpbiBiYXNlZCBvbiBzZWFyY2ggc3RyaW5nLiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbHVtbiBuYW1lcyB0byBiZSBzZWFyY2hlZC4gQWNjZXB0cyAnSUQnLCAnbG9naW4nLCAnbmljZW5hbWUnLCAnZW1haWwnLCAndXJsJy4gKi9cbiAgc2VhcmNoQ29sdW1ucz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxVc2Vyc0Nvbm5lY3Rpb25TZWFyY2hDb2x1bW5FbnVtPj4+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgUm9vdFF1ZXJ5IHR5cGUgYW5kIHRoZSBVc2VyUm9sZSB0eXBlICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBVc2VyUm9sZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9Vc2VyUm9sZUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8VXNlclJvbGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVXNlclJvbGVDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFVzZXJSb2xlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7Um9vdFF1ZXJ5VG9Vc2VyUm9sZUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFJvb3RRdWVyeVRvVXNlclJvbGVDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFVzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdSb290UXVlcnlUb1VzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBIGJsb2NrIHVzZWQgZm9yIGVkaXRpbmcgdGhlIHNpdGUgKi9cbmV4cG9ydCB0eXBlIFNhZmVTdmdTdmdJY29uID0gRWRpdG9yQmxvY2sgJiBQYWdlRWRpdG9yQmxvY2sgJiBQb3N0RWRpdG9yQmxvY2sgJiB7XG4gIF9fdHlwZW5hbWU/OiAnU2FmZVN2Z1N2Z0ljb24nO1xuICAvKiogVGhlIEFQSSB2ZXJzaW9uIG9mIHRoZSBHdXRlbmJlcmcgQmxvY2sgKi9cbiAgYXBpVmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBBdHRyaWJ1dGVzIG9mIHRoZSBTYWZlU3ZnU3ZnSWNvbiBCbG9jayBUeXBlICovXG4gIGF0dHJpYnV0ZXM/OiBNYXliZTxTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXM+O1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIGNhdGVnb3J5IHRoZSBCbG9jayBiZWxvbmdzIHRvICovXG4gIGJsb2NrRWRpdG9yQ2F0ZWdvcnlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgQmxvY2sgKi9cbiAgY2xpZW50SWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ1NTIENsYXNzbmFtZXMgdG8gYXBwbHkgdG8gdGhlIGJsb2NrICovXG4gIGNzc0NsYXNzTmFtZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgaW5uZXIgYmxvY2tzIG9mIHRoZSBCbG9jayAqL1xuICBpbm5lckJsb2Nrcz86IE1heWJlPEFycmF5PE1heWJlPEVkaXRvckJsb2NrPj4+O1xuICAvKiogV2hldGhlciB0aGUgYmxvY2sgaXMgRHluYW1pYyAoc2VydmVyIHJlbmRlcmVkKSAqL1xuICBpc0R5bmFtaWM6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgYmxvY2sgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGFyZW50IGlkIG9mIHRoZSBCbG9jayAqL1xuICBwYXJlbnRDbGllbnRJZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcmVuZGVyZWQgSFRNTCBmb3IgdGhlIGJsb2NrICovXG4gIHJlbmRlcmVkSHRtbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXR0cmlidXRlcyBvZiB0aGUgU2FmZVN2Z1N2Z0ljb24gQmxvY2sgVHlwZSAqL1xuZXhwb3J0IHR5cGUgU2FmZVN2Z1N2Z0ljb25BdHRyaWJ1dGVzID0ge1xuICBfX3R5cGVuYW1lPzogJ1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyc7XG4gIC8qKiBUaGUgJnF1b3Q7YWxpZ25tZW50JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBhbGlnbm1lbnQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2JhY2tncm91bmRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7U2FmZVN2Z1N2Z0ljb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgYmFja2dyb3VuZENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtjbGFzc05hbWUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGNsYXNzTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGltZW5zaW9uSGVpZ2h0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBkaW1lbnNpb25IZWlnaHQ/OiBNYXliZTxTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7ZGltZW5zaW9uV2lkdGgmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGRpbWVuc2lvbldpZHRoPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2ltYWdlSGVpZ2h0JnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZUhlaWdodD86IE1heWJlPFNjYWxhcnNbJ0Zsb2F0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpbWFnZUlEJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZUlEOiBTY2FsYXJzWydGbG9hdCddWydvdXRwdXQnXTtcbiAgLyoqIFRoZSAmcXVvdDtpbWFnZVNpemVzJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZVNpemVzPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtpbWFnZVdpZHRoJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBpbWFnZVdpZHRoPzogTWF5YmU8U2NhbGFyc1snRmxvYXQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O2xvY2smcXVvdDsgZmllbGQgb24gdGhlICZxdW90O1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIGxvY2s/OiBNYXliZTxTY2FsYXJzWydCbG9ja0F0dHJpYnV0ZXNPYmplY3QnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlICZxdW90O21ldGFkYXRhJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICBtZXRhZGF0YT86IE1heWJlPFNjYWxhcnNbJ0Jsb2NrQXR0cmlidXRlc09iamVjdCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgJnF1b3Q7c3R5bGUmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN0eWxlPzogTWF5YmU8U2NhbGFyc1snQmxvY2tBdHRyaWJ1dGVzT2JqZWN0J11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDtzdmdVUkwmcXVvdDsgZmllbGQgb24gdGhlICZxdW90O1NhZmVTdmdTdmdJY29uQXR0cmlidXRlcyZxdW90OyBibG9jayBvciBibG9jayBhdHRyaWJ1dGVzICovXG4gIHN2Z1VSTDogU2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddO1xuICAvKiogVGhlICZxdW90O3RleHRDb2xvciZxdW90OyBmaWVsZCBvbiB0aGUgJnF1b3Q7U2FmZVN2Z1N2Z0ljb25BdHRyaWJ1dGVzJnF1b3Q7IGJsb2NrIG9yIGJsb2NrIGF0dHJpYnV0ZXMgKi9cbiAgdGV4dENvbG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSAmcXVvdDt0eXBlJnF1b3Q7IGZpZWxkIG9uIHRoZSAmcXVvdDtTYWZlU3ZnU3ZnSWNvbkF0dHJpYnV0ZXMmcXVvdDsgYmxvY2sgb3IgYmxvY2sgYXR0cmlidXRlcyAqL1xuICB0eXBlOiBTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J107XG59O1xuXG4vKiogVGhlIHN0cmF0ZWd5IHRvIHVzZSB3aGVuIGxvYWRpbmcgdGhlIHNjcmlwdCAqL1xuZXhwb3J0IGVudW0gU2NyaXB0TG9hZGluZ1N0cmF0ZWd5RW51bSB7XG4gIC8qKiBVc2UgdGhlIHNjcmlwdCBgYXN5bmNgIGF0dHJpYnV0ZSAqL1xuICBBc3luYyA9ICdBU1lOQycsXG4gIC8qKiBVc2UgdGhlIHNjcmlwdCBgZGVmZXJgIGF0dHJpYnV0ZSAqL1xuICBEZWZlciA9ICdERUZFUidcbn1cblxuLyoqIElucHV0IGZvciB0aGUgc2VuZFBhc3N3b3JkUmVzZXRFbWFpbCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFNlbmRQYXNzd29yZFJlc2V0RW1haWxJbnB1dCA9IHtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHVzZXIncyB1c2VybmFtZSBvciBlbWFpbCBhZGRyZXNzLiAqL1xuICB1c2VybmFtZTogU2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J107XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSBzZW5kUGFzc3dvcmRSZXNldEVtYWlsIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgU2VuZFBhc3N3b3JkUmVzZXRFbWFpbFBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2VuZFBhc3N3b3JkUmVzZXRFbWFpbFBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG11dGF0aW9uIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkuIFRoaXMgZG9lcyBOT1QgbmVjZXNzYXJpbHkgbWVhbiB0aGF0IGFuIGVtYWlsIHdhcyBzZW50LiAqL1xuICBzdWNjZXNzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKlxuICAgKiBUaGUgdXNlciB0aGF0IHRoZSBwYXNzd29yZCByZXNldCBlbWFpbCB3YXMgc2VudCB0b1xuICAgKiBAZGVwcmVjYXRlZCBUaGlzIGZpZWxkIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSB2ZXJzaW9uIG9mIFdQR3JhcGhRTFxuICAgKi9cbiAgdXNlcj86IE1heWJlPFVzZXI+O1xufTtcblxuLyoqIEFsbCBvZiB0aGUgcmVnaXN0ZXJlZCBzZXR0aW5ncyAqL1xuZXhwb3J0IHR5cGUgU2V0dGluZ3MgPSB7XG4gIF9fdHlwZW5hbWU/OiAnU2V0dGluZ3MnO1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBzdHJpbmcgU2V0dGluZ3MgR3JvdXAgKi9cbiAgZGlzY3Vzc2lvblNldHRpbmdzRGVmYXVsdENvbW1lbnRTdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBzdHJpbmcgU2V0dGluZ3MgR3JvdXAgKi9cbiAgZGlzY3Vzc2lvblNldHRpbmdzRGVmYXVsdFBpbmdTdGF0dXM/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBzdHJpbmcgU2V0dGluZ3MgR3JvdXAgKi9cbiAgZ2VuZXJhbFNldHRpbmdzRGF0ZUZvcm1hdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NEZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NFbWFpbD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NMYW5ndWFnZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIGludGVnZXIgU2V0dGluZ3MgR3JvdXAgKi9cbiAgZ2VuZXJhbFNldHRpbmdzU3RhcnRPZldlZWs/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBzdHJpbmcgU2V0dGluZ3MgR3JvdXAgKi9cbiAgZ2VuZXJhbFNldHRpbmdzVGltZUZvcm1hdD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NUaW1lem9uZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NUaXRsZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICBnZW5lcmFsU2V0dGluZ3NVcmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBpbnRlZ2VyIFNldHRpbmdzIEdyb3VwICovXG4gIHJlYWRpbmdTZXR0aW5nc1BhZ2VGb3JQb3N0cz86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIGludGVnZXIgU2V0dGluZ3MgR3JvdXAgKi9cbiAgcmVhZGluZ1NldHRpbmdzUGFnZU9uRnJvbnQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogU2V0dGluZ3Mgb2YgdGhlIHRoZSBpbnRlZ2VyIFNldHRpbmdzIEdyb3VwICovXG4gIHJlYWRpbmdTZXR0aW5nc1Bvc3RzUGVyUGFnZT86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIHN0cmluZyBTZXR0aW5ncyBHcm91cCAqL1xuICByZWFkaW5nU2V0dGluZ3NTaG93T25Gcm9udD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBTZXR0aW5ncyBvZiB0aGUgdGhlIGludGVnZXIgU2V0dGluZ3MgR3JvdXAgKi9cbiAgd3JpdGluZ1NldHRpbmdzRGVmYXVsdENhdGVnb3J5PzogTWF5YmU8U2NhbGFyc1snSW50J11bJ291dHB1dCddPjtcbiAgLyoqIFNldHRpbmdzIG9mIHRoZSB0aGUgc3RyaW5nIFNldHRpbmdzIEdyb3VwICovXG4gIHdyaXRpbmdTZXR0aW5nc0RlZmF1bHRQb3N0Rm9ybWF0PzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFNldHRpbmdzIG9mIHRoZSB0aGUgYm9vbGVhbiBTZXR0aW5ncyBHcm91cCAqL1xuICB3cml0aW5nU2V0dGluZ3NVc2VTbWlsaWVzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlIHRhZyB0eXBlICovXG5leHBvcnQgdHlwZSBUYWcgPSBEYXRhYmFzZUlkZW50aWZpZXIgJiBNZW51SXRlbUxpbmthYmxlICYgTm9kZSAmIFRlcm1Ob2RlICYgVW5pZm9ybVJlc291cmNlSWRlbnRpZmlhYmxlICYge1xuICBfX3R5cGVuYW1lPzogJ1RhZyc7XG4gIC8qKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXMgKi9cbiAgY29uZGl0aW9uYWxUYWdzPzogTWF5YmU8Q29uZGl0aW9uYWxUYWdzPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVGFnIHR5cGUgYW5kIHRoZSBDb250ZW50Tm9kZSB0eXBlICovXG4gIGNvbnRlbnROb2Rlcz86IE1heWJlPFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uPjtcbiAgLyoqIFRoZSBudW1iZXIgb2Ygb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIG9iamVjdCAqL1xuICBjb3VudD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgc3RvcmVkIGluIHRoZSBkYXRhYmFzZSAqL1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJbnQnXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIG9iamVjdCAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFRlcm1Ob2RlIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFNjcmlwdCB0eXBlICovXG4gIGVucXVldWVkU2NyaXB0cz86IE1heWJlPFRlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbiAgZW5xdWV1ZWRTdHlsZXNoZWV0cz86IE1heWJlPFRlcm1Ob2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgSUQgZm9yIHRoZSBvYmplY3QgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbW1lbnQgKi9cbiAgaXNDb21tZW50OiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIENvbnRlbnQgTm9kZSAqL1xuICBpc0NvbnRlbnROb2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBmcm9udCBwYWdlLiAqL1xuICBpc0Zyb250UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGJsb2cgcGFnZS4gKi9cbiAgaXNQb3N0c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBUZXJtICovXG4gIGlzVGVybU5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBUaGUgbGluayB0byB0aGUgdGVybSAqL1xuICBsaW5rPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBodW1hbiBmcmllbmRseSBuYW1lIG9mIHRoZSBvYmplY3QuICovXG4gIG5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUYWcgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuICBwb3N0cz86IE1heWJlPFRhZ1RvUG9zdENvbm5lY3Rpb24+O1xuICAvKiogQW4gYWxwaGFudW1lcmljIGlkZW50aWZpZXIgZm9yIHRoZSBvYmplY3QgdW5pcXVlIHRvIGl0cyB0eXBlLiAqL1xuICBzbHVnPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqXG4gICAqIFRoZSBpZCBmaWVsZCBtYXRjaGVzIHRoZSBXUF9Qb3N0LSZndDtJRCBmaWVsZC5cbiAgICogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiBkYXRhYmFzZUlkXG4gICAqL1xuICB0YWdJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFRhZyB0eXBlIGFuZCB0aGUgVGF4b25vbXkgdHlwZSAqL1xuICB0YXhvbm9teT86IE1heWJlPFRhZ1RvVGF4b25vbXlDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGF4b25vbXkgdGhhdCB0aGUgb2JqZWN0IGlzIGFzc29jaWF0ZWQgd2l0aCAqL1xuICB0YXhvbm9teU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICB0ZW1wbGF0ZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHRlcm0gZ3JvdXAgdGhhdCB0aGlzIHRlcm0gb2JqZWN0IGJlbG9uZ3MgdG8gKi9cbiAgdGVybUdyb3VwSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRheG9ub215IElEIHRoYXQgdGhlIG9iamVjdCBpcyBhc3NvY2lhdGVkIHdpdGggKi9cbiAgdGVybVRheG9ub215SWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIFRoZSB0YWcgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGFnQ29udGVudE5vZGVzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIFRoZSB0YWcgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGFnRW5xdWV1ZWRTY3JpcHRzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbn07XG5cblxuLyoqIFRoZSB0YWcgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGFnRW5xdWV1ZWRTdHlsZXNoZWV0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBUaGUgdGFnIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFRhZ1Bvc3RzQXJncyA9IHtcbiAgYWZ0ZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgYmVmb3JlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGZpcnN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIGxhc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgd2hlcmU/OiBJbnB1dE1heWJlPFRhZ1RvUG9zdENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gdGFnIE5vZGVzICovXG5leHBvcnQgdHlwZSBUYWdDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgdGFnIE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxUYWdDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIHRhZyBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8VGFnPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVGFnQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIHRhZyAqL1xuZXhwb3J0IHR5cGUgVGFnQ29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIHRhZyBOb2RlICovXG4gIG5vZGU6IFRhZztcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBUYWdDb25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgVGFnQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSByZXNvdXJjZS4gRGVmYXVsdCBpcyBJRC4gKi9cbmV4cG9ydCBlbnVtIFRhZ0lkVHlwZSB7XG4gIC8qKiBUaGUgRGF0YWJhc2UgSUQgZm9yIHRoZSBub2RlICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogVGhlIGhhc2hlZCBHbG9iYWwgSUQgKi9cbiAgSWQgPSAnSUQnLFxuICAvKiogVGhlIG5hbWUgb2YgdGhlIG5vZGUgKi9cbiAgTmFtZSA9ICdOQU1FJyxcbiAgLyoqIFVybCBmcmllbmRseSBuYW1lIG9mIHRoZSBub2RlICovXG4gIFNsdWcgPSAnU0xVRycsXG4gIC8qKiBUaGUgVVJJIGZvciB0aGUgbm9kZSAqL1xuICBVcmkgPSAnVVJJJ1xufVxuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUYWcgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIENvbnRlbnROb2RlQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdUYWdUb0NvbnRlbnROb2RlQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDb250ZW50Tm9kZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFRhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSA9IENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1RhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogQ29udGVudE5vZGU7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtUYWdUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgVGFnVG9Db250ZW50Tm9kZUNvbm5lY3Rpb25QYWdlSW5mbyA9IENvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1RhZ1RvQ29udGVudE5vZGVDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBUYWdUb0NvbnRlbnROb2RlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBUYWdUb0NvbnRlbnROb2RlQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBUeXBlcyBvZiBjb250ZW50IHRvIGZpbHRlciAqL1xuICBjb250ZW50VHlwZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8Q29udGVudFR5cGVzT2ZUYWdFbnVtPj4+O1xuICAvKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGRhdGVzICovXG4gIGRhdGVRdWVyeT86IElucHV0TWF5YmU8RGF0ZVF1ZXJ5SW5wdXQ+O1xuICAvKiogVHJ1ZSBmb3Igb2JqZWN0cyB3aXRoIHBhc3N3b3JkczsgRmFsc2UgZm9yIG9iamVjdHMgd2l0aG91dCBwYXNzd29yZHM7IG51bGwgZm9yIGFsbCBvYmplY3RzIHdpdGggb3Igd2l0aG91dCBwYXNzd29yZHMgKi9cbiAgaGFzUGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZpYyBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBJRHMgZm9yIHRoZSBvYmplY3RzIHRvIHJldHJpZXZlICovXG4gIGluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBHZXQgb2JqZWN0cyB3aXRoIGEgc3BlY2lmaWMgbWltZVR5cGUgcHJvcGVydHkgKi9cbiAgbWltZVR5cGU/OiBJbnB1dE1heWJlPE1pbWVUeXBlRW51bT47XG4gIC8qKiBTbHVnIC8gcG9zdF9uYW1lIG9mIHRoZSBvYmplY3QgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHRvIHJldHJpZXZlLiBVc2Ugc2x1Z3MgKi9cbiAgbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBJRHMgTk9UIHRvIHJldHJpZXZlLiBJZiB0aGlzIGlzIHVzZWQgaW4gdGhlIHNhbWUgcXVlcnkgYXMgXCJpblwiLCBpdCB3aWxsIGJlIGlnbm9yZWQgKi9cbiAgbm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBVc2UgSUQgdG8gcmV0dXJuIG9ubHkgY2hpbGRyZW4uIFVzZSAwIHRvIHJldHVybiBvbmx5IHRvcC1sZXZlbCBpdGVtcyAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHdob3NlIHBhcmVudCBpcyBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBwb3N0cyB3aG9zZSBwYXJlbnQgaXMgbm90IGluIGFuIGFycmF5ICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBwYXNzd29yZC4gKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNob3cgUG9zdHMgYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaCAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHBvc3RzIHdoZXJlIHBvc3Qgc3RhdHVzIGlzIGluIGFuIGFycmF5LiAqL1xuICBzdGF0aT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT47XG4gIC8qKiBUaXRsZSBvZiB0aGUgb2JqZWN0ICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUYWcgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGFnVG9Qb3N0Q29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBQb3N0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdUYWdUb1Bvc3RDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgVGFnVG9Qb3N0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxUYWdUb1Bvc3RDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxQb3N0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVGFnVG9Qb3N0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBUYWdUb1Bvc3RDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQb3N0Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGFnVG9Qb3N0Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IFBvc3Q7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtUYWdUb1Bvc3RDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBUYWdUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFBvc3RDb25uZWN0aW9uUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1RhZ1RvUG9zdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFRhZ1RvUG9zdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVGFnVG9Qb3N0Q29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDYXRlZ29yeSBJRCAqL1xuICBjYXRlZ29yeUlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogVXNlIENhdGVnb3J5IFNsdWcgKi9cbiAgY2F0ZWdvcnlOYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGRhdGVzICovXG4gIGRhdGVRdWVyeT86IElucHV0TWF5YmU8RGF0ZVF1ZXJ5SW5wdXQ+O1xuICAvKiogVHJ1ZSBmb3Igb2JqZWN0cyB3aXRoIHBhc3N3b3JkczsgRmFsc2UgZm9yIG9iamVjdHMgd2l0aG91dCBwYXNzd29yZHM7IG51bGwgZm9yIGFsbCBvYmplY3RzIHdpdGggb3Igd2l0aG91dCBwYXNzd29yZHMgKi9cbiAgaGFzUGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZpYyBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBJRHMgZm9yIHRoZSBvYmplY3RzIHRvIHJldHJpZXZlICovXG4gIGluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBHZXQgb2JqZWN0cyB3aXRoIGEgc3BlY2lmaWMgbWltZVR5cGUgcHJvcGVydHkgKi9cbiAgbWltZVR5cGU/OiBJbnB1dE1heWJlPE1pbWVUeXBlRW51bT47XG4gIC8qKiBTbHVnIC8gcG9zdF9uYW1lIG9mIHRoZSBvYmplY3QgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHRvIHJldHJpZXZlLiBVc2Ugc2x1Z3MgKi9cbiAgbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBJRHMgTk9UIHRvIHJldHJpZXZlLiBJZiB0aGlzIGlzIHVzZWQgaW4gdGhlIHNhbWUgcXVlcnkgYXMgXCJpblwiLCBpdCB3aWxsIGJlIGlnbm9yZWQgKi9cbiAgbm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBVc2UgSUQgdG8gcmV0dXJuIG9ubHkgY2hpbGRyZW4uIFVzZSAwIHRvIHJldHVybiBvbmx5IHRvcC1sZXZlbCBpdGVtcyAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHdob3NlIHBhcmVudCBpcyBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBwb3N0cyB3aG9zZSBwYXJlbnQgaXMgbm90IGluIGFuIGFycmF5ICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBwYXNzd29yZC4gKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNob3cgUG9zdHMgYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaCAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHBvc3RzIHdoZXJlIHBvc3Qgc3RhdHVzIGlzIGluIGFuIGFycmF5LiAqL1xuICBzdGF0aT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT47XG4gIC8qKiBUYWcgU2x1ZyAqL1xuICB0YWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFVzZSBUYWcgSUQgKi9cbiAgdGFnSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRhZyBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBPUiBhbm90aGVyICovXG4gIHRhZ0luPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgT1IgYW5vdGhlciAqL1xuICB0YWdOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIHNsdWdzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgQU5EIGFub3RoZXIgKi9cbiAgdGFnU2x1Z0FuZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBzbHVncywgdXNlZCB0byBpbmNsdWRlIG9iamVjdHMgaW4gQU5ZIHNwZWNpZmllZCB0YWdzICovXG4gIHRhZ1NsdWdJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFRhZyB0eXBlIGFuZCB0aGUgVGF4b25vbXkgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGFnVG9UYXhvbm9teUNvbm5lY3Rpb25FZGdlID0gRWRnZSAmIE9uZVRvT25lQ29ubmVjdGlvbiAmIFRheG9ub215Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGFnVG9UYXhvbm9teUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBub2RlIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlOiBUYXhvbm9teTtcbn07XG5cbi8qKiBBIHRheG9ub215IG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXkgPSBOb2RlICYge1xuICBfX3R5cGVuYW1lPzogJ1RheG9ub215JztcbiAgLyoqIExpc3Qgb2YgQ29udGVudCBUeXBlcyBhc3NvY2lhdGVkIHdpdGggdGhlIFRheG9ub215ICovXG4gIGNvbm5lY3RlZENvbnRlbnRUeXBlcz86IE1heWJlPFRheG9ub215VG9Db250ZW50VHlwZUNvbm5lY3Rpb24+O1xuICAvKiogTGlzdCBvZiBUZXJtIE5vZGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgVGF4b25vbXkgKi9cbiAgY29ubmVjdGVkVGVybXM/OiBNYXliZTxUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uPjtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSB0YXhvbm9teS4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX1RheG9ub215LSZndDtkZXNjcmlwdGlvbiAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgcGx1cmFsIG5hbWUgb2YgdGhlIHBvc3QgdHlwZSB3aXRoaW4gdGhlIEdyYXBoUUwgU2NoZW1hLiAqL1xuICBncmFwaHFsUGx1cmFsTmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgc2luZ3VsYXIgbmFtZSBvZiB0aGUgcG9zdCB0eXBlIHdpdGhpbiB0aGUgR3JhcGhRTCBTY2hlbWEuICovXG4gIGdyYXBocWxTaW5nbGVOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIHRheG9ub215IGlzIGhpZXJhcmNoaWNhbCAqL1xuICBoaWVyYXJjaGljYWw/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgdGF4b25vbXkgb2JqZWN0LiAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBvYmplY3QgaXMgcmVzdHJpY3RlZCBmcm9tIHRoZSBjdXJyZW50IHZpZXdlciAqL1xuICBpc1Jlc3RyaWN0ZWQ/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIE5hbWUgb2YgdGhlIHRheG9ub215IHNob3duIGluIHRoZSBtZW51LiBVc3VhbGx5IHBsdXJhbC4gKi9cbiAgbGFiZWw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGRpc3BsYXkgbmFtZSBvZiB0aGUgdGF4b25vbXkuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9UYXhvbm9teS0mZ3Q7bGFiZWwgKi9cbiAgbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSB0YXhvbm9teSBpcyBwdWJsaWNseSBxdWVyeWFibGUgKi9cbiAgcHVibGljPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBOYW1lIG9mIGNvbnRlbnQgdHlwZSB0byBkaXNwbGF5IGluIFJFU1QgQVBJICZxdW90O3dwL3YyJnF1b3Q7IG5hbWVzcGFjZS4gKi9cbiAgcmVzdEJhc2U/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIFJFU1QgQ29udHJvbGxlciBjbGFzcyBhc3NpZ25lZCB0byBoYW5kbGluZyB0aGlzIGNvbnRlbnQgdHlwZS4gKi9cbiAgcmVzdENvbnRyb2xsZXJDbGFzcz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIHNob3cgdGhlIHRheG9ub215IGFzIHBhcnQgb2YgYSB0YWcgY2xvdWQgd2lkZ2V0LiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfVGF4b25vbXktJmd0O3Nob3dfdGFnY2xvdWQgKi9cbiAgc2hvd0Nsb3VkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIGRpc3BsYXkgYSBjb2x1bW4gZm9yIHRoZSB0YXhvbm9teSBvbiBpdHMgcG9zdCB0eXBlIGxpc3Rpbmcgc2NyZWVucy4gKi9cbiAgc2hvd0luQWRtaW5Db2x1bW4/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdG8gYWRkIHRoZSBwb3N0IHR5cGUgdG8gdGhlIEdyYXBoUUwgU2NoZW1hLiAqL1xuICBzaG93SW5HcmFwaHFsPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIHNob3cgdGhlIHRheG9ub215IGluIHRoZSBhZG1pbiBtZW51ICovXG4gIHNob3dJbk1lbnU/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZXRoZXIgdGhlIHRheG9ub215IGlzIGF2YWlsYWJsZSBmb3Igc2VsZWN0aW9uIGluIG5hdmlnYXRpb24gbWVudXMuICovXG4gIHNob3dJbk5hdk1lbnVzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIHNob3cgdGhlIHRheG9ub215IGluIHRoZSBxdWljay9idWxrIGVkaXQgcGFuZWwuICovXG4gIHNob3dJblF1aWNrRWRpdD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0byBhZGQgdGhlIHBvc3QgdHlwZSByb3V0ZSBpbiB0aGUgUkVTVCBBUEkgJnF1b3Q7d3AvdjImcXVvdDsgbmFtZXNwYWNlLiAqL1xuICBzaG93SW5SZXN0PzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRvIGdlbmVyYXRlIGFuZCBhbGxvdyBhIFVJIGZvciBtYW5hZ2luZyB0ZXJtcyBpbiB0aGlzIHRheG9ub215IGluIHRoZSBhZG1pbiAqL1xuICBzaG93VWk/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIEEgdGF4b25vbXkgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBUYXhvbm9teUNvbm5lY3RlZENvbnRlbnRUeXBlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBBIHRheG9ub215IG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlDb25uZWN0ZWRUZXJtc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBUYXhvbm9teSBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgVGF4b25vbXkgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PFRheG9ub215Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBUYXhvbm9teSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8VGF4b25vbXk+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBUYXhvbm9teUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBUYXhvbm9teSAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgVGF4b25vbXkgTm9kZSAqL1xuICBub2RlOiBUYXhvbm9teTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBUYXhvbm9teUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBUYXhvbm9teUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBbGxvd2VkIHRheG9ub21pZXMgKi9cbmV4cG9ydCBlbnVtIFRheG9ub215RW51bSB7XG4gIC8qKiBUYXhvbm9teSBlbnVtIGNhdGVnb3J5ICovXG4gIENhdGVnb3J5ID0gJ0NBVEVHT1JZJyxcbiAgLyoqIFRheG9ub215IGVudW0gcG9zdF9mb3JtYXQgKi9cbiAgUG9zdGZvcm1hdCA9ICdQT1NURk9STUFUJyxcbiAgLyoqIFRheG9ub215IGVudW0gcG9zdF90YWcgKi9cbiAgVGFnID0gJ1RBRydcbn1cblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSBUYXhvbm9teSBub2RlLiBUbyBiZSB1c2VkIGFsb25nIHdpdGggdGhlIFwiaWRcIiBmaWVsZC4gRGVmYXVsdCBpcyBcIklEXCIuICovXG5leHBvcnQgZW51bSBUYXhvbm9teUlkVHlwZUVudW0ge1xuICAvKiogVGhlIGdsb2JhbGx5IHVuaXF1ZSBJRCAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGF4b25vbXkgKi9cbiAgTmFtZSA9ICdOQU1FJ1xufVxuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUYXhvbm9teSB0eXBlIGFuZCB0aGUgQ29udGVudFR5cGUgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbiA9IENvbm5lY3Rpb24gJiBDb250ZW50VHlwZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFRheG9ub215VG9Db250ZW50VHlwZUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8VGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8Q29udGVudFR5cGU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBUYXhvbm9teVRvQ29udGVudFR5cGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFRheG9ub215VG9Db250ZW50VHlwZUNvbm5lY3Rpb25FZGdlID0gQ29udGVudFR5cGVDb25uZWN0aW9uRWRnZSAmIEVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbnRlbnRUeXBlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7VGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvblBhZ2VJbmZvID0gQ29udGVudFR5cGVDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGF4b25vbXlUb0NvbnRlbnRUeXBlQ29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFRheG9ub215IHR5cGUgYW5kIHRoZSBUZXJtTm9kZSB0eXBlICovXG5leHBvcnQgdHlwZSBUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIFRlcm1Ob2RlQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgVGF4b25vbXlUb1Rlcm1Ob2RlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxUZXJtTm9kZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFRheG9ub215VG9UZXJtTm9kZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVGF4b25vbXlUb1Rlcm1Ob2RlQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVGVybU5vZGVDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogVGVybU5vZGU7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFRlcm1Ob2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdUYXhvbm9teVRvVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRlcm1zIGFyZSBub2RlcyB3aXRoaW4gYSBUYXhvbm9teSwgdXNlZCB0byBncm91cCBhbmQgcmVsYXRlIG90aGVyIG5vZGVzLiAqL1xuZXhwb3J0IHR5cGUgVGVybU5vZGUgPSB7XG4gIC8qKiBAZGVwcmVjYXRlZCBEZXByZWNhdGVkIGluIGZhdm9yIG9mIHVzaW5nIE5leHQuanMgcGFnZXMgKi9cbiAgY29uZGl0aW9uYWxUYWdzPzogTWF5YmU8Q29uZGl0aW9uYWxUYWdzPjtcbiAgLyoqIFRoZSBudW1iZXIgb2Ygb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIG9iamVjdCAqL1xuICBjb3VudD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBJZGVudGlmaWVzIHRoZSBwcmltYXJ5IGtleSBmcm9tIHRoZSBkYXRhYmFzZS4gKi9cbiAgZGF0YWJhc2VJZDogU2NhbGFyc1snSW50J11bJ291dHB1dCddO1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBvYmplY3QgKi9cbiAgZGVzY3JpcHRpb24/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVGVybU5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU3R5bGVzaGVldCB0eXBlICovXG4gIGVucXVldWVkU3R5bGVzaGVldHM/OiBNYXliZTxUZXJtTm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgVGVybSAqL1xuICBpc1Rlcm1Ob2RlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogVGhlIGxpbmsgdG8gdGhlIHRlcm0gKi9cbiAgbGluaz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaHVtYW4gZnJpZW5kbHkgbmFtZSBvZiB0aGUgb2JqZWN0LiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIEFuIGFscGhhbnVtZXJpYyBpZGVudGlmaWVyIGZvciB0aGUgb2JqZWN0IHVuaXF1ZSB0byBpdHMgdHlwZS4gKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgdGF4b25vbXkgdGhhdCB0aGUgb2JqZWN0IGlzIGFzc29jaWF0ZWQgd2l0aCAqL1xuICB0YXhvbm9teU5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICB0ZW1wbGF0ZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHRlcm0gZ3JvdXAgdGhhdCB0aGlzIHRlcm0gb2JqZWN0IGJlbG9uZ3MgdG8gKi9cbiAgdGVybUdyb3VwSWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRheG9ub215IElEIHRoYXQgdGhlIG9iamVjdCBpcyBhc3NvY2lhdGVkIHdpdGggKi9cbiAgdGVybVRheG9ub215SWQ/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cblxuLyoqIFRlcm1zIGFyZSBub2RlcyB3aXRoaW4gYSBUYXhvbm9teSwgdXNlZCB0byBncm91cCBhbmQgcmVsYXRlIG90aGVyIG5vZGVzLiAqL1xuZXhwb3J0IHR5cGUgVGVybU5vZGVFbnF1ZXVlZFNjcmlwdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuXG4vKiogVGVybXMgYXJlIG5vZGVzIHdpdGhpbiBhIFRheG9ub215LCB1c2VkIHRvIGdyb3VwIGFuZCByZWxhdGUgb3RoZXIgbm9kZXMuICovXG5leHBvcnQgdHlwZSBUZXJtTm9kZUVucXVldWVkU3R5bGVzaGVldHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gdG8gVGVybU5vZGUgTm9kZXMgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlQ29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIFJvb3RRdWVyeSBhbmQgY29ubmVjdGVkIFRlcm1Ob2RlIE5vZGVzICovXG4gIGVkZ2VzOiBBcnJheTxUZXJtTm9kZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIEEgbGlzdCBvZiBjb25uZWN0ZWQgVGVybU5vZGUgTm9kZXMgKi9cbiAgbm9kZXM6IEFycmF5PFRlcm1Ob2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogRWRnZSBiZXR3ZWVuIGEgTm9kZSBhbmQgYSBjb25uZWN0ZWQgVGVybU5vZGUgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlQ29ubmVjdGlvbkVkZ2UgPSB7XG4gIC8qKiBPcGFxdWUgcmVmZXJlbmNlIHRvIHRoZSBub2RlcyBwb3NpdGlvbiBpbiB0aGUgY29ubmVjdGlvbi4gVmFsdWUgY2FuIGJlIHVzZWQgd2l0aCBwYWdpbmF0aW9uIGFyZ3MuICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY29ubmVjdGVkIFRlcm1Ob2RlIE5vZGUgKi9cbiAgbm9kZTogVGVybU5vZGU7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSBjb25uZWN0ZWQgVGVybU5vZGVDb25uZWN0aW9uRWRnZSAqL1xuZXhwb3J0IHR5cGUgVGVybU5vZGVDb25uZWN0aW9uUGFnZUluZm8gPSB7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogVGhlIFR5cGUgb2YgSWRlbnRpZmllciB1c2VkIHRvIGZldGNoIGEgc2luZ2xlIHJlc291cmNlLiBEZWZhdWx0IGlzIFwiSURcIi4gVG8gYmUgdXNlZCBhbG9uZyB3aXRoIHRoZSBcImlkXCIgZmllbGQuICovXG5leHBvcnQgZW51bSBUZXJtTm9kZUlkVHlwZUVudW0ge1xuICAvKiogVGhlIERhdGFiYXNlIElEIGZvciB0aGUgbm9kZSAqL1xuICBEYXRhYmFzZUlkID0gJ0RBVEFCQVNFX0lEJyxcbiAgLyoqIFRoZSBoYXNoZWQgR2xvYmFsIElEICovXG4gIElkID0gJ0lEJyxcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBub2RlICovXG4gIE5hbWUgPSAnTkFNRScsXG4gIC8qKiBVcmwgZnJpZW5kbHkgbmFtZSBvZiB0aGUgbm9kZSAqL1xuICBTbHVnID0gJ1NMVUcnLFxuICAvKiogVGhlIFVSSSBmb3IgdGhlIG5vZGUgKi9cbiAgVXJpID0gJ1VSSSdcbn1cblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVGVybU5vZGUgdHlwZSBhbmQgdGhlIEVucXVldWVkU2NyaXB0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1Rlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBUZXJtTm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFRlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PEVucXVldWVkU2NyaXB0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVGVybU5vZGVUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBUZXJtTm9kZVRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBFbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Rlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBFbnF1ZXVlZFNjcmlwdDtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1Rlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyA9IEVucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1Rlcm1Ob2RlVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBUZXJtTm9kZSB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGVybU5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBUZXJtTm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxUZXJtTm9kZVRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8RW5xdWV1ZWRTdHlsZXNoZWV0PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVGVybU5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVGVybU5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1Rlcm1Ob2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogRW5xdWV1ZWRTdHlsZXNoZWV0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7VGVybU5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFRlcm1Ob2RlVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gPSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVGVybU5vZGVUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogT3B0aW9ucyBmb3Igb3JkZXJpbmcgdGhlIGNvbm5lY3Rpb24gYnkgKi9cbmV4cG9ydCBlbnVtIFRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtIHtcbiAgLyoqIE9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5IGl0ZW0gY291bnQuICovXG4gIENvdW50ID0gJ0NPVU5UJyxcbiAgLyoqIE9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5IGRlc2NyaXB0aW9uLiAqL1xuICBEZXNjcmlwdGlvbiA9ICdERVNDUklQVElPTicsXG4gIC8qKiBPcmRlciB0aGUgY29ubmVjdGlvbiBieSBuYW1lLiAqL1xuICBOYW1lID0gJ05BTUUnLFxuICAvKiogT3JkZXIgdGhlIGNvbm5lY3Rpb24gYnkgc2x1Zy4gKi9cbiAgU2x1ZyA9ICdTTFVHJyxcbiAgLyoqIE9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5IHRlcm0gZ3JvdXAuICovXG4gIFRlcm1Hcm91cCA9ICdURVJNX0dST1VQJyxcbiAgLyoqIE9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5IHRlcm0gaWQuICovXG4gIFRlcm1JZCA9ICdURVJNX0lEJyxcbiAgLyoqIE9yZGVyIHRoZSBjb25uZWN0aW9uIGJ5IHRlcm0gb3JkZXIuICovXG4gIFRlcm1PcmRlciA9ICdURVJNX09SREVSJ1xufVxuXG4vKiogQSB0aGVtZSBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIFRoZW1lID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdUaGVtZSc7XG4gIC8qKiBOYW1lIG9mIHRoZSB0aGVtZSBhdXRob3IocyksIGNvdWxkIGFsc28gYmUgYSBjb21wYW55IG5hbWUuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9UaGVtZS0mZ3Q7Z2V0KCAmcXVvdDtBdXRob3ImcXVvdDsgKS4gKi9cbiAgYXV0aG9yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFVSSSBmb3IgdGhlIGF1dGhvci9jb21wYW55IHdlYnNpdGUuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9UaGVtZS0mZ3Q7Z2V0KCAmcXVvdDtBdXRob3JVUkkmcXVvdDsgKS4gKi9cbiAgYXV0aG9yVXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgdGhlbWUuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9UaGVtZS0mZ3Q7Z2V0KCAmcXVvdDtEZXNjcmlwdGlvbiZxdW90OyApLiAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIHRoZW1lIG9iamVjdC4gKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgb2JqZWN0IGlzIHJlc3RyaWN0ZWQgZnJvbSB0aGUgY3VycmVudCB2aWV3ZXIgKi9cbiAgaXNSZXN0cmljdGVkPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhlIHRoZW1lLiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfVGhlbWUtJmd0O2dldCggJnF1b3Q7TmFtZSZxdW90OyApLiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBVUkwgb2YgdGhlIHNjcmVlbnNob3QgZm9yIHRoZSB0aGVtZS4gVGhlIHNjcmVlbnNob3QgaXMgaW50ZW5kZWQgdG8gZ2l2ZSBhbiBvdmVydmlldyBvZiB3aGF0IHRoZSB0aGVtZSBsb29rcyBsaWtlLiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfVGhlbWUtJmd0O2dldF9zY3JlZW5zaG90KCkuICovXG4gIHNjcmVlbnNob3Q/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHRoZW1lIHNsdWcgaXMgdXNlZCB0byBpbnRlcm5hbGx5IG1hdGNoIHRoZW1lcy4gVGhlbWUgc2x1Z3MgY2FuIGhhdmUgc3ViZGlyZWN0b3JpZXMgbGlrZTogbXktdGhlbWUvc3ViLXRoZW1lLiBUaGlzIGZpZWxkIGlzIGVxdWl2YWxlbnQgdG8gV1BfVGhlbWUtJmd0O2dldF9zdHlsZXNoZWV0KCkuICovXG4gIHNsdWc/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVVJJIGZvciB0aGUgYXV0aG9yL2NvbXBhbnkgd2Vic2l0ZS4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX1RoZW1lLSZndDtnZXQoICZxdW90O1RhZ3MmcXVvdDsgKS4gKi9cbiAgdGFncz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIEEgVVJJIGlmIHRoZSB0aGVtZSBoYXMgYSB3ZWJzaXRlIGFzc29jaWF0ZWQgd2l0aCBpdC4gVGhlIFRoZW1lIFVSSSBpcyBoYW5keSBmb3IgZGlyZWN0aW5nIHVzZXJzIHRvIGEgdGhlbWUgc2l0ZSBmb3Igc3VwcG9ydCBldGMuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9UaGVtZS0mZ3Q7Z2V0KCAmcXVvdDtUaGVtZVVSSSZxdW90OyApLiAqL1xuICB0aGVtZVVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIHRoZSB0aGVtZS4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX1RoZW1lLSZndDtnZXQoICZxdW90O1ZlcnNpb24mcXVvdDsgKS4gKi9cbiAgdmVyc2lvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBUaGVtZSBOb2RlcyAqL1xuZXhwb3J0IHR5cGUgVGhlbWVDb25uZWN0aW9uID0ge1xuICAvKiogQSBsaXN0IG9mIGVkZ2VzIChyZWxhdGlvbmFsIGNvbnRleHQpIGJldHdlZW4gUm9vdFF1ZXJ5IGFuZCBjb25uZWN0ZWQgVGhlbWUgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PFRoZW1lQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogQSBsaXN0IG9mIGNvbm5lY3RlZCBUaGVtZSBOb2RlcyAqL1xuICBub2RlczogQXJyYXk8VGhlbWU+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBUaGVtZUNvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBFZGdlIGJldHdlZW4gYSBOb2RlIGFuZCBhIGNvbm5lY3RlZCBUaGVtZSAqL1xuZXhwb3J0IHR5cGUgVGhlbWVDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgVGhlbWUgTm9kZSAqL1xuICBub2RlOiBUaGVtZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlIGNvbm5lY3RlZCBUaGVtZUNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBUaGVtZUNvbm5lY3Rpb25QYWdlSW5mbyA9IHtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBBbnkgbm9kZSB0aGF0IGhhcyBhIFVSSSAqL1xuZXhwb3J0IHR5cGUgVW5pZm9ybVJlc291cmNlSWRlbnRpZmlhYmxlID0ge1xuICAvKiogQGRlcHJlY2F0ZWQgRGVwcmVjYXRlZCBpbiBmYXZvciBvZiB1c2luZyBOZXh0LmpzIHBhZ2VzICovXG4gIGNvbmRpdGlvbmFsVGFncz86IE1heWJlPENvbmRpdGlvbmFsVGFncz47XG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElEIGZvciB0aGUgb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb21tZW50ICovXG4gIGlzQ29tbWVudDogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgaXMgYSBDb250ZW50IE5vZGUgKi9cbiAgaXNDb250ZW50Tm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgZnJvbnQgcGFnZS4gKi9cbiAgaXNGcm9udFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyICB0aGUgbm9kZSByZXByZXNlbnRzIHRoZSBibG9nIHBhZ2UuICovXG4gIGlzUG9zdHNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIFRlcm0gKi9cbiAgaXNUZXJtTm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgdGVtcGxhdGVzPzogTWF5YmU8QXJyYXk8TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPj4+O1xuICAvKiogVGhlIHVuaXF1ZSByZXNvdXJjZSBpZGVudGlmaWVyIHBhdGggKi9cbiAgdXJpPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIHVwZGF0ZUNhdGVnb3J5IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlQ2F0ZWdvcnlJbnB1dCA9IHtcbiAgLyoqIFRoZSBzbHVnIHRoYXQgdGhlIGNhdGVnb3J5IHdpbGwgYmUgYW4gYWxpYXMgb2YgKi9cbiAgYWxpYXNPZj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhpcyBpcyBhbiBJRCB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBtdXRhdGlvbiBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBjYXRlZ29yeSBvYmplY3QgKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgY2F0ZWdvcnkgb2JqZWN0IHRvIHVwZGF0ZSAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjYXRlZ29yeSBvYmplY3QgdG8gbXV0YXRlICovXG4gIG5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgY2F0ZWdvcnkgdGhhdCBzaG91bGQgYmUgc2V0IGFzIHRoZSBwYXJlbnQgKi9cbiAgcGFyZW50SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogSWYgdGhpcyBhcmd1bWVudCBleGlzdHMgdGhlbiB0aGUgc2x1ZyB3aWxsIGJlIGNoZWNrZWQgdG8gc2VlIGlmIGl0IGlzIG5vdCBhbiBleGlzdGluZyB2YWxpZCB0ZXJtLiBJZiB0aGF0IGNoZWNrIHN1Y2NlZWRzIChpdCBpcyBub3QgYSB2YWxpZCB0ZXJtKSwgdGhlbiBpdCBpcyBhZGRlZCBhbmQgdGhlIHRlcm0gaWQgaXMgZ2l2ZW4uIElmIGl0IGZhaWxzLCB0aGVuIGEgY2hlY2sgaXMgbWFkZSB0byB3aGV0aGVyIHRoZSB0YXhvbm9teSBpcyBoaWVyYXJjaGljYWwgYW5kIHRoZSBwYXJlbnQgYXJndW1lbnQgaXMgbm90IGVtcHR5LiBJZiB0aGUgc2Vjb25kIGNoZWNrIHN1Y2NlZWRzLCB0aGUgdGVybSB3aWxsIGJlIGluc2VydGVkIGFuZCB0aGUgdGVybSBpZCB3aWxsIGJlIGdpdmVuLiBJZiB0aGUgc2x1ZyBhcmd1bWVudCBpcyBlbXB0eSwgdGhlbiBpdCB3aWxsIGJlIGNhbGN1bGF0ZWQgZnJvbSB0aGUgdGVybSBuYW1lLiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSB1cGRhdGVDYXRlZ29yeSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZUNhdGVnb3J5UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdVcGRhdGVDYXRlZ29yeVBheWxvYWQnO1xuICAvKiogVGhlIGNyZWF0ZWQgY2F0ZWdvcnkgKi9cbiAgY2F0ZWdvcnk/OiBNYXliZTxDYXRlZ29yeT47XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgdXBkYXRlQ29tbWVudCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZUNvbW1lbnRJbnB1dCA9IHtcbiAgLyoqIFRoZSBhcHByb3ZhbCBzdGF0dXMgb2YgdGhlIGNvbW1lbnQuICovXG4gIGFwcHJvdmVkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgY29tbWVudCdzIGF1dGhvci4gKi9cbiAgYXV0aG9yPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZW1haWwgb2YgdGhlIGNvbW1lbnQncyBhdXRob3IuICovXG4gIGF1dGhvckVtYWlsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgdXJsIG9mIHRoZSBjb21tZW50J3MgYXV0aG9yLiAqL1xuICBhdXRob3JVcmw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRhYmFzZSBJRCBvZiB0aGUgcG9zdCBvYmplY3QgdGhlIGNvbW1lbnQgYmVsb25ncyB0by4gKi9cbiAgY29tbWVudE9uPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IG9mIHRoZSBjb21tZW50LiAqL1xuICBjb250ZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGF0ZSBvZiB0aGUgb2JqZWN0LiBQcmVmZXJhYmxlIHRvIGVudGVyIGFzIHllYXIvbW9udGgvZGF5ICggZS5nLiAwMS8zMS8yMDE3ICkgYXMgaXQgd2lsbCByZWFycmFuZ2UgZGF0ZSBhcyBmaXQgaWYgaXQgaXMgbm90IHNwZWNpZmllZC4gSW5jb21wbGV0ZSBkYXRlcyBtYXkgaGF2ZSB1bmludGVuZGVkIHJlc3VsdHMgZm9yIGV4YW1wbGUsIFwiMjAxN1wiIGFzIHRoZSBpbnB1dCB3aWxsIHVzZSBjdXJyZW50IGRhdGUgd2l0aCB0aW1lc3RhbXAgMjA6MTcgICovXG4gIGRhdGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBJRCBvZiB0aGUgY29tbWVudCBiZWluZyB1cGRhdGVkLiAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgLyoqIFBhcmVudCBjb21tZW50IElEIG9mIGN1cnJlbnQgY29tbWVudC4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBhcHByb3ZhbCBzdGF0dXMgb2YgdGhlIGNvbW1lbnQgKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxDb21tZW50U3RhdHVzRW51bT47XG4gIC8qKiBUeXBlIG9mIGNvbW1lbnQuICovXG4gIHR5cGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIHVwZGF0ZUNvbW1lbnQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBVcGRhdGVDb21tZW50UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdVcGRhdGVDb21tZW50UGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNvbW1lbnQgdGhhdCB3YXMgY3JlYXRlZCAqL1xuICBjb21tZW50PzogTWF5YmU8Q29tbWVudD47XG4gIC8qKiBXaGV0aGVyIHRoZSBtdXRhdGlvbiBzdWNjZWVkZWQuIElmIHRoZSBjb21tZW50IGlzIG5vdCBhcHByb3ZlZCwgdGhlIHNlcnZlciB3aWxsIG5vdCByZXR1cm4gdGhlIGNvbW1lbnQgdG8gYSBub24gYXV0aGVudGljYXRlZCB1c2VyLCBidXQgYSBzdWNjZXNzIG1lc3NhZ2UgY2FuIGJlIHJldHVybmVkIGlmIHRoZSBjcmVhdGUgc3VjY2VlZGVkLCBhbmQgdGhlIGNsaWVudCBjYW4gb3B0aW1pc3RpY2FsbHkgYWRkIHRoZSBjb21tZW50IHRvIHRoZSBjbGllbnQgY2FjaGUgKi9cbiAgc3VjY2Vzcz86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgdXBkYXRlTWVkaWFJdGVtIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlTWVkaWFJdGVtSW5wdXQgPSB7XG4gIC8qKiBBbHRlcm5hdGl2ZSB0ZXh0IHRvIGRpc3BsYXkgd2hlbiBtZWRpYUl0ZW0gaXMgbm90IGRpc3BsYXllZCAqL1xuICBhbHRUZXh0PzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgdXNlcklkIHRvIGFzc2lnbiBhcyB0aGUgYXV0aG9yIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgYXV0aG9ySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGNhcHRpb24gZm9yIHRoZSBtZWRpYUl0ZW0gKi9cbiAgY2FwdGlvbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhpcyBpcyBhbiBJRCB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBtdXRhdGlvbiBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGNvbW1lbnQgc3RhdHVzIGZvciB0aGUgbWVkaWFJdGVtICovXG4gIGNvbW1lbnRTdGF0dXM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRlIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgZGF0ZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgKGluIEdNVCB6b25lKSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGRhdGVHbXQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBmaWxlIG5hbWUgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBmaWxlUGF0aD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGZpbGUgdHlwZSBvZiB0aGUgbWVkaWFJdGVtICovXG4gIGZpbGVUeXBlPzogSW5wdXRNYXliZTxNaW1lVHlwZUVudW0+O1xuICAvKiogVGhlIElEIG9mIHRoZSBtZWRpYUl0ZW0gb2JqZWN0ICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICAvKiogVGhlIElEIG9mIHRoZSBwYXJlbnQgb2JqZWN0ICovXG4gIHBhcmVudElkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBwaW5nIHN0YXR1cyBmb3IgdGhlIG1lZGlhSXRlbSAqL1xuICBwaW5nU3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgc2x1ZyBvZiB0aGUgbWVkaWFJdGVtICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBzdGF0dXMgb2YgdGhlIG1lZGlhSXRlbSAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPE1lZGlhSXRlbVN0YXR1c0VudW0+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBtZWRpYUl0ZW0gKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIHVwZGF0ZU1lZGlhSXRlbSBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZU1lZGlhSXRlbVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnVXBkYXRlTWVkaWFJdGVtUGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIE1lZGlhSXRlbSBvYmplY3QgbXV0YXRpb24gdHlwZS4gKi9cbiAgbWVkaWFJdGVtPzogTWF5YmU8TWVkaWFJdGVtPjtcbn07XG5cbi8qKiBJbnB1dCBmb3IgdGhlIHVwZGF0ZVBhZ2UgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBVcGRhdGVQYWdlSW5wdXQgPSB7XG4gIC8qKiBUaGUgdXNlcklkIHRvIGFzc2lnbiBhcyB0aGUgYXV0aG9yIG9mIHRoZSBvYmplY3QgKi9cbiAgYXV0aG9ySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogVGhpcyBpcyBhbiBJRCB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBtdXRhdGlvbiBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGNvbW1lbnQgc3RhdHVzIGZvciB0aGUgb2JqZWN0ICovXG4gIGNvbW1lbnRTdGF0dXM/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjb250ZW50IG9mIHRoZSBvYmplY3QgKi9cbiAgY29udGVudD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgb2YgdGhlIG9iamVjdC4gUHJlZmVyYWJsZSB0byBlbnRlciBhcyB5ZWFyL21vbnRoL2RheSAoZS5nLiAwMS8zMS8yMDE3KSBhcyBpdCB3aWxsIHJlYXJyYW5nZSBkYXRlIGFzIGZpdCBpZiBpdCBpcyBub3Qgc3BlY2lmaWVkLiBJbmNvbXBsZXRlIGRhdGVzIG1heSBoYXZlIHVuaW50ZW5kZWQgcmVzdWx0cyBmb3IgZXhhbXBsZSwgXCIyMDE3XCIgYXMgdGhlIGlucHV0IHdpbGwgdXNlIGN1cnJlbnQgZGF0ZSB3aXRoIHRpbWVzdGFtcCAyMDoxNyAgKi9cbiAgZGF0ZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBwYWdlIG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgLyoqIE92ZXJyaWRlIHRoZSBlZGl0IGxvY2sgd2hlbiBhbm90aGVyIHVzZXIgaXMgZWRpdGluZyB0aGUgcG9zdCAqL1xuICBpZ25vcmVFZGl0TG9jaz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIEEgZmllbGQgdXNlZCBmb3Igb3JkZXJpbmcgcG9zdHMuIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgd2l0aCBuYXYgbWVudSBpdGVtcyBvciBmb3Igc3BlY2lhbCBvcmRlcmluZyBvZiBoaWVyYXJjaGljYWwgY29udGVudCB0eXBlcy4gKi9cbiAgbWVudU9yZGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhcmVudCBvYmplY3QgKi9cbiAgcGFyZW50SWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHBhc3N3b3JkIHVzZWQgdG8gcHJvdGVjdCB0aGUgY29udGVudCBvZiB0aGUgb2JqZWN0ICovXG4gIHBhc3N3b3JkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgc2x1ZyBvZiB0aGUgb2JqZWN0ICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgb2JqZWN0ICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSB1cGRhdGVQYWdlIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlUGFnZVBheWxvYWQgPSB7XG4gIF9fdHlwZW5hbWU/OiAnVXBkYXRlUGFnZVBheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBQb3N0IG9iamVjdCBtdXRhdGlvbiB0eXBlLiAqL1xuICBwYWdlPzogTWF5YmU8UGFnZT47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSB1cGRhdGVQb3N0Rm9ybWF0IG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlUG9zdEZvcm1hdElucHV0ID0ge1xuICAvKiogVGhlIHNsdWcgdGhhdCB0aGUgcG9zdF9mb3JtYXQgd2lsbCBiZSBhbiBhbGlhcyBvZiAqL1xuICBhbGlhc09mPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGlzIGlzIGFuIElEIHRoYXQgY2FuIGJlIHBhc3NlZCB0byBhIG11dGF0aW9uIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHBvc3RfZm9ybWF0IG9iamVjdCAqL1xuICBkZXNjcmlwdGlvbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBwb3N0Rm9ybWF0IG9iamVjdCB0byB1cGRhdGUgKi9cbiAgaWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIC8qKiBUaGUgbmFtZSBvZiB0aGUgcG9zdF9mb3JtYXQgb2JqZWN0IHRvIG11dGF0ZSAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJZiB0aGlzIGFyZ3VtZW50IGV4aXN0cyB0aGVuIHRoZSBzbHVnIHdpbGwgYmUgY2hlY2tlZCB0byBzZWUgaWYgaXQgaXMgbm90IGFuIGV4aXN0aW5nIHZhbGlkIHRlcm0uIElmIHRoYXQgY2hlY2sgc3VjY2VlZHMgKGl0IGlzIG5vdCBhIHZhbGlkIHRlcm0pLCB0aGVuIGl0IGlzIGFkZGVkIGFuZCB0aGUgdGVybSBpZCBpcyBnaXZlbi4gSWYgaXQgZmFpbHMsIHRoZW4gYSBjaGVjayBpcyBtYWRlIHRvIHdoZXRoZXIgdGhlIHRheG9ub215IGlzIGhpZXJhcmNoaWNhbCBhbmQgdGhlIHBhcmVudCBhcmd1bWVudCBpcyBub3QgZW1wdHkuIElmIHRoZSBzZWNvbmQgY2hlY2sgc3VjY2VlZHMsIHRoZSB0ZXJtIHdpbGwgYmUgaW5zZXJ0ZWQgYW5kIHRoZSB0ZXJtIGlkIHdpbGwgYmUgZ2l2ZW4uIElmIHRoZSBzbHVnIGFyZ3VtZW50IGlzIGVtcHR5LCB0aGVuIGl0IHdpbGwgYmUgY2FsY3VsYXRlZCBmcm9tIHRoZSB0ZXJtIG5hbWUuICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIHVwZGF0ZVBvc3RGb3JtYXQgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBVcGRhdGVQb3N0Rm9ybWF0UGF5bG9hZCA9IHtcbiAgX190eXBlbmFtZT86ICdVcGRhdGVQb3N0Rm9ybWF0UGF5bG9hZCc7XG4gIC8qKiBJZiBhICYjMDM5O2NsaWVudE11dGF0aW9uSWQmIzAzOTsgaW5wdXQgaXMgcHJvdmlkZWQgdG8gdGhlIG11dGF0aW9uLCBpdCB3aWxsIGJlIHJldHVybmVkIGFzIG91dHB1dCBvbiB0aGUgbXV0YXRpb24uIFRoaXMgSUQgY2FuIGJlIHVzZWQgYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNyZWF0ZWQgcG9zdF9mb3JtYXQgKi9cbiAgcG9zdEZvcm1hdD86IE1heWJlPFBvc3RGb3JtYXQ+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgdXBkYXRlUG9zdCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZVBvc3RJbnB1dCA9IHtcbiAgLyoqIFRoZSB1c2VySWQgdG8gYXNzaWduIGFzIHRoZSBhdXRob3Igb2YgdGhlIG9iamVjdCAqL1xuICBhdXRob3JJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTZXQgY29ubmVjdGlvbnMgYmV0d2VlbiB0aGUgcG9zdCBhbmQgY2F0ZWdvcmllcyAqL1xuICBjYXRlZ29yaWVzPzogSW5wdXRNYXliZTxQb3N0Q2F0ZWdvcmllc0lucHV0PjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBjb21tZW50IHN0YXR1cyBmb3IgdGhlIG9iamVjdCAqL1xuICBjb21tZW50U3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY29udGVudCBvZiB0aGUgb2JqZWN0ICovXG4gIGNvbnRlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkYXRlIG9mIHRoZSBvYmplY3QuIFByZWZlcmFibGUgdG8gZW50ZXIgYXMgeWVhci9tb250aC9kYXkgKGUuZy4gMDEvMzEvMjAxNykgYXMgaXQgd2lsbCByZWFycmFuZ2UgZGF0ZSBhcyBmaXQgaWYgaXQgaXMgbm90IHNwZWNpZmllZC4gSW5jb21wbGV0ZSBkYXRlcyBtYXkgaGF2ZSB1bmludGVuZGVkIHJlc3VsdHMgZm9yIGV4YW1wbGUsIFwiMjAxN1wiIGFzIHRoZSBpbnB1dCB3aWxsIHVzZSBjdXJyZW50IGRhdGUgd2l0aCB0aW1lc3RhbXAgMjA6MTcgICovXG4gIGRhdGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBleGNlcnB0IG9mIHRoZSBvYmplY3QgKi9cbiAgZXhjZXJwdD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBwb3N0IG9iamVjdCAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnaW5wdXQnXTtcbiAgLyoqIE92ZXJyaWRlIHRoZSBlZGl0IGxvY2sgd2hlbiBhbm90aGVyIHVzZXIgaXMgZWRpdGluZyB0aGUgcG9zdCAqL1xuICBpZ25vcmVFZGl0TG9jaz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIEEgZmllbGQgdXNlZCBmb3Igb3JkZXJpbmcgcG9zdHMuIFRoaXMgaXMgdHlwaWNhbGx5IHVzZWQgd2l0aCBuYXYgbWVudSBpdGVtcyBvciBmb3Igc3BlY2lhbCBvcmRlcmluZyBvZiBoaWVyYXJjaGljYWwgY29udGVudCB0eXBlcy4gKi9cbiAgbWVudU9yZGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgcGFzc3dvcmQgdXNlZCB0byBwcm90ZWN0IHRoZSBjb250ZW50IG9mIHRoZSBvYmplY3QgKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBwaW5nIHN0YXR1cyBmb3IgdGhlIG9iamVjdCAqL1xuICBwaW5nU3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBVUkxzIHRoYXQgaGF2ZSBiZWVuIHBpbmdlZC4gKi9cbiAgcGluZ2VkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU2V0IGNvbm5lY3Rpb25zIGJldHdlZW4gdGhlIHBvc3QgYW5kIHBvc3RGb3JtYXRzICovXG4gIHBvc3RGb3JtYXRzPzogSW5wdXRNYXliZTxQb3N0UG9zdEZvcm1hdHNJbnB1dD47XG4gIC8qKiBUaGUgc2x1ZyBvZiB0aGUgb2JqZWN0ICovXG4gIHNsdWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBzdGF0dXMgb2YgdGhlIG9iamVjdCAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFNldCBjb25uZWN0aW9ucyBiZXR3ZWVuIHRoZSBwb3N0IGFuZCB0YWdzICovXG4gIHRhZ3M/OiBJbnB1dE1heWJlPFBvc3RUYWdzSW5wdXQ+O1xuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFVSTHMgcXVldWVkIHRvIGJlIHBpbmdlZC4gKi9cbiAgdG9QaW5nPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xufTtcblxuLyoqIFRoZSBwYXlsb2FkIGZvciB0aGUgdXBkYXRlUG9zdCBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZVBvc3RQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ1VwZGF0ZVBvc3RQYXlsb2FkJztcbiAgLyoqIElmIGEgJiMwMzk7Y2xpZW50TXV0YXRpb25JZCYjMDM5OyBpbnB1dCBpcyBwcm92aWRlZCB0byB0aGUgbXV0YXRpb24sIGl0IHdpbGwgYmUgcmV0dXJuZWQgYXMgb3V0cHV0IG9uIHRoZSBtdXRhdGlvbi4gVGhpcyBJRCBjYW4gYmUgdXNlZCBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgUG9zdCBvYmplY3QgbXV0YXRpb24gdHlwZS4gKi9cbiAgcG9zdD86IE1heWJlPFBvc3Q+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgdXBkYXRlU2V0dGluZ3MgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBVcGRhdGVTZXR0aW5nc0lucHV0ID0ge1xuICAvKiogVGhpcyBpcyBhbiBJRCB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBtdXRhdGlvbiBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQWxsb3cgcGVvcGxlIHRvIHN1Ym1pdCBjb21tZW50cyBvbiBuZXcgcG9zdHMuICovXG4gIGRpc2N1c3Npb25TZXR0aW5nc0RlZmF1bHRDb21tZW50U3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBbGxvdyBsaW5rIG5vdGlmaWNhdGlvbnMgZnJvbSBvdGhlciBibG9ncyAocGluZ2JhY2tzIGFuZCB0cmFja2JhY2tzKSBvbiBuZXcgYXJ0aWNsZXMuICovXG4gIGRpc2N1c3Npb25TZXR0aW5nc0RlZmF1bHRQaW5nU3RhdHVzPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIGRhdGUgZm9ybWF0IGZvciBhbGwgZGF0ZSBzdHJpbmdzLiAqL1xuICBnZW5lcmFsU2V0dGluZ3NEYXRlRm9ybWF0PzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaXRlIHRhZ2xpbmUuICovXG4gIGdlbmVyYWxTZXR0aW5nc0Rlc2NyaXB0aW9uPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGlzIGFkZHJlc3MgaXMgdXNlZCBmb3IgYWRtaW4gcHVycG9zZXMsIGxpa2UgbmV3IHVzZXIgbm90aWZpY2F0aW9uLiAqL1xuICBnZW5lcmFsU2V0dGluZ3NFbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogV29yZFByZXNzIGxvY2FsZSBjb2RlLiAqL1xuICBnZW5lcmFsU2V0dGluZ3NMYW5ndWFnZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQSBkYXkgbnVtYmVyIG9mIHRoZSB3ZWVrIHRoYXQgdGhlIHdlZWsgc2hvdWxkIHN0YXJ0IG9uLiAqL1xuICBnZW5lcmFsU2V0dGluZ3NTdGFydE9mV2Vlaz86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQSB0aW1lIGZvcm1hdCBmb3IgYWxsIHRpbWUgc3RyaW5ncy4gKi9cbiAgZ2VuZXJhbFNldHRpbmdzVGltZUZvcm1hdD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQSBjaXR5IGluIHRoZSBzYW1lIHRpbWV6b25lIGFzIHlvdS4gKi9cbiAgZ2VuZXJhbFNldHRpbmdzVGltZXpvbmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNpdGUgdGl0bGUuICovXG4gIGdlbmVyYWxTZXR0aW5nc1RpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTaXRlIFVSTC4gKi9cbiAgZ2VuZXJhbFNldHRpbmdzVXJsPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHBhZ2UgdGhhdCBzaG91bGQgZGlzcGxheSB0aGUgbGF0ZXN0IHBvc3RzICovXG4gIHJlYWRpbmdTZXR0aW5nc1BhZ2VGb3JQb3N0cz86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSBwYWdlIHRoYXQgc2hvdWxkIGJlIGRpc3BsYXllZCBvbiB0aGUgZnJvbnQgcGFnZSAqL1xuICByZWFkaW5nU2V0dGluZ3NQYWdlT25Gcm9udD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogQmxvZyBwYWdlcyBzaG93IGF0IG1vc3QuICovXG4gIHJlYWRpbmdTZXR0aW5nc1Bvc3RzUGVyUGFnZT86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogV2hhdCB0byBzaG93IG9uIHRoZSBmcm9udCBwYWdlICovXG4gIHJlYWRpbmdTZXR0aW5nc1Nob3dPbkZyb250PzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBEZWZhdWx0IHBvc3QgY2F0ZWdvcnkuICovXG4gIHdyaXRpbmdTZXR0aW5nc0RlZmF1bHRDYXRlZ29yeT86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRGVmYXVsdCBwb3N0IGZvcm1hdC4gKi9cbiAgd3JpdGluZ1NldHRpbmdzRGVmYXVsdFBvc3RGb3JtYXQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbnZlcnQgZW1vdGljb25zIGxpa2UgOi0pIGFuZCA6LVAgdG8gZ3JhcGhpY3Mgb24gZGlzcGxheS4gKi9cbiAgd3JpdGluZ1NldHRpbmdzVXNlU21pbGllcz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbn07XG5cbi8qKiBUaGUgcGF5bG9hZCBmb3IgdGhlIHVwZGF0ZVNldHRpbmdzIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlU2V0dGluZ3NQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ1VwZGF0ZVNldHRpbmdzUGF5bG9hZCc7XG4gIC8qKiBVcGRhdGUgYWxsIHNldHRpbmdzLiAqL1xuICBhbGxTZXR0aW5ncz86IE1heWJlPFNldHRpbmdzPjtcbiAgLyoqIElmIGEgJiMwMzk7Y2xpZW50TXV0YXRpb25JZCYjMDM5OyBpbnB1dCBpcyBwcm92aWRlZCB0byB0aGUgbXV0YXRpb24sIGl0IHdpbGwgYmUgcmV0dXJuZWQgYXMgb3V0cHV0IG9uIHRoZSBtdXRhdGlvbi4gVGhpcyBJRCBjYW4gYmUgdXNlZCBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBVcGRhdGUgdGhlIERpc2N1c3Npb25TZXR0aW5ncyBzZXR0aW5nLiAqL1xuICBkaXNjdXNzaW9uU2V0dGluZ3M/OiBNYXliZTxEaXNjdXNzaW9uU2V0dGluZ3M+O1xuICAvKiogVXBkYXRlIHRoZSBHZW5lcmFsU2V0dGluZ3Mgc2V0dGluZy4gKi9cbiAgZ2VuZXJhbFNldHRpbmdzPzogTWF5YmU8R2VuZXJhbFNldHRpbmdzPjtcbiAgLyoqIFVwZGF0ZSB0aGUgUmVhZGluZ1NldHRpbmdzIHNldHRpbmcuICovXG4gIHJlYWRpbmdTZXR0aW5ncz86IE1heWJlPFJlYWRpbmdTZXR0aW5ncz47XG4gIC8qKiBVcGRhdGUgdGhlIFdyaXRpbmdTZXR0aW5ncyBzZXR0aW5nLiAqL1xuICB3cml0aW5nU2V0dGluZ3M/OiBNYXliZTxXcml0aW5nU2V0dGluZ3M+O1xufTtcblxuLyoqIElucHV0IGZvciB0aGUgdXBkYXRlVGFnIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlVGFnSW5wdXQgPSB7XG4gIC8qKiBUaGUgc2x1ZyB0aGF0IHRoZSBwb3N0X3RhZyB3aWxsIGJlIGFuIGFsaWFzIG9mICovXG4gIGFsaWFzT2Y/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgcG9zdF90YWcgb2JqZWN0ICovXG4gIGRlc2NyaXB0aW9uPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgSUQgb2YgdGhlIHRhZyBvYmplY3QgdG8gdXBkYXRlICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICAvKiogVGhlIG5hbWUgb2YgdGhlIHBvc3RfdGFnIG9iamVjdCB0byBtdXRhdGUgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSWYgdGhpcyBhcmd1bWVudCBleGlzdHMgdGhlbiB0aGUgc2x1ZyB3aWxsIGJlIGNoZWNrZWQgdG8gc2VlIGlmIGl0IGlzIG5vdCBhbiBleGlzdGluZyB2YWxpZCB0ZXJtLiBJZiB0aGF0IGNoZWNrIHN1Y2NlZWRzIChpdCBpcyBub3QgYSB2YWxpZCB0ZXJtKSwgdGhlbiBpdCBpcyBhZGRlZCBhbmQgdGhlIHRlcm0gaWQgaXMgZ2l2ZW4uIElmIGl0IGZhaWxzLCB0aGVuIGEgY2hlY2sgaXMgbWFkZSB0byB3aGV0aGVyIHRoZSB0YXhvbm9teSBpcyBoaWVyYXJjaGljYWwgYW5kIHRoZSBwYXJlbnQgYXJndW1lbnQgaXMgbm90IGVtcHR5LiBJZiB0aGUgc2Vjb25kIGNoZWNrIHN1Y2NlZWRzLCB0aGUgdGVybSB3aWxsIGJlIGluc2VydGVkIGFuZCB0aGUgdGVybSBpZCB3aWxsIGJlIGdpdmVuLiBJZiB0aGUgc2x1ZyBhcmd1bWVudCBpcyBlbXB0eSwgdGhlbiBpdCB3aWxsIGJlIGNhbGN1bGF0ZWQgZnJvbSB0aGUgdGVybSBuYW1lLiAqL1xuICBzbHVnPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogVGhlIHBheWxvYWQgZm9yIHRoZSB1cGRhdGVUYWcgbXV0YXRpb24uICovXG5leHBvcnQgdHlwZSBVcGRhdGVUYWdQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ1VwZGF0ZVRhZ1BheWxvYWQnO1xuICAvKiogSWYgYSAmIzAzOTtjbGllbnRNdXRhdGlvbklkJiMwMzk7IGlucHV0IGlzIHByb3ZpZGVkIHRvIHRoZSBtdXRhdGlvbiwgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBvdXRwdXQgb24gdGhlIG11dGF0aW9uLiBUaGlzIElEIGNhbiBiZSB1c2VkIGJ5IHRoZSBjbGllbnQgdG8gdHJhY2sgdGhlIHByb2dyZXNzIG9mIG11dGF0aW9ucyBhbmQgY2F0Y2ggcG9zc2libGUgZHVwbGljYXRlIG11dGF0aW9uIHN1Ym1pc3Npb25zLiAqL1xuICBjbGllbnRNdXRhdGlvbklkPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjcmVhdGVkIHBvc3RfdGFnICovXG4gIHRhZz86IE1heWJlPFRhZz47XG59O1xuXG4vKiogSW5wdXQgZm9yIHRoZSB1cGRhdGVVc2VyIG11dGF0aW9uLiAqL1xuZXhwb3J0IHR5cGUgVXBkYXRlVXNlcklucHV0ID0ge1xuICAvKiogVXNlcidzIEFPTCBJTSBhY2NvdW50LiAqL1xuICBhaW0/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoaXMgaXMgYW4gSUQgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIGEgbXV0YXRpb24gYnkgdGhlIGNsaWVudCB0byB0cmFjayB0aGUgcHJvZ3Jlc3Mgb2YgbXV0YXRpb25zIGFuZCBjYXRjaCBwb3NzaWJsZSBkdXBsaWNhdGUgbXV0YXRpb24gc3VibWlzc2lvbnMuICovXG4gIGNsaWVudE11dGF0aW9uSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgY29udGVudCBhYm91dCB0aGUgdXNlci4gKi9cbiAgZGVzY3JpcHRpb24/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgd2lsbCBiZSBzaG93biBvbiB0aGUgc2l0ZS4gRGVmYXVsdHMgdG8gdXNlcidzIHVzZXJuYW1lLiBJdCBpcyBsaWtlbHkgdGhhdCB5b3Ugd2lsbCB3YW50IHRvIGNoYW5nZSB0aGlzLCBmb3IgYm90aCBhcHBlYXJhbmNlIGFuZCBzZWN1cml0eSB0aHJvdWdoIG9ic2N1cml0eSAodGhhdCBpcyBpZiB5b3UgZG9udCB1c2UgYW5kIGRlbGV0ZSB0aGUgZGVmYXVsdCBhZG1pbiB1c2VyKS4gKi9cbiAgZGlzcGxheU5hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLiAqL1xuICBlbWFpbD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogXHRUaGUgdXNlcidzIGZpcnN0IG5hbWUuICovXG4gIGZpcnN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIElEIG9mIHRoZSB1c2VyICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICAvKiogVXNlcidzIEphYmJlciBhY2NvdW50LiAqL1xuICBqYWJiZXI/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFRoZSB1c2VyJ3MgbGFzdCBuYW1lLiAqL1xuICBsYXN0TmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIGxvY2FsZS4gKi9cbiAgbG9jYWxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyB0aGF0IGNvbnRhaW5zIGEgVVJMLWZyaWVuZGx5IG5hbWUgZm9yIHRoZSB1c2VyLiBUaGUgZGVmYXVsdCBpcyB0aGUgdXNlcidzIHVzZXJuYW1lLiAqL1xuICBuaWNlbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIHVzZXIncyBuaWNrbmFtZSwgZGVmYXVsdHMgdG8gdGhlIHVzZXIncyB1c2VybmFtZS4gKi9cbiAgbmlja25hbWU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHBsYWluIHRleHQgcGFzc3dvcmQgZm9yIHRoZSB1c2VyLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVGhlIGRhdGUgdGhlIHVzZXIgcmVnaXN0ZXJlZC4gRm9ybWF0IGlzIFktbS1kIEg6aTpzLiAqL1xuICByZWdpc3RlcmVkPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBIHN0cmluZyBmb3Igd2hldGhlciB0byBlbmFibGUgdGhlIHJpY2ggZWRpdG9yIG9yIG5vdC4gRmFsc2UgaWYgbm90IGVtcHR5LiAqL1xuICByaWNoRWRpdGluZz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQW4gYXJyYXkgb2Ygcm9sZXMgdG8gYmUgYXNzaWduZWQgdG8gdGhlIHVzZXIuICovXG4gIHJvbGVzPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogQSBzdHJpbmcgY29udGFpbmluZyB0aGUgdXNlcidzIFVSTCBmb3IgdGhlIHVzZXIncyB3ZWIgc2l0ZS4gKi9cbiAgd2Vic2l0ZVVybD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogVXNlcidzIFlhaG9vIElNIGFjY291bnQuICovXG4gIHlpbT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIFRoZSBwYXlsb2FkIGZvciB0aGUgdXBkYXRlVXNlciBtdXRhdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFVwZGF0ZVVzZXJQYXlsb2FkID0ge1xuICBfX3R5cGVuYW1lPzogJ1VwZGF0ZVVzZXJQYXlsb2FkJztcbiAgLyoqIElmIGEgJiMwMzk7Y2xpZW50TXV0YXRpb25JZCYjMDM5OyBpbnB1dCBpcyBwcm92aWRlZCB0byB0aGUgbXV0YXRpb24sIGl0IHdpbGwgYmUgcmV0dXJuZWQgYXMgb3V0cHV0IG9uIHRoZSBtdXRhdGlvbi4gVGhpcyBJRCBjYW4gYmUgdXNlZCBieSB0aGUgY2xpZW50IHRvIHRyYWNrIHRoZSBwcm9ncmVzcyBvZiBtdXRhdGlvbnMgYW5kIGNhdGNoIHBvc3NpYmxlIGR1cGxpY2F0ZSBtdXRhdGlvbiBzdWJtaXNzaW9ucy4gKi9cbiAgY2xpZW50TXV0YXRpb25JZD86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgVXNlciBvYmplY3QgbXV0YXRpb24gdHlwZS4gKi9cbiAgdXNlcj86IE1heWJlPFVzZXI+O1xufTtcblxuLyoqIEEgVXNlciBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIFVzZXIgPSBDb21tZW50ZXIgJiBEYXRhYmFzZUlkZW50aWZpZXIgJiBOb2RlICYgVW5pZm9ybVJlc291cmNlSWRlbnRpZmlhYmxlICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXInO1xuICAvKiogQXZhdGFyIG9iamVjdCBmb3IgdXNlci4gVGhlIGF2YXRhciBvYmplY3QgY2FuIGJlIHJldHJpZXZlZCBpbiBkaWZmZXJlbnQgc2l6ZXMgYnkgc3BlY2lmeWluZyB0aGUgc2l6ZSBhcmd1bWVudC4gKi9cbiAgYXZhdGFyPzogTWF5YmU8QXZhdGFyPjtcbiAgLyoqIFVzZXIgbWV0YWRhdGEgb3B0aW9uIG5hbWUuIFVzdWFsbHkgaXQgd2lsbCBiZSAmcXVvdDt3cF9jYXBhYmlsaXRpZXMmcXVvdDsuICovXG4gIGNhcEtleT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBBIGxpc3Qgb2YgY2FwYWJpbGl0aWVzIChwZXJtaXNzaW9ucykgZ3JhbnRlZCB0byB0aGUgdXNlciAqL1xuICBjYXBhYmlsaXRpZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIENvbW1lbnQgdHlwZSAqL1xuICBjb21tZW50cz86IE1heWJlPFVzZXJUb0NvbW1lbnRDb25uZWN0aW9uPjtcbiAgLyoqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdXNpbmcgTmV4dC5qcyBwYWdlcyAqL1xuICBjb25kaXRpb25hbFRhZ3M/OiBNYXliZTxDb25kaXRpb25hbFRhZ3M+O1xuICAvKiogSWRlbnRpZmllcyB0aGUgcHJpbWFyeSBrZXkgZnJvbSB0aGUgZGF0YWJhc2UuICovXG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXTtcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHRoZSB1c2VyLiAqL1xuICBkZXNjcmlwdGlvbj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBFbWFpbCBhZGRyZXNzIG9mIHRoZSB1c2VyLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gdGhlIFdQX1VzZXItJmd0O3VzZXJfZW1haWwgcHJvcGVydHkuICovXG4gIGVtYWlsPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuICBlbnF1ZXVlZFNjcmlwdHM/OiBNYXliZTxVc2VyVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBVc2VyIHR5cGUgYW5kIHRoZSBFbnF1ZXVlZFN0eWxlc2hlZXQgdHlwZSAqL1xuICBlbnF1ZXVlZFN0eWxlc2hlZXRzPzogTWF5YmU8VXNlclRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbj47XG4gIC8qKiBBIGNvbXBsZXRlIGxpc3Qgb2YgY2FwYWJpbGl0aWVzIGluY2x1ZGluZyBjYXBhYmlsaXRpZXMgaW5oZXJpdGVkIGZyb20gYSByb2xlLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGFycmF5IGtleXMgb2YgV1BfVXNlci0mZ3Q7YWxsY2Fwcy4gKi9cbiAgZXh0cmFDYXBhYmlsaXRpZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBGaXJzdCBuYW1lIG9mIHRoZSB1c2VyLiBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gdGhlIFdQX1VzZXItJmd0O3VzZXJfZmlyc3RfbmFtZSBwcm9wZXJ0eS4gKi9cbiAgZmlyc3ROYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHVzZXIgb2JqZWN0LiAqL1xuICBpZDogU2NhbGFyc1snSUQnXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgQ29tbWVudCAqL1xuICBpc0NvbW1lbnQ6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIGlzIGEgQ29udGVudCBOb2RlICovXG4gIGlzQ29udGVudE5vZGU6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGV0aGVyIHRoZSBub2RlIHJlcHJlc2VudHMgdGhlIGZyb250IHBhZ2UuICovXG4gIGlzRnJvbnRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hldGhlciAgdGhlIG5vZGUgcmVwcmVzZW50cyB0aGUgYmxvZyBwYWdlLiAqL1xuICBpc1Bvc3RzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogV2hldGhlciB0aGUgbm9kZSBpcyBhIFRlcm0gKi9cbiAgaXNUZXJtTm9kZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIExhc3QgbmFtZSBvZiB0aGUgdXNlci4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBXUF9Vc2VyLSZndDt1c2VyX2xhc3RfbmFtZSBwcm9wZXJ0eS4gKi9cbiAgbGFzdE5hbWU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHByZWZlcnJlZCBsYW5ndWFnZSBsb2NhbGUgc2V0IGZvciB0aGUgdXNlci4gVmFsdWUgZGVyaXZlZCBmcm9tIGdldF91c2VyX2xvY2FsZSgpLiAqL1xuICBsb2NhbGU/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBVc2VyIHR5cGUgYW5kIHRoZSBtZWRpYUl0ZW0gdHlwZSAqL1xuICBtZWRpYUl0ZW1zPzogTWF5YmU8VXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvbj47XG4gIC8qKiBEaXNwbGF5IG5hbWUgb2YgdGhlIHVzZXIuIFRoaXMgaXMgZXF1aXZhbGVudCB0byB0aGUgV1BfVXNlci0mZ3Q7ZGlzcGxheV9uYW1lIHByb3BlcnR5LiAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBuaWNlbmFtZSBmb3IgdGhlIHVzZXIuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9Vc2VyLSZndDt1c2VyX25pY2VuYW1lICovXG4gIG5pY2VuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIE5pY2tuYW1lIG9mIHRoZSB1c2VyLiAqL1xuICBuaWNrbmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIHBhZ2UgdHlwZSAqL1xuICBwYWdlcz86IE1heWJlPFVzZXJUb1BhZ2VDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgcG9zdCB0eXBlICovXG4gIHBvc3RzPzogTWF5YmU8VXNlclRvUG9zdENvbm5lY3Rpb24+O1xuICAvKiogVGhlIGRhdGUgdGhlIHVzZXIgcmVnaXN0ZXJlZCBvciB3YXMgY3JlYXRlZC4gVGhlIGZpZWxkIGZvbGxvd3MgYSBmdWxsIElTTzg2MDEgZGF0ZSBzdHJpbmcgZm9ybWF0LiAqL1xuICByZWdpc3RlcmVkRGF0ZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgYW5kIFJldmlzaW9ucyBhdXRob3JlZCBieSB0aGUgdXNlciAqL1xuICByZXZpc2lvbnM/OiBNYXliZTxVc2VyVG9SZXZpc2lvbnNDb25uZWN0aW9uPjtcbiAgLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgVXNlclJvbGUgdHlwZSAqL1xuICByb2xlcz86IE1heWJlPFVzZXJUb1VzZXJSb2xlQ29ubmVjdGlvbj47XG4gIC8qKiBXaGV0aGVyIHRoZSBUb29sYmFyIHNob3VsZCBiZSBkaXNwbGF5ZWQgd2hlbiB0aGUgdXNlciBpcyB2aWV3aW5nIHRoZSBzaXRlLiAqL1xuICBzaG91bGRTaG93QWRtaW5Ub29sYmFyPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG4gIHNob3VsZFNob3dGYXVzdFRvb2xiYXI/OiBNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBzbHVnIGZvciB0aGUgdXNlci4gVGhpcyBmaWVsZCBpcyBlcXVpdmFsZW50IHRvIFdQX1VzZXItJmd0O3VzZXJfbmljZW5hbWUgKi9cbiAgc2x1Zz86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIHRlbXBsYXRlcz86IE1heWJlPEFycmF5PE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT4+PjtcbiAgLyoqIFRoZSB1bmlxdWUgcmVzb3VyY2UgaWRlbnRpZmllciBwYXRoICovXG4gIHVyaT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBBIHdlYnNpdGUgdXJsIHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSB1c2VyLiAqL1xuICB1cmw/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKipcbiAgICogVGhlIElkIG9mIHRoZSB1c2VyLiBFcXVpdmFsZW50IHRvIFdQX1VzZXItJmd0O0lEXG4gICAqIEBkZXByZWNhdGVkIERlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIGRhdGFiYXNlSWQgZmllbGRcbiAgICovXG4gIHVzZXJJZD86IE1heWJlPFNjYWxhcnNbJ0ludCddWydvdXRwdXQnXT47XG4gIC8qKiBVc2VybmFtZSBmb3IgdGhlIHVzZXIuIFRoaXMgZmllbGQgaXMgZXF1aXZhbGVudCB0byBXUF9Vc2VyLSZndDt1c2VyX2xvZ2luLiAqL1xuICB1c2VybmFtZT86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG5cbi8qKiBBIFVzZXIgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBVc2VyQXZhdGFyQXJncyA9IHtcbiAgZm9yY2VEZWZhdWx0PzogSW5wdXRNYXliZTxTY2FsYXJzWydCb29sZWFuJ11bJ2lucHV0J10+O1xuICByYXRpbmc/OiBJbnB1dE1heWJlPEF2YXRhclJhdGluZ0VudW0+O1xuICBzaXplPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBBIFVzZXIgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBVc2VyQ29tbWVudHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8VXNlclRvQ29tbWVudENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogQSBVc2VyIG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgVXNlckVucXVldWVkU2NyaXB0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBBIFVzZXIgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBVc2VyRW5xdWV1ZWRTdHlsZXNoZWV0c0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG5cbi8qKiBBIFVzZXIgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBVc2VyTWVkaWFJdGVtc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxVc2VyVG9NZWRpYUl0ZW1Db25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIEEgVXNlciBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIFVzZXJQYWdlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxVc2VyVG9QYWdlQ29ubmVjdGlvbldoZXJlQXJncz47XG59O1xuXG5cbi8qKiBBIFVzZXIgb2JqZWN0ICovXG5leHBvcnQgdHlwZSBVc2VyUG9zdHNBcmdzID0ge1xuICBhZnRlcj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBiZWZvcmU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgZmlyc3Q/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgbGFzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICB3aGVyZT86IElucHV0TWF5YmU8VXNlclRvUG9zdENvbm5lY3Rpb25XaGVyZUFyZ3M+O1xufTtcblxuXG4vKiogQSBVc2VyIG9iamVjdCAqL1xuZXhwb3J0IHR5cGUgVXNlclJldmlzaW9uc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIHdoZXJlPzogSW5wdXRNYXliZTxVc2VyVG9SZXZpc2lvbnNDb25uZWN0aW9uV2hlcmVBcmdzPjtcbn07XG5cblxuLyoqIEEgVXNlciBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIFVzZXJSb2xlc0FyZ3MgPSB7XG4gIGFmdGVyPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIGJlZm9yZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICBmaXJzdD86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICBsYXN0PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiB0byBVc2VyIE5vZGVzICovXG5leHBvcnQgdHlwZSBVc2VyQ29ubmVjdGlvbiA9IHtcbiAgLyoqIEEgbGlzdCBvZiBlZGdlcyAocmVsYXRpb25hbCBjb250ZXh0KSBiZXR3ZWVuIFJvb3RRdWVyeSBhbmQgY29ubmVjdGVkIFVzZXIgTm9kZXMgKi9cbiAgZWRnZXM6IEFycmF5PFVzZXJDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIFVzZXIgTm9kZXMgKi9cbiAgbm9kZXM6IEFycmF5PFVzZXI+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBVc2VyQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIFVzZXIgKi9cbmV4cG9ydCB0eXBlIFVzZXJDb25uZWN0aW9uRWRnZSA9IHtcbiAgLyoqIE9wYXF1ZSByZWZlcmVuY2UgdG8gdGhlIG5vZGVzIHBvc2l0aW9uIGluIHRoZSBjb25uZWN0aW9uLiBWYWx1ZSBjYW4gYmUgdXNlZCB3aXRoIHBhZ2luYXRpb24gYXJncy4gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBjb25uZWN0ZWQgVXNlciBOb2RlICovXG4gIG5vZGU6IFVzZXI7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSBjb25uZWN0ZWQgVXNlckNvbm5lY3Rpb25FZGdlICovXG5leHBvcnQgdHlwZSBVc2VyQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIFRoZSBUeXBlIG9mIElkZW50aWZpZXIgdXNlZCB0byBmZXRjaCBhIHNpbmdsZSBVc2VyIG5vZGUuIFRvIGJlIHVzZWQgYWxvbmcgd2l0aCB0aGUgXCJpZFwiIGZpZWxkLiBEZWZhdWx0IGlzIFwiSURcIi4gKi9cbmV4cG9ydCBlbnVtIFVzZXJOb2RlSWRUeXBlRW51bSB7XG4gIC8qKiBUaGUgRGF0YWJhc2UgSUQgZm9yIHRoZSBub2RlICovXG4gIERhdGFiYXNlSWQgPSAnREFUQUJBU0VfSUQnLFxuICAvKiogVGhlIEVtYWlsIG9mIHRoZSBVc2VyICovXG4gIEVtYWlsID0gJ0VNQUlMJyxcbiAgLyoqIFRoZSBoYXNoZWQgR2xvYmFsIElEICovXG4gIElkID0gJ0lEJyxcbiAgLyoqIFRoZSBzbHVnIG9mIHRoZSBVc2VyICovXG4gIFNsdWcgPSAnU0xVRycsXG4gIC8qKiBUaGUgVVJJIGZvciB0aGUgbm9kZSAqL1xuICBVcmkgPSAnVVJJJyxcbiAgLyoqIFRoZSB1c2VybmFtZSB0aGUgVXNlciB1c2VzIHRvIGxvZ2luIHdpdGggKi9cbiAgVXNlcm5hbWUgPSAnVVNFUk5BTUUnXG59XG5cbi8qKiBBIHVzZXIgcm9sZSBvYmplY3QgKi9cbmV4cG9ydCB0eXBlIFVzZXJSb2xlID0gTm9kZSAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyUm9sZSc7XG4gIC8qKiBUaGUgY2FwYWJpbGl0aWVzIHRoYXQgYmVsb25nIHRvIHRoaXMgcm9sZSAqL1xuICBjYXBhYmlsaXRpZXM/OiBNYXliZTxBcnJheTxNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+Pj47XG4gIC8qKiBUaGUgZGlzcGxheSBuYW1lIG9mIHRoZSByb2xlICovXG4gIGRpc3BsYXlOYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHVzZXIgcm9sZSBvYmplY3QuICovXG4gIGlkOiBTY2FsYXJzWydJRCddWydvdXRwdXQnXTtcbiAgLyoqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyByZXN0cmljdGVkIGZyb20gdGhlIGN1cnJlbnQgdmlld2VyICovXG4gIGlzUmVzdHJpY3RlZD86IE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIHJlZ2lzdGVyZWQgbmFtZSBvZiB0aGUgcm9sZSAqL1xuICBuYW1lPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIHRvIFVzZXJSb2xlIE5vZGVzICovXG5leHBvcnQgdHlwZSBVc2VyUm9sZUNvbm5lY3Rpb24gPSB7XG4gIC8qKiBBIGxpc3Qgb2YgZWRnZXMgKHJlbGF0aW9uYWwgY29udGV4dCkgYmV0d2VlbiBSb290UXVlcnkgYW5kIGNvbm5lY3RlZCBVc2VyUm9sZSBOb2RlcyAqL1xuICBlZGdlczogQXJyYXk8VXNlclJvbGVDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBBIGxpc3Qgb2YgY29ubmVjdGVkIFVzZXJSb2xlIE5vZGVzICovXG4gIG5vZGVzOiBBcnJheTxVc2VyUm9sZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFVzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEVkZ2UgYmV0d2VlbiBhIE5vZGUgYW5kIGEgY29ubmVjdGVkIFVzZXJSb2xlICovXG5leHBvcnQgdHlwZSBVc2VyUm9sZUNvbm5lY3Rpb25FZGdlID0ge1xuICAvKiogT3BhcXVlIHJlZmVyZW5jZSB0byB0aGUgbm9kZXMgcG9zaXRpb24gaW4gdGhlIGNvbm5lY3Rpb24uIFZhbHVlIGNhbiBiZSB1c2VkIHdpdGggcGFnaW5hdGlvbiBhcmdzLiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGNvbm5lY3RlZCBVc2VyUm9sZSBOb2RlICovXG4gIG5vZGU6IFVzZXJSb2xlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgY29ubmVjdGVkIFVzZXJSb2xlQ29ubmVjdGlvbkVkZ2UgKi9cbmV4cG9ydCB0eXBlIFVzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvID0ge1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIE5hbWVzIG9mIGF2YWlsYWJsZSB1c2VyIHJvbGVzICovXG5leHBvcnQgZW51bSBVc2VyUm9sZUVudW0ge1xuICAvKiogVXNlciByb2xlIHdpdGggc3BlY2lmaWMgY2FwYWJpbGl0aWVzICovXG4gIEFkbWluaXN0cmF0b3IgPSAnQURNSU5JU1RSQVRPUicsXG4gIC8qKiBVc2VyIHJvbGUgd2l0aCBzcGVjaWZpYyBjYXBhYmlsaXRpZXMgKi9cbiAgQXV0aG9yID0gJ0FVVEhPUicsXG4gIC8qKiBVc2VyIHJvbGUgd2l0aCBzcGVjaWZpYyBjYXBhYmlsaXRpZXMgKi9cbiAgQ29udHJpYnV0b3IgPSAnQ09OVFJJQlVUT1InLFxuICAvKiogVXNlciByb2xlIHdpdGggc3BlY2lmaWMgY2FwYWJpbGl0aWVzICovXG4gIEVkaXRvciA9ICdFRElUT1InLFxuICAvKiogVXNlciByb2xlIHdpdGggc3BlY2lmaWMgY2FwYWJpbGl0aWVzICovXG4gIFN1YnNjcmliZXIgPSAnU1VCU0NSSUJFUidcbn1cblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgQ29tbWVudCB0eXBlICovXG5leHBvcnQgdHlwZSBVc2VyVG9Db21tZW50Q29ubmVjdGlvbiA9IENvbW1lbnRDb25uZWN0aW9uICYgQ29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9Db21tZW50Q29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFVzZXJUb0NvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFVzZXJUb0NvbW1lbnRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxDb21tZW50PjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVXNlclRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbztcbn07XG5cbi8qKiBBbiBlZGdlIGluIGEgY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVXNlclRvQ29tbWVudENvbm5lY3Rpb25FZGdlID0gQ29tbWVudENvbm5lY3Rpb25FZGdlICYgRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9Db21tZW50Q29ubmVjdGlvbkVkZ2UnO1xuICAvKiogQSBjdXJzb3IgZm9yIHVzZSBpbiBwYWdpbmF0aW9uICovXG4gIGN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBUaGUgaXRlbSBhdCB0aGUgZW5kIG9mIHRoZSBlZGdlICovXG4gIG5vZGU6IENvbW1lbnQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtVc2VyVG9Db21tZW50Q29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgVXNlclRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyA9IENvbW1lbnRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvQ29tbWVudENvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFVzZXJUb0NvbW1lbnRDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJUb0NvbW1lbnRDb25uZWN0aW9uV2hlcmVBcmdzID0ge1xuICAvKiogQ29tbWVudCBhdXRob3IgZW1haWwgYWRkcmVzcy4gKi9cbiAgYXV0aG9yRW1haWw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gaW5jbHVkZSBjb21tZW50cyBmb3IuICovXG4gIGF1dGhvckluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiBhdXRob3IgSURzIHRvIGV4Y2x1ZGUgY29tbWVudHMgZm9yLiAqL1xuICBhdXRob3JOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29tbWVudCBhdXRob3IgVVJMLiAqL1xuICBhdXRob3JVcmw/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbW1lbnQgSURzIHRvIGluY2x1ZGUuICovXG4gIGNvbW1lbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgSURzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiBzdGF0dXMuICovXG4gIGNvbW1lbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBvZiBhIGdpdmVuIHR5cGUuICovXG4gIGNvbW1lbnRUeXBlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBJbmNsdWRlIGNvbW1lbnRzIGZyb20gYSBnaXZlbiBhcnJheSBvZiBjb21tZW50IHR5cGVzLiAqL1xuICBjb21tZW50VHlwZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogRXhjbHVkZSBjb21tZW50cyBmcm9tIGEgZ2l2ZW4gYXJyYXkgb2YgY29tbWVudCB0eXBlcy4gKi9cbiAgY29tbWVudFR5cGVOb3RJbj86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogQ29udGVudCBvYmplY3QgYXV0aG9yIElEIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIGNvbnRlbnRBdXRob3I/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGF1dGhvciBJRHMgKm5vdCogdG8gcmV0cmlldmUgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50QXV0aG9yTm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIExpbWl0IHJlc3VsdHMgdG8gdGhvc2UgYWZmaWxpYXRlZCB3aXRoIGEgZ2l2ZW4gY29udGVudCBvYmplY3QgSUQuICovXG4gIGNvbnRlbnRJZD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjb250ZW50IG9iamVjdCBJRHMgdG8gaW5jbHVkZSBhZmZpbGlhdGVkIGNvbW1lbnRzIGZvci4gKi9cbiAgY29udGVudElkSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IElEcyB0byBleGNsdWRlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiAqL1xuICBjb250ZW50SWROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQ29udGVudCBvYmplY3QgbmFtZSAoaS5lLiBzbHVnICkgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnROYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBDb250ZW50IE9iamVjdCBwYXJlbnQgSUQgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuICovXG4gIGNvbnRlbnRQYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIGNvbnRlbnQgb2JqZWN0IHN0YXR1c2VzIHRvIHJldHJpZXZlIGFmZmlsaWF0ZWQgY29tbWVudHMgZm9yLiBQYXNzICdhbnknIHRvIG1hdGNoIGFueSB2YWx1ZS4gKi9cbiAgY29udGVudFN0YXR1cz86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIENvbnRlbnQgb2JqZWN0IHR5cGUgb3IgYXJyYXkgb2YgdHlwZXMgdG8gcmV0cmlldmUgYWZmaWxpYXRlZCBjb21tZW50cyBmb3IuIFBhc3MgJ2FueScgdG8gbWF0Y2ggYW55IHZhbHVlLiAqL1xuICBjb250ZW50VHlwZT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxDb250ZW50VHlwZUVudW0+Pj47XG4gIC8qKiBBcnJheSBvZiBJRHMgb3IgZW1haWwgYWRkcmVzc2VzIG9mIHVzZXJzIHdob3NlIHVuYXBwcm92ZWQgY29tbWVudHMgd2lsbCBiZSByZXR1cm5lZCBieSB0aGUgcXVlcnkgcmVnYXJkbGVzcyBvZiAkc3RhdHVzLiBEZWZhdWx0IGVtcHR5ICovXG4gIGluY2x1ZGVVbmFwcHJvdmVkPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBLYXJtYSBzY29yZSB0byByZXRyaWV2ZSBtYXRjaGluZyBjb21tZW50cyBmb3IuICovXG4gIGthcm1hPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBUaGUgY2FyZGluYWxpdHkgb2YgdGhlIG9yZGVyIG9mIHRoZSBjb25uZWN0aW9uICovXG4gIG9yZGVyPzogSW5wdXRNYXliZTxPcmRlckVudW0+O1xuICAvKiogRmllbGQgdG8gb3JkZXIgdGhlIGNvbW1lbnRzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxDb21tZW50c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bT47XG4gIC8qKiBQYXJlbnQgSUQgb2YgY29tbWVudCB0byByZXRyaWV2ZSBjaGlsZHJlbiBvZi4gKi9cbiAgcGFyZW50PzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBwYXJlbnQgSURzIG9mIGNvbW1lbnRzIHRvIHJldHJpZXZlIGNoaWxkcmVuIGZvci4gKi9cbiAgcGFyZW50SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHBhcmVudCBJRHMgb2YgY29tbWVudHMgKm5vdCogdG8gcmV0cmlldmUgY2hpbGRyZW4gZm9yLiAqL1xuICBwYXJlbnROb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU2VhcmNoIHRlcm0ocykgdG8gcmV0cmlldmUgbWF0Y2hpbmcgY29tbWVudHMgZm9yLiAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIENvbW1lbnQgc3RhdHVzIHRvIGxpbWl0IHJlc3VsdHMgYnkuICovXG4gIHN0YXR1cz86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogSW5jbHVkZSBjb21tZW50cyBmb3IgYSBzcGVjaWZpYyB1c2VyIElELiAqL1xuICB1c2VySWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTY3JpcHQgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVXNlclRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIEVucXVldWVkU2NyaXB0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBVc2VyVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8VXNlclRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxFbnF1ZXVlZFNjcmlwdD47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFVzZXJUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBVc2VyVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIEVucXVldWVkU2NyaXB0Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogRW5xdWV1ZWRTY3JpcHQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtVc2VyVG9FbnF1ZXVlZFNjcmlwdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb0VucXVldWVkU2NyaXB0Q29ubmVjdGlvblBhZ2VJbmZvID0gRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvRW5xdWV1ZWRTY3JpcHRDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIENvbm5lY3Rpb24gYmV0d2VlbiB0aGUgVXNlciB0eXBlIGFuZCB0aGUgRW5xdWV1ZWRTdHlsZXNoZWV0IHR5cGUgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbiAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uJztcbiAgLyoqIEVkZ2VzIGZvciB0aGUgVXNlclRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxVc2VyVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uRWRnZT47XG4gIC8qKiBUaGUgbm9kZXMgb2YgdGhlIGNvbm5lY3Rpb24sIHdpdGhvdXQgdGhlIGVkZ2VzICovXG4gIG5vZGVzOiBBcnJheTxFbnF1ZXVlZFN0eWxlc2hlZXQ+O1xuICAvKiogSW5mb3JtYXRpb24gYWJvdXQgcGFnaW5hdGlvbiBpbiBhIGNvbm5lY3Rpb24uICovXG4gIHBhZ2VJbmZvOiBVc2VyVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlID0gRWRnZSAmIEVucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb0VucXVldWVkU3R5bGVzaGVldENvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBFbnF1ZXVlZFN0eWxlc2hlZXQ7XG59O1xuXG4vKiogUGFnZSBJbmZvIG9uIHRoZSAmcXVvdDtVc2VyVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uJnF1b3Q7ICovXG5leHBvcnQgdHlwZSBVc2VyVG9FbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gPSBFbnF1ZXVlZFN0eWxlc2hlZXRDb25uZWN0aW9uUGFnZUluZm8gJiBQYWdlSW5mbyAmIFdwUGFnZUluZm8gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvRW5xdWV1ZWRTdHlsZXNoZWV0Q29ubmVjdGlvblBhZ2VJbmZvJztcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgZW5kQ3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBmb3J3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc05leHRQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgYXJlIHRoZXJlIG1vcmUgaXRlbXM/ICovXG4gIGhhc1ByZXZpb3VzUGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIHN0YXJ0Q3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIG1lZGlhSXRlbSB0eXBlICovXG5leHBvcnQgdHlwZSBVc2VyVG9NZWRpYUl0ZW1Db25uZWN0aW9uID0gQ29ubmVjdGlvbiAmIE1lZGlhSXRlbUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFVzZXJUb01lZGlhSXRlbUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuICBlZGdlczogQXJyYXk8VXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8TWVkaWFJdGVtPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBVc2VyVG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBNZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9NZWRpYUl0ZW1Db25uZWN0aW9uRWRnZSc7XG4gIC8qKiBBIGN1cnNvciBmb3IgdXNlIGluIHBhZ2luYXRpb24gKi9cbiAgY3Vyc29yPzogTWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ291dHB1dCddPjtcbiAgLyoqIFRoZSBpdGVtIGF0IHRoZSBlbmQgb2YgdGhlIGVkZ2UgKi9cbiAgbm9kZTogTWVkaWFJdGVtO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7VXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgVXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvID0gTWVkaWFJdGVtQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb01lZGlhSXRlbUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFVzZXJUb01lZGlhSXRlbUNvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVXNlclRvTWVkaWFJdGVtQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIHBhZ2UgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVXNlclRvUGFnZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgUGFnZUNvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvUGFnZUNvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBVc2VyVG9QYWdlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxVc2VyVG9QYWdlQ29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8UGFnZT47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFVzZXJUb1BhZ2VDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1BhZ2VDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQYWdlQ29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvUGFnZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBQYWdlO1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7VXNlclRvUGFnZUNvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1BhZ2VDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1BhZ2VDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBVc2VyVG9QYWdlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBVc2VyVG9QYWdlQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBGaWx0ZXIgdGhlIGNvbm5lY3Rpb24gYmFzZWQgb24gZGF0ZXMgKi9cbiAgZGF0ZVF1ZXJ5PzogSW5wdXRNYXliZTxEYXRlUXVlcnlJbnB1dD47XG4gIC8qKiBUcnVlIGZvciBvYmplY3RzIHdpdGggcGFzc3dvcmRzOyBGYWxzZSBmb3Igb2JqZWN0cyB3aXRob3V0IHBhc3N3b3JkczsgbnVsbCBmb3IgYWxsIG9iamVjdHMgd2l0aCBvciB3aXRob3V0IHBhc3N3b3JkcyAqL1xuICBoYXNQYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbiAgLyoqIFNwZWNpZmljIGRhdGFiYXNlIElEIG9mIHRoZSBvYmplY3QgKi9cbiAgaWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0ludCddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIElEcyBmb3IgdGhlIG9iamVjdHMgdG8gcmV0cmlldmUgKi9cbiAgaW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEdldCBvYmplY3RzIHdpdGggYSBzcGVjaWZpYyBtaW1lVHlwZSBwcm9wZXJ0eSAqL1xuICBtaW1lVHlwZT86IElucHV0TWF5YmU8TWltZVR5cGVFbnVtPjtcbiAgLyoqIFNsdWcgLyBwb3N0X25hbWUgb2YgdGhlIG9iamVjdCAqL1xuICBuYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgdG8gcmV0cmlldmUuIFVzZSBzbHVncyAqL1xuICBuYW1lSW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IElEcyBOT1QgdG8gcmV0cmlldmUuIElmIHRoaXMgaXMgdXNlZCBpbiB0aGUgc2FtZSBxdWVyeSBhcyBcImluXCIsIGl0IHdpbGwgYmUgaWdub3JlZCAqL1xuICBub3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogV2hhdCBwYXJhbWV0ZXIgdG8gdXNlIHRvIG9yZGVyIHRoZSBvYmplY3RzIGJ5LiAqL1xuICBvcmRlcmJ5PzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RPYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dD4+PjtcbiAgLyoqIFVzZSBJRCB0byByZXR1cm4gb25seSBjaGlsZHJlbi4gVXNlIDAgdG8gcmV0dXJuIG9ubHkgdG9wLWxldmVsIGl0ZW1zICovXG4gIHBhcmVudD86IElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZ5IG9iamVjdHMgd2hvc2UgcGFyZW50IGlzIGluIGFuIGFycmF5ICovXG4gIHBhcmVudEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTcGVjaWZ5IHBvc3RzIHdob3NlIHBhcmVudCBpcyBub3QgaW4gYW4gYXJyYXkgKi9cbiAgcGFyZW50Tm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHBhc3N3b3JkLiAqL1xuICBwYXNzd29yZD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU2hvdyBQb3N0cyBiYXNlZCBvbiBhIGtleXdvcmQgc2VhcmNoICovXG4gIHNlYXJjaD86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogUmV0cmlldmUgcG9zdHMgd2hlcmUgcG9zdCBzdGF0dXMgaXMgaW4gYW4gYXJyYXkuICovXG4gIHN0YXRpPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPj4+O1xuICAvKiogU2hvdyBwb3N0cyB3aXRoIGEgc3BlY2lmaWMgc3RhdHVzLiAqL1xuICBzdGF0dXM/OiBJbnB1dE1heWJlPFBvc3RTdGF0dXNFbnVtPjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIHBvc3QgdHlwZSAqL1xuZXhwb3J0IHR5cGUgVXNlclRvUG9zdENvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgUG9zdENvbm5lY3Rpb24gJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvUG9zdENvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBVc2VyVG9Qb3N0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxVc2VyVG9Qb3N0Q29ubmVjdGlvbkVkZ2U+O1xuICAvKiogVGhlIG5vZGVzIG9mIHRoZSBjb25uZWN0aW9uLCB3aXRob3V0IHRoZSBlZGdlcyAqL1xuICBub2RlczogQXJyYXk8UG9zdD47XG4gIC8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbiAgcGFnZUluZm86IFVzZXJUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1Bvc3RDb25uZWN0aW9uRWRnZSA9IEVkZ2UgJiBQb3N0Q29ubmVjdGlvbkVkZ2UgJiB7XG4gIF9fdHlwZW5hbWU/OiAnVXNlclRvUG9zdENvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBQb3N0O1xufTtcblxuLyoqIFBhZ2UgSW5mbyBvbiB0aGUgJnF1b3Q7VXNlclRvUG9zdENvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFBvc3RDb25uZWN0aW9uUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1Bvc3RDb25uZWN0aW9uUGFnZUluZm8nO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBlbmRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGZvcndhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzTmV4dFBhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCBhcmUgdGhlcmUgbW9yZSBpdGVtcz8gKi9cbiAgaGFzUHJldmlvdXNQYWdlOiBTY2FsYXJzWydCb29sZWFuJ11bJ291dHB1dCddO1xuICAvKiogV2hlbiBwYWdpbmF0aW5nIGJhY2t3YXJkcywgdGhlIGN1cnNvciB0byBjb250aW51ZS4gKi9cbiAgc3RhcnRDdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xufTtcblxuLyoqIEFyZ3VtZW50cyBmb3IgZmlsdGVyaW5nIHRoZSBVc2VyVG9Qb3N0Q29ubmVjdGlvbiBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBVc2VyVG9Qb3N0Q29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSB1c2VyIHRoYXQncyBjb25uZWN0ZWQgYXMgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LiBVc2UgdGhlIHVzZXJJZCBmb3IgdGhlIGF1dGhvciBvYmplY3QuICovXG4gIGF1dGhvcj86IElucHV0TWF5YmU8U2NhbGFyc1snSW50J11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIGNvbm5lY3RlZCB0byBhdXRob3IocykgaW4gdGhlIGFycmF5IG9mIGF1dGhvcidzIHVzZXJJZHMgKi9cbiAgYXV0aG9ySW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEZpbmQgb2JqZWN0cyBjb25uZWN0ZWQgdG8gdGhlIGF1dGhvciBieSB0aGUgYXV0aG9yJ3MgbmljZW5hbWUgKi9cbiAgYXV0aG9yTmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogRmluZCBvYmplY3RzIE5PVCBjb25uZWN0ZWQgdG8gYXV0aG9yKHMpIGluIHRoZSBhcnJheSBvZiBhdXRob3IncyB1c2VySWRzICovXG4gIGF1dGhvck5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBDYXRlZ29yeSBJRCAqL1xuICBjYXRlZ29yeUlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogVXNlIENhdGVnb3J5IFNsdWcgKi9cbiAgY2F0ZWdvcnlOYW1lPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBjYXRlZ29yeSBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIGNhdGVnb3J5IE9SIGFub3RoZXIgKi9cbiAgY2F0ZWdvcnlOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGRhdGVzICovXG4gIGRhdGVRdWVyeT86IElucHV0TWF5YmU8RGF0ZVF1ZXJ5SW5wdXQ+O1xuICAvKiogVHJ1ZSBmb3Igb2JqZWN0cyB3aXRoIHBhc3N3b3JkczsgRmFsc2UgZm9yIG9iamVjdHMgd2l0aG91dCBwYXNzd29yZHM7IG51bGwgZm9yIGFsbCBvYmplY3RzIHdpdGggb3Igd2l0aG91dCBwYXNzd29yZHMgKi9cbiAgaGFzUGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZpYyBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBJRHMgZm9yIHRoZSBvYmplY3RzIHRvIHJldHJpZXZlICovXG4gIGluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBHZXQgb2JqZWN0cyB3aXRoIGEgc3BlY2lmaWMgbWltZVR5cGUgcHJvcGVydHkgKi9cbiAgbWltZVR5cGU/OiBJbnB1dE1heWJlPE1pbWVUeXBlRW51bT47XG4gIC8qKiBTbHVnIC8gcG9zdF9uYW1lIG9mIHRoZSBvYmplY3QgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHRvIHJldHJpZXZlLiBVc2Ugc2x1Z3MgKi9cbiAgbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBJRHMgTk9UIHRvIHJldHJpZXZlLiBJZiB0aGlzIGlzIHVzZWQgaW4gdGhlIHNhbWUgcXVlcnkgYXMgXCJpblwiLCBpdCB3aWxsIGJlIGlnbm9yZWQgKi9cbiAgbm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBVc2UgSUQgdG8gcmV0dXJuIG9ubHkgY2hpbGRyZW4uIFVzZSAwIHRvIHJldHVybiBvbmx5IHRvcC1sZXZlbCBpdGVtcyAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHdob3NlIHBhcmVudCBpcyBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBwb3N0cyB3aG9zZSBwYXJlbnQgaXMgbm90IGluIGFuIGFycmF5ICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBwYXNzd29yZC4gKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNob3cgUG9zdHMgYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaCAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHBvc3RzIHdoZXJlIHBvc3Qgc3RhdHVzIGlzIGluIGFuIGFycmF5LiAqL1xuICBzdGF0aT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT47XG4gIC8qKiBUYWcgU2x1ZyAqL1xuICB0YWc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFVzZSBUYWcgSUQgKi9cbiAgdGFnSWQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIEFycmF5IG9mIHRhZyBJRHMsIHVzZWQgdG8gZGlzcGxheSBvYmplY3RzIGZyb20gb25lIHRhZyBPUiBhbm90aGVyICovXG4gIHRhZ0luPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBBcnJheSBvZiB0YWcgSURzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgT1IgYW5vdGhlciAqL1xuICB0YWdOb3RJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogQXJyYXkgb2YgdGFnIHNsdWdzLCB1c2VkIHRvIGRpc3BsYXkgb2JqZWN0cyBmcm9tIG9uZSB0YWcgQU5EIGFub3RoZXIgKi9cbiAgdGFnU2x1Z0FuZD86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIEFycmF5IG9mIHRhZyBzbHVncywgdXNlZCB0byBpbmNsdWRlIG9iamVjdHMgaW4gQU5ZIHNwZWNpZmllZCB0YWdzICovXG4gIHRhZ1NsdWdJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFRpdGxlIG9mIHRoZSBvYmplY3QgKi9cbiAgdGl0bGU/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbn07XG5cbi8qKiBDb25uZWN0aW9uIGJldHdlZW4gdGhlIFVzZXIgdHlwZSBhbmQgdGhlIENvbnRlbnROb2RlIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgQ29udGVudE5vZGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb24nO1xuICAvKiogRWRnZXMgZm9yIHRoZSBVc2VyVG9SZXZpc2lvbnNDb25uZWN0aW9uIGNvbm5lY3Rpb24gKi9cbiAgZWRnZXM6IEFycmF5PFVzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PENvbnRlbnROb2RlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVXNlclRvUmV2aXNpb25zQ29ubmVjdGlvblBhZ2VJbmZvO1xufTtcblxuLyoqIEFuIGVkZ2UgaW4gYSBjb25uZWN0aW9uICovXG5leHBvcnQgdHlwZSBVc2VyVG9SZXZpc2lvbnNDb25uZWN0aW9uRWRnZSA9IENvbnRlbnROb2RlQ29ubmVjdGlvbkVkZ2UgJiBFZGdlICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBDb250ZW50Tm9kZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1VzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb24mcXVvdDsgKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb25QYWdlSW5mbyA9IENvbnRlbnROb2RlQ29ubmVjdGlvblBhZ2VJbmZvICYgUGFnZUluZm8gJiBXcFBhZ2VJbmZvICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogQXJndW1lbnRzIGZvciBmaWx0ZXJpbmcgdGhlIFVzZXJUb1JldmlzaW9uc0Nvbm5lY3Rpb24gY29ubmVjdGlvbiAqL1xuZXhwb3J0IHR5cGUgVXNlclRvUmV2aXNpb25zQ29ubmVjdGlvbldoZXJlQXJncyA9IHtcbiAgLyoqIFRoZSBUeXBlcyBvZiBjb250ZW50IHRvIGZpbHRlciAqL1xuICBjb250ZW50VHlwZXM/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8Q29udGVudFR5cGVFbnVtPj4+O1xuICAvKiogRmlsdGVyIHRoZSBjb25uZWN0aW9uIGJhc2VkIG9uIGRhdGVzICovXG4gIGRhdGVRdWVyeT86IElucHV0TWF5YmU8RGF0ZVF1ZXJ5SW5wdXQ+O1xuICAvKiogVHJ1ZSBmb3Igb2JqZWN0cyB3aXRoIHBhc3N3b3JkczsgRmFsc2UgZm9yIG9iamVjdHMgd2l0aG91dCBwYXNzd29yZHM7IG51bGwgZm9yIGFsbCBvYmplY3RzIHdpdGggb3Igd2l0aG91dCBwYXNzd29yZHMgKi9cbiAgaGFzUGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG4gIC8qKiBTcGVjaWZpYyBkYXRhYmFzZSBJRCBvZiB0aGUgb2JqZWN0ICovXG4gIGlkPzogSW5wdXRNYXliZTxTY2FsYXJzWydJbnQnXVsnaW5wdXQnXT47XG4gIC8qKiBBcnJheSBvZiBJRHMgZm9yIHRoZSBvYmplY3RzIHRvIHJldHJpZXZlICovXG4gIGluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBHZXQgb2JqZWN0cyB3aXRoIGEgc3BlY2lmaWMgbWltZVR5cGUgcHJvcGVydHkgKi9cbiAgbWltZVR5cGU/OiBJbnB1dE1heWJlPE1pbWVUeXBlRW51bT47XG4gIC8qKiBTbHVnIC8gcG9zdF9uYW1lIG9mIHRoZSBvYmplY3QgKi9cbiAgbmFtZT86IElucHV0TWF5YmU8U2NhbGFyc1snU3RyaW5nJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHRvIHJldHJpZXZlLiBVc2Ugc2x1Z3MgKi9cbiAgbmFtZUluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBJRHMgTk9UIHRvIHJldHJpZXZlLiBJZiB0aGlzIGlzIHVzZWQgaW4gdGhlIHNhbWUgcXVlcnkgYXMgXCJpblwiLCBpdCB3aWxsIGJlIGlnbm9yZWQgKi9cbiAgbm90SW4/OiBJbnB1dE1heWJlPEFycmF5PElucHV0TWF5YmU8U2NhbGFyc1snSUQnXVsnaW5wdXQnXT4+PjtcbiAgLyoqIFdoYXQgcGFyYW1ldGVyIHRvIHVzZSB0byBvcmRlciB0aGUgb2JqZWN0cyBieS4gKi9cbiAgb3JkZXJieT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5SW5wdXQ+Pj47XG4gIC8qKiBVc2UgSUQgdG8gcmV0dXJuIG9ubHkgY2hpbGRyZW4uIFVzZSAwIHRvIHJldHVybiBvbmx5IHRvcC1sZXZlbCBpdGVtcyAqL1xuICBwYXJlbnQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+O1xuICAvKiogU3BlY2lmeSBvYmplY3RzIHdob3NlIHBhcmVudCBpcyBpbiBhbiBhcnJheSAqL1xuICBwYXJlbnRJbj86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxTY2FsYXJzWydJRCddWydpbnB1dCddPj4+O1xuICAvKiogU3BlY2lmeSBwb3N0cyB3aG9zZSBwYXJlbnQgaXMgbm90IGluIGFuIGFycmF5ICovXG4gIHBhcmVudE5vdEluPzogSW5wdXRNYXliZTxBcnJheTxJbnB1dE1heWJlPFNjYWxhcnNbJ0lEJ11bJ2lucHV0J10+Pj47XG4gIC8qKiBTaG93IHBvc3RzIHdpdGggYSBzcGVjaWZpYyBwYXNzd29yZC4gKi9cbiAgcGFzc3dvcmQ/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFNob3cgUG9zdHMgYmFzZWQgb24gYSBrZXl3b3JkIHNlYXJjaCAqL1xuICBzZWFyY2g/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydpbnB1dCddPjtcbiAgLyoqIFJldHJpZXZlIHBvc3RzIHdoZXJlIHBvc3Qgc3RhdHVzIGlzIGluIGFuIGFycmF5LiAqL1xuICBzdGF0aT86IElucHV0TWF5YmU8QXJyYXk8SW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT4+PjtcbiAgLyoqIFNob3cgcG9zdHMgd2l0aCBhIHNwZWNpZmljIHN0YXR1cy4gKi9cbiAgc3RhdHVzPzogSW5wdXRNYXliZTxQb3N0U3RhdHVzRW51bT47XG4gIC8qKiBUaXRsZSBvZiB0aGUgb2JqZWN0ICovXG4gIHRpdGxlPzogSW5wdXRNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXT47XG59O1xuXG4vKiogQ29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBVc2VyIHR5cGUgYW5kIHRoZSBVc2VyUm9sZSB0eXBlICovXG5leHBvcnQgdHlwZSBVc2VyVG9Vc2VyUm9sZUNvbm5lY3Rpb24gPSBDb25uZWN0aW9uICYgVXNlclJvbGVDb25uZWN0aW9uICYge1xuICBfX3R5cGVuYW1lPzogJ1VzZXJUb1VzZXJSb2xlQ29ubmVjdGlvbic7XG4gIC8qKiBFZGdlcyBmb3IgdGhlIFVzZXJUb1VzZXJSb2xlQ29ubmVjdGlvbiBjb25uZWN0aW9uICovXG4gIGVkZ2VzOiBBcnJheTxVc2VyVG9Vc2VyUm9sZUNvbm5lY3Rpb25FZGdlPjtcbiAgLyoqIFRoZSBub2RlcyBvZiB0aGUgY29ubmVjdGlvbiwgd2l0aG91dCB0aGUgZWRnZXMgKi9cbiAgbm9kZXM6IEFycmF5PFVzZXJSb2xlPjtcbiAgLyoqIEluZm9ybWF0aW9uIGFib3V0IHBhZ2luYXRpb24gaW4gYSBjb25uZWN0aW9uLiAqL1xuICBwYWdlSW5mbzogVXNlclRvVXNlclJvbGVDb25uZWN0aW9uUGFnZUluZm87XG59O1xuXG4vKiogQW4gZWRnZSBpbiBhIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJUb1VzZXJSb2xlQ29ubmVjdGlvbkVkZ2UgPSBFZGdlICYgVXNlclJvbGVDb25uZWN0aW9uRWRnZSAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9Vc2VyUm9sZUNvbm5lY3Rpb25FZGdlJztcbiAgLyoqIEEgY3Vyc29yIGZvciB1c2UgaW4gcGFnaW5hdGlvbiAqL1xuICBjdXJzb3I/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogVGhlIGl0ZW0gYXQgdGhlIGVuZCBvZiB0aGUgZWRnZSAqL1xuICBub2RlOiBVc2VyUm9sZTtcbn07XG5cbi8qKiBQYWdlIEluZm8gb24gdGhlICZxdW90O1VzZXJUb1VzZXJSb2xlQ29ubmVjdGlvbiZxdW90OyAqL1xuZXhwb3J0IHR5cGUgVXNlclRvVXNlclJvbGVDb25uZWN0aW9uUGFnZUluZm8gPSBQYWdlSW5mbyAmIFVzZXJSb2xlQ29ubmVjdGlvblBhZ2VJbmZvICYgV3BQYWdlSW5mbyAmIHtcbiAgX190eXBlbmFtZT86ICdVc2VyVG9Vc2VyUm9sZUNvbm5lY3Rpb25QYWdlSW5mbyc7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogRmllbGQgdG8gb3JkZXIgdGhlIGNvbm5lY3Rpb24gYnkgKi9cbmV4cG9ydCBlbnVtIFVzZXJzQ29ubmVjdGlvbk9yZGVyYnlFbnVtIHtcbiAgLyoqIE9yZGVyIGJ5IGRpc3BsYXkgbmFtZSAqL1xuICBEaXNwbGF5TmFtZSA9ICdESVNQTEFZX05BTUUnLFxuICAvKiogT3JkZXIgYnkgZW1haWwgYWRkcmVzcyAqL1xuICBFbWFpbCA9ICdFTUFJTCcsXG4gIC8qKiBPcmRlciBieSBsb2dpbiAqL1xuICBMb2dpbiA9ICdMT0dJTicsXG4gIC8qKiBQcmVzZXJ2ZSB0aGUgbG9naW4gb3JkZXIgZ2l2ZW4gaW4gdGhlIExPR0lOX0lOIGFycmF5ICovXG4gIExvZ2luSW4gPSAnTE9HSU5fSU4nLFxuICAvKiogT3JkZXIgYnkgbmljZSBuYW1lICovXG4gIE5pY2VOYW1lID0gJ05JQ0VfTkFNRScsXG4gIC8qKiBQcmVzZXJ2ZSB0aGUgbmljZSBuYW1lIG9yZGVyIGdpdmVuIGluIHRoZSBOSUNFX05BTUVfSU4gYXJyYXkgKi9cbiAgTmljZU5hbWVJbiA9ICdOSUNFX05BTUVfSU4nLFxuICAvKiogT3JkZXIgYnkgcmVnaXN0cmF0aW9uIGRhdGUgKi9cbiAgUmVnaXN0ZXJlZCA9ICdSRUdJU1RFUkVEJyxcbiAgLyoqIE9yZGVyIGJ5IFVSTCAqL1xuICBVcmwgPSAnVVJMJ1xufVxuXG4vKiogT3B0aW9ucyBmb3Igb3JkZXJpbmcgdGhlIGNvbm5lY3Rpb24gKi9cbmV4cG9ydCB0eXBlIFVzZXJzQ29ubmVjdGlvbk9yZGVyYnlJbnB1dCA9IHtcbiAgLyoqIFRoZSBmaWVsZCBuYW1lIHVzZWQgdG8gc29ydCB0aGUgcmVzdWx0cy4gKi9cbiAgZmllbGQ6IFVzZXJzQ29ubmVjdGlvbk9yZGVyYnlFbnVtO1xuICAvKiogVGhlIGNhcmRpbmFsaXR5IG9mIHRoZSBvcmRlciBvZiB0aGUgY29ubmVjdGlvbiAqL1xuICBvcmRlcj86IElucHV0TWF5YmU8T3JkZXJFbnVtPjtcbn07XG5cbi8qKiBDb2x1bW4gdXNlZCBmb3Igc2VhcmNoaW5nIGZvciB1c2Vycy4gKi9cbmV4cG9ydCBlbnVtIFVzZXJzQ29ubmVjdGlvblNlYXJjaENvbHVtbkVudW0ge1xuICAvKiogVGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLiAqL1xuICBFbWFpbCA9ICdFTUFJTCcsXG4gIC8qKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIElELiAqL1xuICBJZCA9ICdJRCcsXG4gIC8qKiBUaGUgdXNlcm5hbWUgdGhlIFVzZXIgdXNlcyB0byBsb2dpbiB3aXRoLiAqL1xuICBMb2dpbiA9ICdMT0dJTicsXG4gIC8qKiBBIFVSTC1mcmllbmRseSBuYW1lIGZvciB0aGUgdXNlci4gVGhlIGRlZmF1bHQgaXMgdGhlIHVzZXIncyB1c2VybmFtZS4gKi9cbiAgTmljZW5hbWUgPSAnTklDRU5BTUUnLFxuICAvKiogVGhlIFVSTCBvZiB0aGUgdXNlcidzIHdlYnNpdGUuICovXG4gIFVybCA9ICdVUkwnXG59XG5cbi8qKiBJbmZvcm1hdGlvbiBhYm91dCBwYWdpbmF0aW9uIGluIGEgY29ubmVjdGlvbi4gKi9cbmV4cG9ydCB0eXBlIFdwUGFnZUluZm8gPSB7XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIHRoZSBjdXJzb3IgdG8gY29udGludWUuICovXG4gIGVuZEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgZm9yd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNOZXh0UGFnZTogU2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXTtcbiAgLyoqIFdoZW4gcGFnaW5hdGluZyBiYWNrd2FyZHMsIGFyZSB0aGVyZSBtb3JlIGl0ZW1zPyAqL1xuICBoYXNQcmV2aW91c1BhZ2U6IFNjYWxhcnNbJ0Jvb2xlYW4nXVsnb3V0cHV0J107XG4gIC8qKiBXaGVuIHBhZ2luYXRpbmcgYmFja3dhcmRzLCB0aGUgY3Vyc29yIHRvIGNvbnRpbnVlLiAqL1xuICBzdGFydEN1cnNvcj86IE1heWJlPFNjYWxhcnNbJ1N0cmluZyddWydvdXRwdXQnXT47XG59O1xuXG4vKiogUHJvdmlkZXMgYWNjZXNzIHRvIGZpZWxkcyBvZiB0aGUgJnF1b3Q7QmxvY2tzV2hvV2VBcmUmcXVvdDsgQUNGIEZpZWxkIEdyb3VwIHZpYSB0aGUgJnF1b3Q7YmxvY2tzV2hvV2VBcmUmcXVvdDsgZmllbGQgKi9cbmV4cG9ydCB0eXBlIFdpdGhBY2ZCbG9ja3NXaG9XZUFyZSA9IHtcbiAgLyoqIEZpZWxkcyBvZiB0aGUgQmxvY2tzV2hvV2VBcmUgQUNGIEZpZWxkIEdyb3VwICovXG4gIGJsb2Nrc1dob1dlQXJlPzogTWF5YmU8QmxvY2tzV2hvV2VBcmU+O1xufTtcblxuLyoqIFByb3ZpZGVzIGFjY2VzcyB0byBmaWVsZHMgb2YgdGhlICZxdW90O0NvbmZpZyZxdW90OyBBQ0YgRmllbGQgR3JvdXAgdmlhIHRoZSAmcXVvdDtjb25maWcmcXVvdDsgZmllbGQgKi9cbmV4cG9ydCB0eXBlIFdpdGhBY2ZDb25maWcgPSB7XG4gIC8qKiBGaWVsZHMgb2YgdGhlIENvbmZpZyBBQ0YgRmllbGQgR3JvdXAgKi9cbiAgY29uZmlnPzogTWF5YmU8Q29uZmlnPjtcbn07XG5cbi8qKiBQcm92aWRlcyBhY2Nlc3MgdG8gZmllbGRzIG9mIHRoZSAmcXVvdDtIZXJvU2VjdGlvbkJsb2NrcyZxdW90OyBBQ0YgRmllbGQgR3JvdXAgdmlhIHRoZSAmcXVvdDtoZXJvU2VjdGlvbkJsb2NrcyZxdW90OyBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgV2l0aEFjZkhlcm9TZWN0aW9uQmxvY2tzID0ge1xuICAvKiogRmllbGRzIG9mIHRoZSBIZXJvU2VjdGlvbkJsb2NrcyBBQ0YgRmllbGQgR3JvdXAgKi9cbiAgaGVyb1NlY3Rpb25CbG9ja3M/OiBNYXliZTxIZXJvU2VjdGlvbkJsb2Nrcz47XG59O1xuXG4vKiogUHJvdmlkZXMgYWNjZXNzIHRvIGZpZWxkcyBvZiB0aGUgJnF1b3Q7SGVyb1ZpZGVvJnF1b3Q7IEFDRiBGaWVsZCBHcm91cCB2aWEgdGhlICZxdW90O2hlcm9WaWRlbyZxdW90OyBmaWVsZCAqL1xuZXhwb3J0IHR5cGUgV2l0aEFjZkhlcm9WaWRlbyA9IHtcbiAgLyoqIEZpZWxkcyBvZiB0aGUgSGVyb1ZpZGVvIEFDRiBGaWVsZCBHcm91cCAqL1xuICBoZXJvVmlkZW8/OiBNYXliZTxIZXJvVmlkZW8+O1xufTtcblxuLyoqIEFjY2VzcyBwb2ludCBmb3IgdGhlICZxdW90O05pY2tlbEJyb254R2xvYmFsU2V0dGluZ3MmcXVvdDsgQUNGIE9wdGlvbnMgUGFnZSAqL1xuZXhwb3J0IHR5cGUgV2l0aEFjZk9wdGlvbnNQYWdlTmlja2VsQnJvbnhHbG9iYWxTZXR0aW5ncyA9IHtcbiAgbmlja2VsQnJvbnhHbG9iYWxTZXR0aW5ncz86IE1heWJlPE5pY2tlbEJyb254R2xvYmFsU2V0dGluZ3M+O1xufTtcblxuLyoqIEFjY2VzcyBwb2ludCBmb3IgdGhlICZxdW90O05pY2tlbEJyb254SGVhZGVyJnF1b3Q7IEFDRiBPcHRpb25zIFBhZ2UgKi9cbmV4cG9ydCB0eXBlIFdpdGhBY2ZPcHRpb25zUGFnZU5pY2tlbEJyb254SGVhZGVyID0ge1xuICBuaWNrZWxCcm9ueEhlYWRlcj86IE1heWJlPE5pY2tlbEJyb254SGVhZGVyPjtcbn07XG5cbi8qKiBUaGUgd3JpdGluZyBzZXR0aW5nIHR5cGUgKi9cbmV4cG9ydCB0eXBlIFdyaXRpbmdTZXR0aW5ncyA9IHtcbiAgX190eXBlbmFtZT86ICdXcml0aW5nU2V0dGluZ3MnO1xuICAvKiogRGVmYXVsdCBwb3N0IGNhdGVnb3J5LiAqL1xuICBkZWZhdWx0Q2F0ZWdvcnk/OiBNYXliZTxTY2FsYXJzWydJbnQnXVsnb3V0cHV0J10+O1xuICAvKiogRGVmYXVsdCBwb3N0IGZvcm1hdC4gKi9cbiAgZGVmYXVsdFBvc3RGb3JtYXQ/OiBNYXliZTxTY2FsYXJzWydTdHJpbmcnXVsnb3V0cHV0J10+O1xuICAvKiogQ29udmVydCBlbW90aWNvbnMgbGlrZSA6LSkgYW5kIDotUCB0byBncmFwaGljcyBvbiBkaXNwbGF5LiAqL1xuICB1c2VTbWlsaWVzPzogTWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydvdXRwdXQnXT47XG59O1xuXG5leHBvcnQgdHlwZSBIZWFkZXJHZW5lcmFsU2V0dGluZ3NGcmFnbWVudEZyYWdtZW50ID0geyBfX3R5cGVuYW1lPzogJ0dlbmVyYWxTZXR0aW5ncycsIHRpdGxlPzogc3RyaW5nIHwgbnVsbCwgZGVzY3JpcHRpb24/OiBzdHJpbmcgfCBudWxsIH0gJiB7ICcgJGZyYWdtZW50TmFtZSc/OiAnSGVhZGVyR2VuZXJhbFNldHRpbmdzRnJhZ21lbnRGcmFnbWVudCcgfTtcblxuZXhwb3J0IHR5cGUgUHJpbWFyeU1lbnVJdGVtRnJhZ21lbnRGcmFnbWVudCA9IHsgX190eXBlbmFtZT86ICdNZW51SXRlbScsIGlkOiBzdHJpbmcsIHVyaT86IHN0cmluZyB8IG51bGwsIHBhdGg/OiBzdHJpbmcgfCBudWxsLCBsYWJlbD86IHN0cmluZyB8IG51bGwsIHBhcmVudElkPzogc3RyaW5nIHwgbnVsbCwgY3NzQ2xhc3Nlcz86IEFycmF5PHN0cmluZyB8IG51bGw+IHwgbnVsbCwgbWVudT86IHsgX190eXBlbmFtZT86ICdNZW51SXRlbVRvTWVudUNvbm5lY3Rpb25FZGdlJywgbm9kZTogeyBfX3R5cGVuYW1lPzogJ01lbnUnLCBuYW1lPzogc3RyaW5nIHwgbnVsbCB9IH0gfCBudWxsIH0gJiB7ICcgJGZyYWdtZW50TmFtZSc/OiAnUHJpbWFyeU1lbnVJdGVtRnJhZ21lbnRGcmFnbWVudCcgfTtcblxuZXhwb3J0IHR5cGUgSGVyb1NlY3Rpb25CbG9ja3NGcmFnbWVudCA9IHsgX190eXBlbmFtZTogJ0hlcm9TZWN0aW9uQmxvY2tzJywgaGVyb0Rlc2NyaXB0aW9uPzogc3RyaW5nIHwgbnVsbCwgaGVyb1RpdGxlPzogc3RyaW5nIHwgbnVsbCwgaGVyb0N0YT86IHsgX190eXBlbmFtZT86ICdIZXJvU2VjdGlvbkJsb2Nrc0hlcm9DdGEnLCBjdGFUZXh0Pzogc3RyaW5nIHwgbnVsbCwgY3RhTGluaz86IHsgX190eXBlbmFtZT86ICdBY2ZMaW5rJywgdGFyZ2V0Pzogc3RyaW5nIHwgbnVsbCwgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCB1cmw/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsIH0gfCBudWxsIH0gJiB7ICcgJGZyYWdtZW50TmFtZSc/OiAnSGVyb1NlY3Rpb25CbG9ja3NGcmFnbWVudCcgfTtcblxuZXhwb3J0IHR5cGUgSGVyb1ZpZGVvRnJhZ21lbnQgPSB7IF9fdHlwZW5hbWU6ICdIZXJvVmlkZW8nLCBoZXJvVmlkZW9Vcmk/OiBzdHJpbmcgfCBudWxsIH0gJiB7ICcgJGZyYWdtZW50TmFtZSc/OiAnSGVyb1ZpZGVvRnJhZ21lbnQnIH07XG5cbmV4cG9ydCB0eXBlIEJsb2Nrc1dob1dlQXJlRnJhZ21lbnQgPSB7IF9fdHlwZW5hbWU6ICdCbG9ja3NXaG9XZUFyZScsIHN1YnRpdGxlV3dhPzogc3RyaW5nIHwgbnVsbCwgdGl0bGVXd2E/OiBzdHJpbmcgfCBudWxsLCBkZXNjcmlwdGlvbld3YT86IHN0cmluZyB8IG51bGwsIGN0YVd3YT86IHsgX190eXBlbmFtZT86ICdCbG9ja3NXaG9XZUFyZUN0YVd3YScsIGN0YVd3YVRpdGxlPzogc3RyaW5nIHwgbnVsbCwgY3RhV3dhTGluaz86IHsgX190eXBlbmFtZT86ICdBY2ZMaW5rJywgdGFyZ2V0Pzogc3RyaW5nIHwgbnVsbCwgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCB1cmw/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsIH0gfCBudWxsIH0gJiB7ICcgJGZyYWdtZW50TmFtZSc/OiAnQmxvY2tzV2hvV2VBcmVGcmFnbWVudCcgfTtcblxuZXhwb3J0IHR5cGUgR2V0RXhhbXBsZVBhZ2VRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHsgW2tleTogc3RyaW5nXTogbmV2ZXI7IH0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEV4YW1wbGVQYWdlUXVlcnkgPSB7IF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5JywgZ2VuZXJhbFNldHRpbmdzPzogeyBfX3R5cGVuYW1lPzogJ0dlbmVyYWxTZXR0aW5ncycsIHRpdGxlPzogc3RyaW5nIHwgbnVsbCwgZGVzY3JpcHRpb24/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsLCBwcmltYXJ5TWVudUl0ZW1zPzogeyBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uJywgbm9kZXM6IEFycmF5PHsgX190eXBlbmFtZT86ICdNZW51SXRlbScsIGlkOiBzdHJpbmcsIHVyaT86IHN0cmluZyB8IG51bGwsIHBhdGg/OiBzdHJpbmcgfCBudWxsLCBsYWJlbD86IHN0cmluZyB8IG51bGwsIHBhcmVudElkPzogc3RyaW5nIHwgbnVsbCwgY3NzQ2xhc3Nlcz86IEFycmF5PHN0cmluZyB8IG51bGw+IHwgbnVsbCwgbWVudT86IHsgX190eXBlbmFtZT86ICdNZW51SXRlbVRvTWVudUNvbm5lY3Rpb25FZGdlJywgbm9kZTogeyBfX3R5cGVuYW1lPzogJ01lbnUnLCBuYW1lPzogc3RyaW5nIHwgbnVsbCB9IH0gfCBudWxsIH0+IH0gfCBudWxsIH07XG5cbmV4cG9ydCB0eXBlIEdldEFyY2hpdmVRdWVyeVZhcmlhYmxlcyA9IEV4YWN0PHtcbiAgdXJpOiBTY2FsYXJzWydTdHJpbmcnXVsnaW5wdXQnXTtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldEFyY2hpdmVRdWVyeSA9IHsgX190eXBlbmFtZT86ICdSb290UXVlcnknLCBub2RlQnlVcmk/OiB7IF9fdHlwZW5hbWU/OiAnQ2F0ZWdvcnknLCBuYW1lPzogc3RyaW5nIHwgbnVsbCwgYXJjaGl2ZVR5cGU6ICdDYXRlZ29yeScsIHBvc3RzPzogeyBfX3R5cGVuYW1lPzogJ0NhdGVnb3J5VG9Qb3N0Q29ubmVjdGlvbicsIG5vZGVzOiBBcnJheTx7IF9fdHlwZW5hbWU/OiAnUG9zdCcsIGlkOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nIHwgbnVsbCwgdXJpPzogc3RyaW5nIHwgbnVsbCB9PiB9IHwgbnVsbCB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvbW1lbnQnLCBhcmNoaXZlVHlwZTogJ0NvbW1lbnQnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29udGVudFR5cGUnLCBhcmNoaXZlVHlwZTogJ0NvbnRlbnRUeXBlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ01lZGlhSXRlbScsIGFyY2hpdmVUeXBlOiAnTWVkaWFJdGVtJyB9IHwgeyBfX3R5cGVuYW1lPzogJ1BhZ2UnLCBhcmNoaXZlVHlwZTogJ1BhZ2UnIH0gfCB7IF9fdHlwZW5hbWU/OiAnUG9zdCcsIGFyY2hpdmVUeXBlOiAnUG9zdCcgfSB8IHsgX190eXBlbmFtZT86ICdQb3N0Rm9ybWF0JywgYXJjaGl2ZVR5cGU6ICdQb3N0Rm9ybWF0JyB9IHwgeyBfX3R5cGVuYW1lPzogJ1RhZycsIG5hbWU/OiBzdHJpbmcgfCBudWxsLCBhcmNoaXZlVHlwZTogJ1RhZycsIHBvc3RzPzogeyBfX3R5cGVuYW1lPzogJ1RhZ1RvUG9zdENvbm5lY3Rpb24nLCBub2RlczogQXJyYXk8eyBfX3R5cGVuYW1lPzogJ1Bvc3QnLCBpZDogc3RyaW5nLCB0aXRsZT86IHN0cmluZyB8IG51bGwsIHVyaT86IHN0cmluZyB8IG51bGwgfT4gfSB8IG51bGwgfSB8IHsgX190eXBlbmFtZT86ICdVc2VyJywgYXJjaGl2ZVR5cGU6ICdVc2VyJyB9IHwgbnVsbCwgZ2VuZXJhbFNldHRpbmdzPzogeyBfX3R5cGVuYW1lPzogJ0dlbmVyYWxTZXR0aW5ncycsIHRpdGxlPzogc3RyaW5nIHwgbnVsbCwgZGVzY3JpcHRpb24/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsLCBwcmltYXJ5TWVudUl0ZW1zPzogeyBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeVRvTWVudUl0ZW1Db25uZWN0aW9uJywgbm9kZXM6IEFycmF5PHsgX190eXBlbmFtZT86ICdNZW51SXRlbScsIGlkOiBzdHJpbmcsIHVyaT86IHN0cmluZyB8IG51bGwsIHBhdGg/OiBzdHJpbmcgfCBudWxsLCBsYWJlbD86IHN0cmluZyB8IG51bGwsIHBhcmVudElkPzogc3RyaW5nIHwgbnVsbCwgY3NzQ2xhc3Nlcz86IEFycmF5PHN0cmluZyB8IG51bGw+IHwgbnVsbCwgbWVudT86IHsgX190eXBlbmFtZT86ICdNZW51SXRlbVRvTWVudUNvbm5lY3Rpb25FZGdlJywgbm9kZTogeyBfX3R5cGVuYW1lPzogJ01lbnUnLCBuYW1lPzogc3RyaW5nIHwgbnVsbCB9IH0gfCBudWxsIH0+IH0gfCBudWxsIH07XG5cbmV4cG9ydCB0eXBlIEdldEhvbWVQYWdlUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7IFtrZXk6IHN0cmluZ106IG5ldmVyOyB9PjtcblxuXG5leHBvcnQgdHlwZSBHZXRIb21lUGFnZVF1ZXJ5ID0geyBfX3R5cGVuYW1lPzogJ1Jvb3RRdWVyeScsIGdlbmVyYWxTZXR0aW5ncz86IHsgX190eXBlbmFtZT86ICdHZW5lcmFsU2V0dGluZ3MnLCB0aXRsZT86IHN0cmluZyB8IG51bGwsIGRlc2NyaXB0aW9uPzogc3RyaW5nIHwgbnVsbCB9IHwgbnVsbCwgcHJpbWFyeU1lbnVJdGVtcz86IHsgX190eXBlbmFtZT86ICdSb290UXVlcnlUb01lbnVJdGVtQ29ubmVjdGlvbicsIG5vZGVzOiBBcnJheTx7IF9fdHlwZW5hbWU/OiAnTWVudUl0ZW0nLCBpZDogc3RyaW5nLCB1cmk/OiBzdHJpbmcgfCBudWxsLCBwYXRoPzogc3RyaW5nIHwgbnVsbCwgbGFiZWw/OiBzdHJpbmcgfCBudWxsLCBwYXJlbnRJZD86IHN0cmluZyB8IG51bGwsIGNzc0NsYXNzZXM/OiBBcnJheTxzdHJpbmcgfCBudWxsPiB8IG51bGwsIG1lbnU/OiB7IF9fdHlwZW5hbWU/OiAnTWVudUl0ZW1Ub01lbnVDb25uZWN0aW9uRWRnZScsIG5vZGU6IHsgX190eXBlbmFtZT86ICdNZW51JywgbmFtZT86IHN0cmluZyB8IG51bGwgfSB9IHwgbnVsbCB9PiB9IHwgbnVsbCwgbmlja2VsQnJvbnhIZWFkZXI/OiB7IF9fdHlwZW5hbWU/OiAnTmlja2VsQnJvbnhIZWFkZXInLCBjb25maWc/OiB7IF9fdHlwZW5hbWU/OiAnQ29uZmlnJywgY3RhVGV4dD86IHN0cmluZyB8IG51bGwsIGN0YUxpbms/OiBzdHJpbmcgfCBudWxsLCBicmFuZExvZ28/OiB7IF9fdHlwZW5hbWU/OiAnQWNmTWVkaWFJdGVtQ29ubmVjdGlvbkVkZ2UnLCBub2RlOiB7IF9fdHlwZW5hbWU/OiAnTWVkaWFJdGVtJywgc291cmNlVXJsPzogc3RyaW5nIHwgbnVsbCB9IH0gfCBudWxsIH0gfCBudWxsIH0gfCBudWxsLCBwYWdlPzogeyBfX3R5cGVuYW1lPzogJ1BhZ2UnLCBlZGl0b3JCbG9ja3M/OiBBcnJheTx7IF9fdHlwZW5hbWU/OiAnQWNmSGVyb1NlY3Rpb24nLCBjbGllbnRJZD86IHN0cmluZyB8IG51bGwsIGhlcm9TZWN0aW9uQmxvY2tzPzogeyBfX3R5cGVuYW1lPzogJ0hlcm9TZWN0aW9uQmxvY2tzJywgaGVyb0Rlc2NyaXB0aW9uPzogc3RyaW5nIHwgbnVsbCwgaGVyb1RpdGxlPzogc3RyaW5nIHwgbnVsbCwgaGVyb0N0YT86IHsgX190eXBlbmFtZT86ICdIZXJvU2VjdGlvbkJsb2Nrc0hlcm9DdGEnLCBjdGFUZXh0Pzogc3RyaW5nIHwgbnVsbCwgY3RhTGluaz86IHsgX190eXBlbmFtZT86ICdBY2ZMaW5rJywgdGFyZ2V0Pzogc3RyaW5nIHwgbnVsbCwgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCB1cmw/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsIH0gfCBudWxsIH0gfCBudWxsIH0gfCB7IF9fdHlwZW5hbWU/OiAnQWNmSGVyb1ZpZGVvU2VjdGlvbicsIGNsaWVudElkPzogc3RyaW5nIHwgbnVsbCwgaGVyb1ZpZGVvPzogeyBfX3R5cGVuYW1lPzogJ0hlcm9WaWRlbycsIGhlcm9WaWRlb1VyaT86IHN0cmluZyB8IG51bGwgfSB8IG51bGwgfSB8IHsgX190eXBlbmFtZT86ICdBY2ZXaG9XZUFyZVNlY3Rpb24nLCBjbGllbnRJZD86IHN0cmluZyB8IG51bGwsIGJsb2Nrc1dob1dlQXJlPzogeyBfX3R5cGVuYW1lPzogJ0Jsb2Nrc1dob1dlQXJlJywgc3VidGl0bGVXd2E/OiBzdHJpbmcgfCBudWxsLCB0aXRsZVd3YT86IHN0cmluZyB8IG51bGwsIGRlc2NyaXB0aW9uV3dhPzogc3RyaW5nIHwgbnVsbCwgY3RhV3dhPzogeyBfX3R5cGVuYW1lPzogJ0Jsb2Nrc1dob1dlQXJlQ3RhV3dhJywgY3RhV3dhVGl0bGU/OiBzdHJpbmcgfCBudWxsLCBjdGFXd2FMaW5rPzogeyBfX3R5cGVuYW1lPzogJ0FjZkxpbmsnLCB0YXJnZXQ/OiBzdHJpbmcgfCBudWxsLCB0aXRsZT86IHN0cmluZyB8IG51bGwsIHVybD86IHN0cmluZyB8IG51bGwgfSB8IG51bGwgfSB8IG51bGwgfSB8IG51bGwgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQXJjaGl2ZXMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUF1ZGlvJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVBdmF0YXInIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUJsb2NrJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVCdXR0b24nIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUJ1dHRvbnMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUNhbGVuZGFyJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDYXRlZ29yaWVzJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb2RlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb2x1bW4nIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUNvbHVtbnMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRBdXRob3JOYW1lJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50Q29udGVudCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudERhdGUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUNvbW1lbnRFZGl0TGluaycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudFJlcGx5TGluaycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudFRlbXBsYXRlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNQYWdpbmF0aW9uJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1BhZ2luYXRpb25OZXh0JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1BhZ2luYXRpb25OdW1iZXJzJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVDb21tZW50c1BhZ2luYXRpb25QcmV2aW91cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ29tbWVudHNUaXRsZScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlQ292ZXInIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZURldGFpbHMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUVtYmVkJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVGaWxlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVGb290bm90ZXMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUZyZWVmb3JtJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVHYWxsZXJ5JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVHcm91cCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlSGVhZGluZycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlSG9tZUxpbmsnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUh0bWwnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUltYWdlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVMYXRlc3RDb21tZW50cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlTGF0ZXN0UG9zdHMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUxlZ2FjeVdpZGdldCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlTGlzdCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlTGlzdEl0ZW0nIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZUxvZ2lub3V0JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVNZWRpYVRleHQnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZU1pc3NpbmcnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZU1vcmUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZU5hdmlnYXRpb24nIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZU5hdmlnYXRpb25MaW5rJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVOYXZpZ2F0aW9uU3VibWVudScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlTmV4dHBhZ2UnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBhZ2VMaXN0JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVQYWdlTGlzdEl0ZW0nIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBhcmFncmFwaCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUGF0dGVybicgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdEF1dGhvcicgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdEF1dGhvckJpb2dyYXBoeScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdEF1dGhvck5hbWUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RDb21tZW50cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdENvbW1lbnRzRm9ybScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdENvbnRlbnQnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBvc3REYXRlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0RXhjZXJwdCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdEZlYXR1cmVkSW1hZ2UnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBvc3ROYXZpZ2F0aW9uTGluaycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUG9zdFRlbXBsYXRlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVQb3N0VGVybXMnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVBvc3RUaXRsZScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUHJlZm9ybWF0dGVkJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVQdWxscXVvdGUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVF1ZXJ5JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeU5vUmVzdWx0cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUXVlcnlQYWdpbmF0aW9uJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVBhZ2luYXRpb25OZXh0JyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVBhZ2luYXRpb25OdW1iZXJzJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVRdWVyeVBhZ2luYXRpb25QcmV2aW91cycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUXVlcnlUaXRsZScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlUXVvdGUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVJlYWRNb3JlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVSc3MnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVNlYXJjaCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlU2VwYXJhdG9yJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVTaG9ydGNvZGUnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVNpdGVMb2dvJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVTaXRlVGFnbGluZScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlU2l0ZVRpdGxlJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVTb2NpYWxMaW5rJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVTb2NpYWxMaW5rcycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlU3BhY2VyJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVUYWJsZScgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlVGFnQ2xvdWQnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVRlbXBsYXRlUGFydCcgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlVGVybURlc2NyaXB0aW9uJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVUZXh0Q29sdW1ucycgfSB8IHsgX190eXBlbmFtZT86ICdDb3JlVmVyc2UnIH0gfCB7IF9fdHlwZW5hbWU/OiAnQ29yZVZpZGVvJyB9IHwgeyBfX3R5cGVuYW1lPzogJ0NvcmVXaWRnZXRHcm91cCcgfSB8IHsgX190eXBlbmFtZT86ICdTYWZlU3ZnU3ZnSWNvbicgfSB8IG51bGw+IHwgbnVsbCB9IHwgbnVsbCB9O1xuXG5leHBvcnQgdHlwZSBHZXRQYWdlUXVlcnlWYXJpYWJsZXMgPSBFeGFjdDx7XG4gIGRhdGFiYXNlSWQ6IFNjYWxhcnNbJ0lEJ11bJ2lucHV0J107XG4gIGFzUHJldmlldz86IElucHV0TWF5YmU8U2NhbGFyc1snQm9vbGVhbiddWydpbnB1dCddPjtcbn0+O1xuXG5cbmV4cG9ydCB0eXBlIEdldFBhZ2VRdWVyeSA9IHsgX190eXBlbmFtZT86ICdSb290UXVlcnknLCBwYWdlPzogeyBfX3R5cGVuYW1lPzogJ1BhZ2UnLCB0aXRsZT86IHN0cmluZyB8IG51bGwsIGNvbnRlbnQ/OiBzdHJpbmcgfCBudWxsIH0gfCBudWxsLCBnZW5lcmFsU2V0dGluZ3M/OiB7IF9fdHlwZW5hbWU/OiAnR2VuZXJhbFNldHRpbmdzJywgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCBkZXNjcmlwdGlvbj86IHN0cmluZyB8IG51bGwgfSB8IG51bGwsIHByaW1hcnlNZW51SXRlbXM/OiB7IF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9NZW51SXRlbUNvbm5lY3Rpb24nLCBub2RlczogQXJyYXk8eyBfX3R5cGVuYW1lPzogJ01lbnVJdGVtJywgaWQ6IHN0cmluZywgdXJpPzogc3RyaW5nIHwgbnVsbCwgcGF0aD86IHN0cmluZyB8IG51bGwsIGxhYmVsPzogc3RyaW5nIHwgbnVsbCwgcGFyZW50SWQ/OiBzdHJpbmcgfCBudWxsLCBjc3NDbGFzc2VzPzogQXJyYXk8c3RyaW5nIHwgbnVsbD4gfCBudWxsLCBtZW51PzogeyBfX3R5cGVuYW1lPzogJ01lbnVJdGVtVG9NZW51Q29ubmVjdGlvbkVkZ2UnLCBub2RlOiB7IF9fdHlwZW5hbWU/OiAnTWVudScsIG5hbWU/OiBzdHJpbmcgfCBudWxsIH0gfSB8IG51bGwgfT4gfSB8IG51bGwgfTtcblxuZXhwb3J0IHR5cGUgR2V0UG9zdFF1ZXJ5VmFyaWFibGVzID0gRXhhY3Q8e1xuICBkYXRhYmFzZUlkOiBTY2FsYXJzWydJRCddWydpbnB1dCddO1xuICBhc1ByZXZpZXc/OiBJbnB1dE1heWJlPFNjYWxhcnNbJ0Jvb2xlYW4nXVsnaW5wdXQnXT47XG59PjtcblxuXG5leHBvcnQgdHlwZSBHZXRQb3N0UXVlcnkgPSB7IF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5JywgcG9zdD86IHsgX190eXBlbmFtZT86ICdQb3N0JywgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCBjb250ZW50Pzogc3RyaW5nIHwgbnVsbCwgZGF0ZT86IHN0cmluZyB8IG51bGwsIGF1dGhvcj86IHsgX190eXBlbmFtZT86ICdOb2RlV2l0aEF1dGhvclRvVXNlckNvbm5lY3Rpb25FZGdlJywgbm9kZTogeyBfX3R5cGVuYW1lPzogJ1VzZXInLCBuYW1lPzogc3RyaW5nIHwgbnVsbCB9IH0gfCBudWxsIH0gfCBudWxsLCBnZW5lcmFsU2V0dGluZ3M/OiB7IF9fdHlwZW5hbWU/OiAnR2VuZXJhbFNldHRpbmdzJywgdGl0bGU/OiBzdHJpbmcgfCBudWxsLCBkZXNjcmlwdGlvbj86IHN0cmluZyB8IG51bGwgfSB8IG51bGwsIHByaW1hcnlNZW51SXRlbXM/OiB7IF9fdHlwZW5hbWU/OiAnUm9vdFF1ZXJ5VG9NZW51SXRlbUNvbm5lY3Rpb24nLCBub2RlczogQXJyYXk8eyBfX3R5cGVuYW1lPzogJ01lbnVJdGVtJywgaWQ6IHN0cmluZywgdXJpPzogc3RyaW5nIHwgbnVsbCwgcGF0aD86IHN0cmluZyB8IG51bGwsIGxhYmVsPzogc3RyaW5nIHwgbnVsbCwgcGFyZW50SWQ/OiBzdHJpbmcgfCBudWxsLCBjc3NDbGFzc2VzPzogQXJyYXk8c3RyaW5nIHwgbnVsbD4gfCBudWxsLCBtZW51PzogeyBfX3R5cGVuYW1lPzogJ01lbnVJdGVtVG9NZW51Q29ubmVjdGlvbkVkZ2UnLCBub2RlOiB7IF9fdHlwZW5hbWU/OiAnTWVudScsIG5hbWU/OiBzdHJpbmcgfCBudWxsIH0gfSB8IG51bGwgfT4gfSB8IG51bGwgfTtcblxuZXhwb3J0IGNvbnN0IEhlYWRlckdlbmVyYWxTZXR0aW5nc0ZyYWdtZW50RnJhZ21lbnREb2MgPSB7XCJraW5kXCI6XCJEb2N1bWVudFwiLFwiZGVmaW5pdGlvbnNcIjpbe1wia2luZFwiOlwiRnJhZ21lbnREZWZpbml0aW9uXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkhlYWRlckdlbmVyYWxTZXR0aW5nc0ZyYWdtZW50XCJ9LFwidHlwZUNvbmRpdGlvblwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJHZW5lcmFsU2V0dGluZ3NcIn19LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRpdGxlXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJkZXNjcmlwdGlvblwifX1dfX1dfSBhcyB1bmtub3duIGFzIERvY3VtZW50Tm9kZTxIZWFkZXJHZW5lcmFsU2V0dGluZ3NGcmFnbWVudEZyYWdtZW50LCB1bmtub3duPjtcbmV4cG9ydCBjb25zdCBQcmltYXJ5TWVudUl0ZW1GcmFnbWVudEZyYWdtZW50RG9jID0ge1wia2luZFwiOlwiRG9jdW1lbnRcIixcImRlZmluaXRpb25zXCI6W3tcImtpbmRcIjpcIkZyYWdtZW50RGVmaW5pdGlvblwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJQcmltYXJ5TWVudUl0ZW1GcmFnbWVudFwifSxcInR5cGVDb25kaXRpb25cIjp7XCJraW5kXCI6XCJOYW1lZFR5cGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiTWVudUl0ZW1cIn19LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImlkXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ1cmlcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInBhdGhcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImxhYmVsXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwYXJlbnRJZFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY3NzQ2xhc3Nlc1wifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibWVudVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2RlXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5hbWVcIn19XX19XX19XX19XX0gYXMgdW5rbm93biBhcyBEb2N1bWVudE5vZGU8UHJpbWFyeU1lbnVJdGVtRnJhZ21lbnRGcmFnbWVudCwgdW5rbm93bj47XG5leHBvcnQgY29uc3QgSGVyb1NlY3Rpb25CbG9ja3NGcmFnbWVudERvYyA9IHtcImtpbmRcIjpcIkRvY3VtZW50XCIsXCJkZWZpbml0aW9uc1wiOlt7XCJraW5kXCI6XCJGcmFnbWVudERlZmluaXRpb25cIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiSGVyb1NlY3Rpb25CbG9ja3NcIn0sXCJ0eXBlQ29uZGl0aW9uXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkhlcm9TZWN0aW9uQmxvY2tzXCJ9fSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJfX3R5cGVuYW1lXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJoZXJvRGVzY3JpcHRpb25cIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImhlcm9UaXRsZVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiaGVyb0N0YVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjdGFMaW5rXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRhcmdldFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVybFwifX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY3RhVGV4dFwifX1dfX1dfX1dfSBhcyB1bmtub3duIGFzIERvY3VtZW50Tm9kZTxIZXJvU2VjdGlvbkJsb2Nrc0ZyYWdtZW50LCB1bmtub3duPjtcbmV4cG9ydCBjb25zdCBIZXJvVmlkZW9GcmFnbWVudERvYyA9IHtcImtpbmRcIjpcIkRvY3VtZW50XCIsXCJkZWZpbml0aW9uc1wiOlt7XCJraW5kXCI6XCJGcmFnbWVudERlZmluaXRpb25cIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiSGVyb1ZpZGVvXCJ9LFwidHlwZUNvbmRpdGlvblwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJIZXJvVmlkZW9cIn19LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIl9fdHlwZW5hbWVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImhlcm9WaWRlb1VyaVwifX1dfX1dfSBhcyB1bmtub3duIGFzIERvY3VtZW50Tm9kZTxIZXJvVmlkZW9GcmFnbWVudCwgdW5rbm93bj47XG5leHBvcnQgY29uc3QgQmxvY2tzV2hvV2VBcmVGcmFnbWVudERvYyA9IHtcImtpbmRcIjpcIkRvY3VtZW50XCIsXCJkZWZpbml0aW9uc1wiOlt7XCJraW5kXCI6XCJGcmFnbWVudERlZmluaXRpb25cIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiQmxvY2tzV2hvV2VBcmVcIn0sXCJ0eXBlQ29uZGl0aW9uXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkJsb2Nrc1dob1dlQXJlXCJ9fSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJfX3R5cGVuYW1lXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJzdWJ0aXRsZVd3YVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVXd2FcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRlc2NyaXB0aW9uV3dhXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjdGFXd2FcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY3RhV3dhTGlua1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ0YXJnZXRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRpdGxlXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ1cmxcIn19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImN0YVd3YVRpdGxlXCJ9fV19fV19fV19IGFzIHVua25vd24gYXMgRG9jdW1lbnROb2RlPEJsb2Nrc1dob1dlQXJlRnJhZ21lbnQsIHVua25vd24+O1xuZXhwb3J0IGNvbnN0IEdldEV4YW1wbGVQYWdlRG9jdW1lbnQgPSB7XCJraW5kXCI6XCJEb2N1bWVudFwiLFwiZGVmaW5pdGlvbnNcIjpbe1wia2luZFwiOlwiT3BlcmF0aW9uRGVmaW5pdGlvblwiLFwib3BlcmF0aW9uXCI6XCJxdWVyeVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJHZXRFeGFtcGxlUGFnZVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJnZW5lcmFsU2V0dGluZ3NcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRlc2NyaXB0aW9uXCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwiYWxpYXNcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicHJpbWFyeU1lbnVJdGVtc1wifSxcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibWVudUl0ZW1zXCJ9LFwiYXJndW1lbnRzXCI6W3tcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIndoZXJlXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJPYmplY3RWYWx1ZVwiLFwiZmllbGRzXCI6W3tcImtpbmRcIjpcIk9iamVjdEZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImxvY2F0aW9uXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJFbnVtVmFsdWVcIixcInZhbHVlXCI6XCJQUklNQVJZXCJ9fV19fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibm9kZXNcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiaWRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGF0aFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibGFiZWxcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInBhcmVudElkXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjc3NDbGFzc2VzXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJtZW51XCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5vZGVcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibmFtZVwifX1dfX1dfX1dfX1dfX1dfX1dfSBhcyB1bmtub3duIGFzIERvY3VtZW50Tm9kZTxHZXRFeGFtcGxlUGFnZVF1ZXJ5LCBHZXRFeGFtcGxlUGFnZVF1ZXJ5VmFyaWFibGVzPjtcbmV4cG9ydCBjb25zdCBHZXRBcmNoaXZlRG9jdW1lbnQgPSB7XCJraW5kXCI6XCJEb2N1bWVudFwiLFwiZGVmaW5pdGlvbnNcIjpbe1wia2luZFwiOlwiT3BlcmF0aW9uRGVmaW5pdGlvblwiLFwib3BlcmF0aW9uXCI6XCJxdWVyeVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJHZXRBcmNoaXZlXCJ9LFwidmFyaWFibGVEZWZpbml0aW9uc1wiOlt7XCJraW5kXCI6XCJWYXJpYWJsZURlZmluaXRpb25cIixcInZhcmlhYmxlXCI6e1wia2luZFwiOlwiVmFyaWFibGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidXJpXCJ9fSxcInR5cGVcIjp7XCJraW5kXCI6XCJOb25OdWxsVHlwZVwiLFwidHlwZVwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJTdHJpbmdcIn19fX1dLFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5vZGVCeVVyaVwifSxcImFyZ3VtZW50c1wiOlt7XCJraW5kXCI6XCJBcmd1bWVudFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ1cmlcIn0sXCJ2YWx1ZVwiOntcImtpbmRcIjpcIlZhcmlhYmxlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX19XSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwiYWxpYXNcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiYXJjaGl2ZVR5cGVcIn0sXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIl9fdHlwZW5hbWVcIn19LHtcImtpbmRcIjpcIklubGluZUZyYWdtZW50XCIsXCJ0eXBlQ29uZGl0aW9uXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkNhdGVnb3J5XCJ9fSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJuYW1lXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwb3N0c1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2Rlc1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJpZFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX1dfX1dfX1dfX0se1wia2luZFwiOlwiSW5saW5lRnJhZ21lbnRcIixcInR5cGVDb25kaXRpb25cIjp7XCJraW5kXCI6XCJOYW1lZFR5cGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiVGFnXCJ9fSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJuYW1lXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwb3N0c1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2Rlc1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJpZFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX1dfX1dfX1dfX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiZ2VuZXJhbFNldHRpbmdzXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRpdGxlXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJkZXNjcmlwdGlvblwifX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcImFsaWFzXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInByaW1hcnlNZW51SXRlbXNcIn0sXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm1lbnVJdGVtc1wifSxcImFyZ3VtZW50c1wiOlt7XCJraW5kXCI6XCJBcmd1bWVudFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ3aGVyZVwifSxcInZhbHVlXCI6e1wia2luZFwiOlwiT2JqZWN0VmFsdWVcIixcImZpZWxkc1wiOlt7XCJraW5kXCI6XCJPYmplY3RGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJsb2NhdGlvblwifSxcInZhbHVlXCI6e1wia2luZFwiOlwiRW51bVZhbHVlXCIsXCJ2YWx1ZVwiOlwiUFJJTUFSWVwifX1dfX1dLFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5vZGVzXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImlkXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ1cmlcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInBhdGhcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImxhYmVsXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwYXJlbnRJZFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY3NzQ2xhc3Nlc1wifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibWVudVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2RlXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5hbWVcIn19XX19XX19XX19XX19XX19XX0gYXMgdW5rbm93biBhcyBEb2N1bWVudE5vZGU8R2V0QXJjaGl2ZVF1ZXJ5LCBHZXRBcmNoaXZlUXVlcnlWYXJpYWJsZXM+O1xuZXhwb3J0IGNvbnN0IEdldEhvbWVQYWdlRG9jdW1lbnQgPSB7XCJraW5kXCI6XCJEb2N1bWVudFwiLFwiZGVmaW5pdGlvbnNcIjpbe1wia2luZFwiOlwiT3BlcmF0aW9uRGVmaW5pdGlvblwiLFwib3BlcmF0aW9uXCI6XCJxdWVyeVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJHZXRIb21lUGFnZVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJnZW5lcmFsU2V0dGluZ3NcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRlc2NyaXB0aW9uXCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwiYWxpYXNcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicHJpbWFyeU1lbnVJdGVtc1wifSxcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibWVudUl0ZW1zXCJ9LFwiYXJndW1lbnRzXCI6W3tcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIndoZXJlXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJPYmplY3RWYWx1ZVwiLFwiZmllbGRzXCI6W3tcImtpbmRcIjpcIk9iamVjdEZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImxvY2F0aW9uXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJFbnVtVmFsdWVcIixcInZhbHVlXCI6XCJQUklNQVJZXCJ9fV19fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibm9kZXNcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiaWRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGF0aFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibGFiZWxcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInBhcmVudElkXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjc3NDbGFzc2VzXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJtZW51XCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5vZGVcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibmFtZVwifX1dfX1dfX1dfX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibmlja2VsQnJvbnhIZWFkZXJcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY29uZmlnXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImN0YVRleHRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImN0YUxpbmtcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImJyYW5kTG9nb1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2RlXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInNvdXJjZVVybFwifX1dfX1dfX1dfX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGFnZVwifSxcImFyZ3VtZW50c1wiOlt7XCJraW5kXCI6XCJBcmd1bWVudFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJpZFwifSxcInZhbHVlXCI6e1wia2luZFwiOlwiU3RyaW5nVmFsdWVcIixcInZhbHVlXCI6XCJjRzl6ZERveU13PT1cIixcImJsb2NrXCI6ZmFsc2V9fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiZWRpdG9yQmxvY2tzXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIklubGluZUZyYWdtZW50XCIsXCJ0eXBlQ29uZGl0aW9uXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkFjZkhlcm9TZWN0aW9uXCJ9fSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJoZXJvU2VjdGlvbkJsb2Nrc1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJoZXJvQ3RhXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImN0YUxpbmtcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGFyZ2V0XCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ0aXRsZVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidXJsXCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjdGFUZXh0XCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJoZXJvRGVzY3JpcHRpb25cIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImhlcm9UaXRsZVwifX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY2xpZW50SWRcIn19XX19LHtcImtpbmRcIjpcIklubGluZUZyYWdtZW50XCIsXCJ0eXBlQ29uZGl0aW9uXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkFjZkhlcm9WaWRlb1NlY3Rpb25cIn19LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImhlcm9WaWRlb1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJoZXJvVmlkZW9VcmlcIn19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImNsaWVudElkXCJ9fV19fSx7XCJraW5kXCI6XCJJbmxpbmVGcmFnbWVudFwiLFwidHlwZUNvbmRpdGlvblwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJBY2ZXaG9XZUFyZVNlY3Rpb25cIn19LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImJsb2Nrc1dob1dlQXJlXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImN0YVd3YVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjdGFXd2FMaW5rXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRhcmdldFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVybFwifX1dfX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiY3RhV3dhVGl0bGVcIn19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInN1YnRpdGxlV3dhXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ0aXRsZVd3YVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiZGVzY3JpcHRpb25Xd2FcIn19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImNsaWVudElkXCJ9fV19fV19fV19fV19fV19IGFzIHVua25vd24gYXMgRG9jdW1lbnROb2RlPEdldEhvbWVQYWdlUXVlcnksIEdldEhvbWVQYWdlUXVlcnlWYXJpYWJsZXM+O1xuZXhwb3J0IGNvbnN0IEdldFBhZ2VEb2N1bWVudCA9IHtcImtpbmRcIjpcIkRvY3VtZW50XCIsXCJkZWZpbml0aW9uc1wiOlt7XCJraW5kXCI6XCJPcGVyYXRpb25EZWZpbml0aW9uXCIsXCJvcGVyYXRpb25cIjpcInF1ZXJ5XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIkdldFBhZ2VcIn0sXCJ2YXJpYWJsZURlZmluaXRpb25zXCI6W3tcImtpbmRcIjpcIlZhcmlhYmxlRGVmaW5pdGlvblwiLFwidmFyaWFibGVcIjp7XCJraW5kXCI6XCJWYXJpYWJsZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJkYXRhYmFzZUlkXCJ9fSxcInR5cGVcIjp7XCJraW5kXCI6XCJOb25OdWxsVHlwZVwiLFwidHlwZVwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJJRFwifX19fSx7XCJraW5kXCI6XCJWYXJpYWJsZURlZmluaXRpb25cIixcInZhcmlhYmxlXCI6e1wia2luZFwiOlwiVmFyaWFibGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiYXNQcmV2aWV3XCJ9fSxcInR5cGVcIjp7XCJraW5kXCI6XCJOYW1lZFR5cGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiQm9vbGVhblwifX0sXCJkZWZhdWx0VmFsdWVcIjp7XCJraW5kXCI6XCJCb29sZWFuVmFsdWVcIixcInZhbHVlXCI6ZmFsc2V9fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGFnZVwifSxcImFyZ3VtZW50c1wiOlt7XCJraW5kXCI6XCJBcmd1bWVudFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJpZFwifSxcInZhbHVlXCI6e1wia2luZFwiOlwiVmFyaWFibGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiZGF0YWJhc2VJZFwifX19LHtcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImlkVHlwZVwifSxcInZhbHVlXCI6e1wia2luZFwiOlwiRW51bVZhbHVlXCIsXCJ2YWx1ZVwiOlwiREFUQUJBU0VfSURcIn19LHtcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImFzUHJldmlld1wifSxcInZhbHVlXCI6e1wia2luZFwiOlwiVmFyaWFibGVcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiYXNQcmV2aWV3XCJ9fX1dLFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInRpdGxlXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjb250ZW50XCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJnZW5lcmFsU2V0dGluZ3NcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRlc2NyaXB0aW9uXCJ9fV19fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwiYWxpYXNcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicHJpbWFyeU1lbnVJdGVtc1wifSxcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibWVudUl0ZW1zXCJ9LFwiYXJndW1lbnRzXCI6W3tcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIndoZXJlXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJPYmplY3RWYWx1ZVwiLFwiZmllbGRzXCI6W3tcImtpbmRcIjpcIk9iamVjdEZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImxvY2F0aW9uXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJFbnVtVmFsdWVcIixcInZhbHVlXCI6XCJQUklNQVJZXCJ9fV19fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibm9kZXNcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiaWRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInVyaVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGF0aFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibGFiZWxcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcInBhcmVudElkXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJjc3NDbGFzc2VzXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJtZW51XCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5vZGVcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibmFtZVwifX1dfX1dfX1dfX1dfX1dfX1dfSBhcyB1bmtub3duIGFzIERvY3VtZW50Tm9kZTxHZXRQYWdlUXVlcnksIEdldFBhZ2VRdWVyeVZhcmlhYmxlcz47XG5leHBvcnQgY29uc3QgR2V0UG9zdERvY3VtZW50ID0ge1wia2luZFwiOlwiRG9jdW1lbnRcIixcImRlZmluaXRpb25zXCI6W3tcImtpbmRcIjpcIk9wZXJhdGlvbkRlZmluaXRpb25cIixcIm9wZXJhdGlvblwiOlwicXVlcnlcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiR2V0UG9zdFwifSxcInZhcmlhYmxlRGVmaW5pdGlvbnNcIjpbe1wia2luZFwiOlwiVmFyaWFibGVEZWZpbml0aW9uXCIsXCJ2YXJpYWJsZVwiOntcImtpbmRcIjpcIlZhcmlhYmxlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRhdGFiYXNlSWRcIn19LFwidHlwZVwiOntcImtpbmRcIjpcIk5vbk51bGxUeXBlXCIsXCJ0eXBlXCI6e1wia2luZFwiOlwiTmFtZWRUeXBlXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIklEXCJ9fX19LHtcImtpbmRcIjpcIlZhcmlhYmxlRGVmaW5pdGlvblwiLFwidmFyaWFibGVcIjp7XCJraW5kXCI6XCJWYXJpYWJsZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJhc1ByZXZpZXdcIn19LFwidHlwZVwiOntcImtpbmRcIjpcIk5hbWVkVHlwZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJCb29sZWFuXCJ9fSxcImRlZmF1bHRWYWx1ZVwiOntcImtpbmRcIjpcIkJvb2xlYW5WYWx1ZVwiLFwidmFsdWVcIjpmYWxzZX19XSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwb3N0XCJ9LFwiYXJndW1lbnRzXCI6W3tcImtpbmRcIjpcIkFyZ3VtZW50XCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImlkXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJWYXJpYWJsZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJkYXRhYmFzZUlkXCJ9fX0se1wia2luZFwiOlwiQXJndW1lbnRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiaWRUeXBlXCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJFbnVtVmFsdWVcIixcInZhbHVlXCI6XCJEQVRBQkFTRV9JRFwifX0se1wia2luZFwiOlwiQXJndW1lbnRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiYXNQcmV2aWV3XCJ9LFwidmFsdWVcIjp7XCJraW5kXCI6XCJWYXJpYWJsZVwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJhc1ByZXZpZXdcIn19fV0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidGl0bGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImNvbnRlbnRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImRhdGVcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImF1dGhvclwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2RlXCJ9LFwic2VsZWN0aW9uU2V0XCI6e1wia2luZFwiOlwiU2VsZWN0aW9uU2V0XCIsXCJzZWxlY3Rpb25zXCI6W3tcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm5hbWVcIn19XX19XX19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImdlbmVyYWxTZXR0aW5nc1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJ0aXRsZVwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwiZGVzY3JpcHRpb25cIn19XX19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJhbGlhc1wiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwcmltYXJ5TWVudUl0ZW1zXCJ9LFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJtZW51SXRlbXNcIn0sXCJhcmd1bWVudHNcIjpbe1wia2luZFwiOlwiQXJndW1lbnRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwid2hlcmVcIn0sXCJ2YWx1ZVwiOntcImtpbmRcIjpcIk9iamVjdFZhbHVlXCIsXCJmaWVsZHNcIjpbe1wia2luZFwiOlwiT2JqZWN0RmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibG9jYXRpb25cIn0sXCJ2YWx1ZVwiOntcImtpbmRcIjpcIkVudW1WYWx1ZVwiLFwidmFsdWVcIjpcIlBSSU1BUllcIn19XX19XSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJub2Rlc1wifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJpZFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwidXJpXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJwYXRoXCJ9fSx7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJsYWJlbFwifX0se1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwicGFyZW50SWRcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcImNzc0NsYXNzZXNcIn19LHtcImtpbmRcIjpcIkZpZWxkXCIsXCJuYW1lXCI6e1wia2luZFwiOlwiTmFtZVwiLFwidmFsdWVcIjpcIm1lbnVcIn0sXCJzZWxlY3Rpb25TZXRcIjp7XCJraW5kXCI6XCJTZWxlY3Rpb25TZXRcIixcInNlbGVjdGlvbnNcIjpbe1wia2luZFwiOlwiRmllbGRcIixcIm5hbWVcIjp7XCJraW5kXCI6XCJOYW1lXCIsXCJ2YWx1ZVwiOlwibm9kZVwifSxcInNlbGVjdGlvblNldFwiOntcImtpbmRcIjpcIlNlbGVjdGlvblNldFwiLFwic2VsZWN0aW9uc1wiOlt7XCJraW5kXCI6XCJGaWVsZFwiLFwibmFtZVwiOntcImtpbmRcIjpcIk5hbWVcIixcInZhbHVlXCI6XCJuYW1lXCJ9fV19fV19fV19fV19fV19fV19IGFzIHVua25vd24gYXMgRG9jdW1lbnROb2RlPEdldFBvc3RRdWVyeSwgR2V0UG9zdFF1ZXJ5VmFyaWFibGVzPjsiXSwibmFtZXMiOlsiQXZhdGFyUmF0aW5nRW51bSIsIkNhdGVnb3J5SWRUeXBlIiwiQ29tbWVudE5vZGVJZFR5cGVFbnVtIiwiQ29tbWVudFN0YXR1c0VudW0iLCJDb21tZW50c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bSIsIkNvbnRlbnROb2RlSWRUeXBlRW51bSIsIkNvbnRlbnRUeXBlRW51bSIsIkNvbnRlbnRUeXBlSWRUeXBlRW51bSIsIkNvbnRlbnRUeXBlc09mQ2F0ZWdvcnlFbnVtIiwiQ29udGVudFR5cGVzT2ZQb3N0Rm9ybWF0RW51bSIsIkNvbnRlbnRUeXBlc09mVGFnRW51bSIsIkdsb2JhbFN0eWxlc2hlZXRUeXBlc0VudW0iLCJNZWRpYUl0ZW1JZFR5cGUiLCJNZWRpYUl0ZW1TaXplRW51bSIsIk1lZGlhSXRlbVN0YXR1c0VudW0iLCJNZW51SXRlbU5vZGVJZFR5cGVFbnVtIiwiTWVudUxvY2F0aW9uRW51bSIsIk1lbnVOb2RlSWRUeXBlRW51bSIsIk1pbWVUeXBlRW51bSIsIk9yZGVyRW51bSIsIlBhZ2VJZFR5cGUiLCJQbHVnaW5TdGF0dXNFbnVtIiwiUG9zdEZvcm1hdElkVHlwZSIsIlBvc3RJZFR5cGUiLCJQb3N0T2JqZWN0RmllbGRGb3JtYXRFbnVtIiwiUG9zdE9iamVjdHNDb25uZWN0aW9uRGF0ZUNvbHVtbkVudW0iLCJQb3N0T2JqZWN0c0Nvbm5lY3Rpb25PcmRlcmJ5RW51bSIsIlBvc3RTdGF0dXNFbnVtIiwiUmVsYXRpb25FbnVtIiwiU2NyaXB0TG9hZGluZ1N0cmF0ZWd5RW51bSIsIlRhZ0lkVHlwZSIsIlRheG9ub215RW51bSIsIlRheG9ub215SWRUeXBlRW51bSIsIlRlcm1Ob2RlSWRUeXBlRW51bSIsIlRlcm1PYmplY3RzQ29ubmVjdGlvbk9yZGVyYnlFbnVtIiwiVXNlck5vZGVJZFR5cGVFbnVtIiwiVXNlclJvbGVFbnVtIiwiVXNlcnNDb25uZWN0aW9uT3JkZXJieUVudW0iLCJVc2Vyc0Nvbm5lY3Rpb25TZWFyY2hDb2x1bW5FbnVtIiwiSGVhZGVyR2VuZXJhbFNldHRpbmdzRnJhZ21lbnRGcmFnbWVudERvYyIsIlByaW1hcnlNZW51SXRlbUZyYWdtZW50RnJhZ21lbnREb2MiLCJIZXJvU2VjdGlvbkJsb2Nrc0ZyYWdtZW50RG9jIiwiSGVyb1ZpZGVvRnJhZ21lbnREb2MiLCJCbG9ja3NXaG9XZUFyZUZyYWdtZW50RG9jIiwiR2V0RXhhbXBsZVBhZ2VEb2N1bWVudCIsIkdldEFyY2hpdmVEb2N1bWVudCIsIkdldEhvbWVQYWdlRG9jdW1lbnQiLCJHZXRQYWdlRG9jdW1lbnQiLCJHZXRQb3N0RG9jdW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/__generated__/graphql.ts\n"));

/***/ })

});